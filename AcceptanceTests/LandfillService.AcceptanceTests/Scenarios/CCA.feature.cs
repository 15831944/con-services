// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.34209
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace LandfillService.AcceptanceTests.Scenarios
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class CCAFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CCA.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "CCA", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "CCA")))
            {
                LandfillService.AcceptanceTests.Scenarios.CCAFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CCA Ratio - whole project")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CCA")]
        public virtual void CCARatio_WholeProject()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CCA Ratio - whole project", ((string[])(null)));
#line 3
this.ScenarioSetup(scenarioInfo);
#line 4
 testRunner.Given("I have a landfill project \'Maddington\' with landfill sites \'MarylandsLandfill,Ami" +
                    "StadiumLandfill\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "IsJohnDoe"});
            table1.AddRow(new string[] {
                        "Cat A",
                        "false"});
            table1.AddRow(new string[] {
                        "Cat B",
                        "true"});
#line 5
  testRunner.And("I have the following machines", ((string)(null)), table1, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Project",
                        "Site",
                        "DateAsAnOffsetFromToday",
                        "Machine",
                        "LiftID",
                        "Incomplete",
                        "Complete",
                        "Overcomplete"});
            table2.AddRow(new string[] {
                        "Maddington",
                        "Marylands",
                        "-2",
                        "Cat A",
                        "null",
                        "20",
                        "35",
                        "45"});
            table2.AddRow(new string[] {
                        "Maddington",
                        "Marylands",
                        "-1",
                        "Cat B",
                        "1",
                        "15",
                        "5",
                        "80"});
            table2.AddRow(new string[] {
                        "Maddington",
                        "AmiStadium",
                        "-2",
                        "Cat A",
                        "null",
                        "35",
                        "15",
                        "50"});
            table2.AddRow(new string[] {
                        "Maddington",
                        "AmiStadium",
                        "-1",
                        "Cat B",
                        "1",
                        "10",
                        "60",
                        "30"});
            table2.AddRow(new string[] {
                        "Maddington",
                        "Maddington",
                        "-2",
                        "Cat A",
                        "null",
                        "65",
                        "20",
                        "15"});
            table2.AddRow(new string[] {
                        "Maddington",
                        "Maddington",
                        "-1",
                        "Cat B",
                        "1",
                        "25",
                        "30",
                        "45"});
#line 9
  testRunner.And("I have the following CCA data", ((string)(null)), table2, "And ");
#line 17
 testRunner.When("I request CCA ratio for site \'Maddington\' for the past \'2\' days", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Machine",
                        "DateAsAnOffsetFromToday",
                        "CCARatio"});
            table3.AddRow(new string[] {
                        "Cat A",
                        "-2",
                        "35"});
            table3.AddRow(new string[] {
                        "Cat A",
                        "-1",
                        "0"});
#line 18
 testRunner.Then("the response contains the following CCA ration data", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CCA Ratio - Individual site")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CCA")]
        public virtual void CCARatio_IndividualSite()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CCA Ratio - Individual site", ((string[])(null)));
#line 23
this.ScenarioSetup(scenarioInfo);
#line 24
 testRunner.Given("I have a landfill project \'Maddington\' with landfill sites \'MarylandsLandfill,Ami" +
                    "StadiumLandfill\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "IsJohnDoe"});
            table4.AddRow(new string[] {
                        "Cat A",
                        "false"});
            table4.AddRow(new string[] {
                        "Cat B",
                        "true"});
#line 25
  testRunner.And("I have the following machines", ((string)(null)), table4, "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Project",
                        "Site",
                        "DateAsAnOffsetFromToday",
                        "Machine",
                        "LiftID",
                        "Incomplete",
                        "Complete",
                        "Overcomplete"});
            table5.AddRow(new string[] {
                        "Maddington",
                        "Marylands",
                        "-2",
                        "Cat A",
                        "null",
                        "20",
                        "35",
                        "45"});
            table5.AddRow(new string[] {
                        "Maddington",
                        "Marylands",
                        "-1",
                        "Cat B",
                        "1",
                        "15",
                        "5",
                        "80"});
            table5.AddRow(new string[] {
                        "Maddington",
                        "AmiStadium",
                        "-2",
                        "Cat A",
                        "null",
                        "35",
                        "15",
                        "50"});
            table5.AddRow(new string[] {
                        "Maddington",
                        "AmiStadium",
                        "-1",
                        "Cat B",
                        "1",
                        "10",
                        "60",
                        "30"});
            table5.AddRow(new string[] {
                        "Maddington",
                        "Maddington",
                        "-2",
                        "Cat A",
                        "null",
                        "65",
                        "20",
                        "15"});
            table5.AddRow(new string[] {
                        "Maddington",
                        "Maddington",
                        "-1",
                        "Cat B",
                        "1",
                        "25",
                        "30",
                        "45"});
#line 29
  testRunner.And("I have the following CCA data", ((string)(null)), table5, "And ");
#line 37
 testRunner.When("I request CCA ratio for site \'Marylands\' for the past \'2\' days", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Machine",
                        "DateAsAnOffsetFromToday",
                        "CCARatio"});
            table6.AddRow(new string[] {
                        "Cat A",
                        "-2",
                        "80"});
            table6.AddRow(new string[] {
                        "Cat A",
                        "-1",
                        "0"});
#line 38
 testRunner.Then("the response contains the following CCA ration data", ((string)(null)), table6, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CCA Ratio - geofence not specified (defaults to whole project)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CCA")]
        public virtual void CCARatio_GeofenceNotSpecifiedDefaultsToWholeProject()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CCA Ratio - geofence not specified (defaults to whole project)", ((string[])(null)));
#line 43
this.ScenarioSetup(scenarioInfo);
#line 44
 testRunner.Given("I have a landfill project \'Maddington\' with landfill sites \'MarylandsLandfill,Ami" +
                    "StadiumLandfill\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "IsJohnDoe"});
            table7.AddRow(new string[] {
                        "Cat A",
                        "false"});
            table7.AddRow(new string[] {
                        "Cat B",
                        "true"});
#line 45
  testRunner.And("I have the following machines", ((string)(null)), table7, "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Project",
                        "Site",
                        "DateAsAnOffsetFromToday",
                        "Machine",
                        "LiftID",
                        "Incomplete",
                        "Complete",
                        "Overcomplete"});
            table8.AddRow(new string[] {
                        "Maddington",
                        "Marylands",
                        "-2",
                        "Cat A",
                        "null",
                        "20",
                        "35",
                        "45"});
            table8.AddRow(new string[] {
                        "Maddington",
                        "Marylands",
                        "-1",
                        "Cat B",
                        "1",
                        "15",
                        "5",
                        "80"});
            table8.AddRow(new string[] {
                        "Maddington",
                        "AmiStadium",
                        "-2",
                        "Cat A",
                        "null",
                        "35",
                        "15",
                        "50"});
            table8.AddRow(new string[] {
                        "Maddington",
                        "AmiStadium",
                        "-1",
                        "Cat B",
                        "1",
                        "10",
                        "60",
                        "30"});
            table8.AddRow(new string[] {
                        "Maddington",
                        "Maddington",
                        "-2",
                        "Cat A",
                        "null",
                        "65",
                        "20",
                        "15"});
            table8.AddRow(new string[] {
                        "Maddington",
                        "Maddington",
                        "-1",
                        "Cat B",
                        "1",
                        "25",
                        "30",
                        "45"});
#line 49
  testRunner.And("I have the following CCA data", ((string)(null)), table8, "And ");
#line 57
 testRunner.When("I request CCA ratio for site \'NotSpecified\' for the past \'2\' days", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Machine",
                        "DateAsAnOffsetFromToday",
                        "CCARatio"});
            table9.AddRow(new string[] {
                        "Cat A",
                        "-2",
                        "35"});
            table9.AddRow(new string[] {
                        "Cat A",
                        "-1",
                        "0"});
#line 58
 testRunner.Then("the response contains the following CCA ration data", ((string)(null)), table9, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CCA Ratio - dates not specified (defaults to two years)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CCA")]
        public virtual void CCARatio_DatesNotSpecifiedDefaultsToTwoYears()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CCA Ratio - dates not specified (defaults to two years)", ((string[])(null)));
#line 63
this.ScenarioSetup(scenarioInfo);
#line 64
 testRunner.Given("I have a landfill project \'Maddington\' with landfill sites \'MarylandsLandfill,Ami" +
                    "StadiumLandfill\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "IsJohnDoe"});
            table10.AddRow(new string[] {
                        "Cat A",
                        "false"});
            table10.AddRow(new string[] {
                        "Cat B",
                        "true"});
#line 65
  testRunner.And("I have the following machines", ((string)(null)), table10, "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Project",
                        "Site",
                        "DateAsAnOffsetFromToday",
                        "Machine",
                        "LiftID",
                        "Incomplete",
                        "Complete",
                        "Overcomplete"});
            table11.AddRow(new string[] {
                        "Maddington",
                        "Marylands",
                        "-2",
                        "Cat A",
                        "null",
                        "20",
                        "35",
                        "45"});
            table11.AddRow(new string[] {
                        "Maddington",
                        "Marylands",
                        "-1",
                        "Cat B",
                        "1",
                        "15",
                        "5",
                        "80"});
            table11.AddRow(new string[] {
                        "Maddington",
                        "AmiStadium",
                        "-2",
                        "Cat A",
                        "null",
                        "35",
                        "15",
                        "50"});
            table11.AddRow(new string[] {
                        "Maddington",
                        "AmiStadium",
                        "-1",
                        "Cat B",
                        "1",
                        "10",
                        "60",
                        "30"});
            table11.AddRow(new string[] {
                        "Maddington",
                        "Maddington",
                        "-2",
                        "Cat A",
                        "null",
                        "65",
                        "20",
                        "15"});
            table11.AddRow(new string[] {
                        "Maddington",
                        "Maddington",
                        "-1",
                        "Cat B",
                        "1",
                        "25",
                        "30",
                        "45"});
#line 69
  testRunner.And("I have the following CCA data", ((string)(null)), table11, "And ");
#line 77
 testRunner.When("I request CCA ratio for site \'NotSpecified\' for the past \'NotSpecified\' days", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 78
 testRunner.Then("the response contains two years of CCA ration data", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CCA Summary - whole project all machines all lifts")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CCA")]
        public virtual void CCASummary_WholeProjectAllMachinesAllLifts()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CCA Summary - whole project all machines all lifts", ((string[])(null)));
#line 80
this.ScenarioSetup(scenarioInfo);
#line 81
 testRunner.Given("I have a landfill project \'Maddington\' with landfill sites \'MarylandsLandfill,Ami" +
                    "StadiumLandfill\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "IsJohnDoe"});
            table12.AddRow(new string[] {
                        "Cat A",
                        "false"});
            table12.AddRow(new string[] {
                        "Cat B",
                        "true"});
            table12.AddRow(new string[] {
                        "Cat C",
                        "true"});
#line 82
  testRunner.And("I have the following machines", ((string)(null)), table12, "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Project",
                        "Site",
                        "DateAsAnOffsetFromToday",
                        "Machine",
                        "LiftID",
                        "Incomplete",
                        "Complete",
                        "Overcomplete"});
            table13.AddRow(new string[] {
                        "Maddington",
                        "Marylands",
                        "-1",
                        "Cat A",
                        "null",
                        "20",
                        "35",
                        "45"});
            table13.AddRow(new string[] {
                        "Maddington",
                        "Marylands",
                        "-1",
                        "Cat B",
                        "1",
                        "15",
                        "5",
                        "80"});
            table13.AddRow(new string[] {
                        "Maddington",
                        "AmiStadium",
                        "-1",
                        "Cat A",
                        "null",
                        "35",
                        "15",
                        "50"});
            table13.AddRow(new string[] {
                        "Maddington",
                        "AmiStadium",
                        "-1",
                        "Cat B",
                        "1",
                        "10",
                        "60",
                        "30"});
            table13.AddRow(new string[] {
                        "Maddington",
                        "Maddington",
                        "-1",
                        "Cat A",
                        "null",
                        "16",
                        "53",
                        "31"});
            table13.AddRow(new string[] {
                        "Maddington",
                        "Maddington",
                        "-1",
                        "Cat B",
                        "1",
                        "25",
                        "30",
                        "45"});
            table13.AddRow(new string[] {
                        "Maddington",
                        "Maddington",
                        "-1",
                        "Cat C",
                        "null",
                        "72",
                        "16",
                        "12"});
#line 87
  testRunner.And("I have the following CCA data", ((string)(null)), table13, "And ");
#line 96
 testRunner.When("I request CCA summary for lift \'AllLifts\' of \'JohnDoeOrNonJohnDoe\' machine \'AllMa" +
                    "chines\' in site \'Maddington\' for day -1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Machine",
                        "LiftID",
                        "Incomplete",
                        "Complete",
                        "Overcomplete"});
            table14.AddRow(new string[] {
                        "Cat A",
                        "null",
                        "16",
                        "53",
                        "31"});
            table14.AddRow(new string[] {
                        "Cat C",
                        "null",
                        "72",
                        "16",
                        "12"});
#line 97
 testRunner.Then("the response contains the following CCA summary data", ((string)(null)), table14, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CCA Summary - whole project specific machine all lifts")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CCA")]
        public virtual void CCASummary_WholeProjectSpecificMachineAllLifts()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CCA Summary - whole project specific machine all lifts", ((string[])(null)));
#line 102
this.ScenarioSetup(scenarioInfo);
#line 103
 testRunner.Given("I have a landfill project \'Maddington\' with landfill sites \'MarylandsLandfill,Ami" +
                    "StadiumLandfill\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "IsJohnDoe"});
            table15.AddRow(new string[] {
                        "Cat A",
                        "false"});
            table15.AddRow(new string[] {
                        "Cat B",
                        "true"});
            table15.AddRow(new string[] {
                        "Cat C",
                        "true"});
#line 104
  testRunner.And("I have the following machines", ((string)(null)), table15, "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Project",
                        "Site",
                        "DateAsAnOffsetFromToday",
                        "Machine",
                        "LiftID",
                        "Incomplete",
                        "Complete",
                        "Overcomplete"});
            table16.AddRow(new string[] {
                        "Maddington",
                        "Marylands",
                        "-1",
                        "Cat A",
                        "null",
                        "20",
                        "35",
                        "45"});
            table16.AddRow(new string[] {
                        "Maddington",
                        "Marylands",
                        "-1",
                        "Cat B",
                        "1",
                        "15",
                        "5",
                        "80"});
            table16.AddRow(new string[] {
                        "Maddington",
                        "AmiStadium",
                        "-1",
                        "Cat A",
                        "null",
                        "35",
                        "15",
                        "50"});
            table16.AddRow(new string[] {
                        "Maddington",
                        "AmiStadium",
                        "-1",
                        "Cat B",
                        "1",
                        "10",
                        "60",
                        "30"});
            table16.AddRow(new string[] {
                        "Maddington",
                        "Maddington",
                        "-1",
                        "Cat A",
                        "null",
                        "16",
                        "53",
                        "31"});
            table16.AddRow(new string[] {
                        "Maddington",
                        "Maddington",
                        "-1",
                        "Cat B",
                        "1",
                        "25",
                        "30",
                        "45"});
            table16.AddRow(new string[] {
                        "Maddington",
                        "Maddington",
                        "-1",
                        "Cat C",
                        "null",
                        "72",
                        "16",
                        "12"});
#line 109
  testRunner.And("I have the following CCA data", ((string)(null)), table16, "And ");
#line 118
 testRunner.When("I request CCA summary for lift \'AllLifts\' of \'JohnDoe\' machine \'Cat C\' in site \'M" +
                    "addington\' for day -1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Machine",
                        "LiftID",
                        "Incomplete",
                        "Complete",
                        "Overcomplete"});
            table17.AddRow(new string[] {
                        "Cat C",
                        "null",
                        "72",
                        "16",
                        "12"});
#line 119
 testRunner.Then("the response contains the following CCA summary data", ((string)(null)), table17, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CCA Summary - specific site specific machine specific lift")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CCA")]
        public virtual void CCASummary_SpecificSiteSpecificMachineSpecificLift()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CCA Summary - specific site specific machine specific lift", ((string[])(null)));
#line 123
this.ScenarioSetup(scenarioInfo);
#line 124
 testRunner.Given("I have a landfill project \'Maddington\' with landfill sites \'MarylandsLandfill,Ami" +
                    "StadiumLandfill\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "IsJohnDoe"});
            table18.AddRow(new string[] {
                        "Cat A",
                        "false"});
            table18.AddRow(new string[] {
                        "Cat B",
                        "true"});
            table18.AddRow(new string[] {
                        "Cat C",
                        "true"});
#line 125
  testRunner.And("I have the following machines", ((string)(null)), table18, "And ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Project",
                        "Site",
                        "DateAsAnOffsetFromToday",
                        "Machine",
                        "LiftID",
                        "Incomplete",
                        "Complete",
                        "Overcomplete"});
            table19.AddRow(new string[] {
                        "Maddington",
                        "Marylands",
                        "-1",
                        "Cat A",
                        "null",
                        "20",
                        "35",
                        "45"});
            table19.AddRow(new string[] {
                        "Maddington",
                        "Marylands",
                        "-1",
                        "Cat B",
                        "1",
                        "15",
                        "5",
                        "80"});
            table19.AddRow(new string[] {
                        "Maddington",
                        "AmiStadium",
                        "-1",
                        "Cat A",
                        "null",
                        "35",
                        "15",
                        "50"});
            table19.AddRow(new string[] {
                        "Maddington",
                        "AmiStadium",
                        "-1",
                        "Cat B",
                        "1",
                        "10",
                        "60",
                        "30"});
            table19.AddRow(new string[] {
                        "Maddington",
                        "Maddington",
                        "-1",
                        "Cat A",
                        "null",
                        "16",
                        "53",
                        "31"});
            table19.AddRow(new string[] {
                        "Maddington",
                        "Maddington",
                        "-1",
                        "Cat B",
                        "1",
                        "25",
                        "30",
                        "45"});
            table19.AddRow(new string[] {
                        "Maddington",
                        "Maddington",
                        "-1",
                        "Cat C",
                        "null",
                        "72",
                        "16",
                        "12"});
#line 130
  testRunner.And("I have the following CCA data", ((string)(null)), table19, "And ");
#line 139
 testRunner.When("I request CCA summary for lift \'1\' of \'JohnDoe\' machine \'Cat B\' in site \'Maryland" +
                    "s\' for day -1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Machine",
                        "LiftID",
                        "Incomplete",
                        "Complete",
                        "Overcomplete"});
            table20.AddRow(new string[] {
                        "Cat B",
                        "1",
                        "15",
                        "5",
                        "80"});
#line 140
 testRunner.Then("the response contains the following CCA summary data", ((string)(null)), table20, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CCA Summary - geofence not specified (defaults to whole project)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CCA")]
        public virtual void CCASummary_GeofenceNotSpecifiedDefaultsToWholeProject()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CCA Summary - geofence not specified (defaults to whole project)", ((string[])(null)));
#line 144
this.ScenarioSetup(scenarioInfo);
#line 145
 testRunner.Given("I have a landfill project \'Maddington\' with landfill sites \'MarylandsLandfill,Ami" +
                    "StadiumLandfill\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "IsJohnDoe"});
            table21.AddRow(new string[] {
                        "Cat A",
                        "false"});
            table21.AddRow(new string[] {
                        "Cat B",
                        "true"});
            table21.AddRow(new string[] {
                        "Cat C",
                        "true"});
#line 146
  testRunner.And("I have the following machines", ((string)(null)), table21, "And ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Project",
                        "Site",
                        "DateAsAnOffsetFromToday",
                        "Machine",
                        "LiftID",
                        "Incomplete",
                        "Complete",
                        "Overcomplete"});
            table22.AddRow(new string[] {
                        "Maddington",
                        "Marylands",
                        "-1",
                        "Cat A",
                        "null",
                        "20",
                        "35",
                        "45"});
            table22.AddRow(new string[] {
                        "Maddington",
                        "Marylands",
                        "-1",
                        "Cat B",
                        "1",
                        "15",
                        "5",
                        "80"});
            table22.AddRow(new string[] {
                        "Maddington",
                        "AmiStadium",
                        "-1",
                        "Cat A",
                        "null",
                        "35",
                        "15",
                        "50"});
            table22.AddRow(new string[] {
                        "Maddington",
                        "AmiStadium",
                        "-1",
                        "Cat B",
                        "1",
                        "10",
                        "60",
                        "30"});
            table22.AddRow(new string[] {
                        "Maddington",
                        "Maddington",
                        "-1",
                        "Cat A",
                        "null",
                        "16",
                        "53",
                        "31"});
            table22.AddRow(new string[] {
                        "Maddington",
                        "Maddington",
                        "-1",
                        "Cat B",
                        "1",
                        "25",
                        "30",
                        "45"});
            table22.AddRow(new string[] {
                        "Maddington",
                        "Maddington",
                        "-1",
                        "Cat C",
                        "null",
                        "72",
                        "16",
                        "12"});
#line 151
  testRunner.And("I have the following CCA data", ((string)(null)), table22, "And ");
#line 160
 testRunner.When("I request CCA summary for lift \'AllLifts\' of \'JohnDoeOrNonJohnDoe\' machine \'AllMa" +
                    "chines\' in site \'NotSpecified\' for day -1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Machine",
                        "LiftID",
                        "Incomplete",
                        "Complete",
                        "Overcomplete"});
            table23.AddRow(new string[] {
                        "Cat A",
                        "null",
                        "16",
                        "53",
                        "31"});
            table23.AddRow(new string[] {
                        "Cat C",
                        "null",
                        "72",
                        "16",
                        "12"});
#line 161
 testRunner.Then("the response contains the following CCA summary data", ((string)(null)), table23, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
