// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ProductionDataSvc.AcceptanceTests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class SurveyedSurfaceFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "SurveyedSurface.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "SurveyedSurface", "I should be able to get, put, delete and post surveyd surfaces", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "SurveyedSurface")))
            {
                ProductionDataSvc.AcceptanceTests.SurveyedSurfaceFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 4
#line 5
 testRunner.Given("the Surveyd surface service URI \"/Api/v1/projects/{0}/surveyedsurfaces\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 6
  testRunner.And("using repository \"SurveyedSurfaceRequest.json\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 7
  testRunner.And("the Surveyd surface service POST URI \"/Api/v1/surveyedsurfaces\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SurveyedSurface - Get Stored Surface")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SurveyedSurface")]
        public virtual void SurveyedSurface_GetStoredSurface()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SurveyedSurface - Get Stored Surface", ((string[])(null)));
#line 9
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 10
 testRunner.Given("a project Id 1001151", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 11
 testRunner.When("I request surveyd SurveyedSurfaces", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "SurveyedSurfaceId",
                        "filespaceId",
                        "fileName",
                        "AsAtDate"});
            table1.AddRow(new string[] {
                        "3075",
                        "u3bdc38d6-1afe-470e-8c1c-fc241d4c5e01",
                        "110411 Topo Haul Road_2011-04-10T110000Z.TTM",
                        "2011-04-10T11:00:00"});
            table1.AddRow(new string[] {
                        "1234",
                        "u3bdc38d6-1afe-470e-8c1c-fc241d4c5e01",
                        "ML3 - Marylands Road - Marylands.ttm",
                        "2014-12-02T02:14:33.115"});
#line 12
 testRunner.Then("the following machine designs should be returned", ((string)(null)), table1, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SurveyedSurface - Delete Stored Surveyd Surface")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SurveyedSurface")]
        public virtual void SurveyedSurface_DeleteStoredSurveydSurface()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SurveyedSurface - Delete Stored Surveyd Surface", ((string[])(null)));
#line 17
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 18
 testRunner.Given("a project Id 1001151", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 19
 testRunner.When("I delete surveyd SurveyedSurfaces", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 20
  testRunner.And("I request surveyd SurveyedSurfaces", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "SurveyedSurfaceId",
                        "filespaceId",
                        "fileName",
                        "AsAtDate"});
            table2.AddRow(new string[] {
                        "3075",
                        "u3bdc38d6-1afe-470e-8c1c-fc241d4c5e01",
                        "110411 Topo Haul Road_2011-04-10T110000Z.TTM",
                        "2011-04-10T11:00:00"});
#line 21
 testRunner.Then("the following machine designs should be returned", ((string)(null)), table2, "Then ");
#line 24
 testRunner.When("I post surveyd surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 25
  testRunner.And("I request surveyd SurveyedSurfaces", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "SurveyedSurfaceId",
                        "filespaceId",
                        "fileName",
                        "AsAtDate"});
            table3.AddRow(new string[] {
                        "3075",
                        "u3bdc38d6-1afe-470e-8c1c-fc241d4c5e01",
                        "110411 Topo Haul Road_2011-04-10T110000Z.TTM",
                        "2011-04-10T11:00:00"});
            table3.AddRow(new string[] {
                        "1234",
                        "u3bdc38d6-1afe-470e-8c1c-fc241d4c5e01",
                        "ML3 - Marylands Road - Marylands.ttm",
                        "2014-12-02T02:14:33.115"});
#line 26
 testRunner.Then("the following machine designs should be returned", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SurveyedSurface - Bad Request (Invalid Project ID)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SurveyedSurface")]
        public virtual void SurveyedSurface_BadRequestInvalidProjectID()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SurveyedSurface - Bad Request (Invalid Project ID)", ((string[])(null)));
#line 31
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 32
 testRunner.Given("a project Id 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 33
 testRunner.When("I request Surveyed Surface expecting Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 34
 testRunner.Then("the response should contain Code -2 and Message \"Invalid project ID: 0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SurveyedSurface - Bad Request (Duplicate Surveyed Surface)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SurveyedSurface")]
        public virtual void SurveyedSurface_BadRequestDuplicateSurveyedSurface()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SurveyedSurface - Bad Request (Duplicate Surveyed Surface)", ((string[])(null)));
#line 36
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 37
 testRunner.Given("a project Id 1001151", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 38
 testRunner.When("I Post Surveyd Surface \"PostStandardFile\" expecting Bad Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 39
 testRunner.Then("the Post response should contain Code -3 and Message \"Failed to process Surveyed " +
                    "Surface data request.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
