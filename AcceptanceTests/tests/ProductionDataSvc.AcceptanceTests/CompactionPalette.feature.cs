// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ProductionDataSvc.AcceptanceTests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class CompactionPaletteFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CompactionPalette.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "CompactionPalette", "I should be able to request compaction palettes", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "CompactionPalette")))
            {
                ProductionDataSvc.AcceptanceTests.CompactionPaletteFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Compaction Get Elevation Palette When No Elevation Data")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CompactionPalette")]
        public virtual void CompactionGetElevationPaletteWhenNoElevationData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Compaction Get Elevation Palette When No Elevation Data", ((string[])(null)));
#line 4
 this.ScenarioSetup(scenarioInfo);
#line 5
 testRunner.Given("the Compaction Elevation Palette service URI \"/api/v2/compaction/elevationpalette" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 6
  testRunner.And("a projectUid \"ff91dd40-1569-4765-a2bc-014321f76ace\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 7
  testRunner.And("a startUtc \"2017-01-01\" and an EndUtc \"2017-01-01\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
 testRunner.When("I request Elevation Palette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 9
 testRunner.Then("the Elevation Palette result should be", "{\r\n  \"palette\": null,\r\n   \"Code\": -4,\r\n  \"Message\": \"No elevation range\"\r\n}", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Compaction Get Elevation Palette")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CompactionPalette")]
        public virtual void CompactionGetElevationPalette()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Compaction Get Elevation Palette", ((string[])(null)));
#line 18
  this.ScenarioSetup(scenarioInfo);
#line 19
 testRunner.Given("the Compaction Elevation Palette service URI \"/api/v2/compaction/elevationpalette" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 20
  testRunner.And("a projectUid \"ff91dd40-1569-4765-a2bc-014321f76ace\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
 testRunner.When("I request Elevation Palette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 22
 testRunner.Then("the Elevation Palette result should be", "{\r\n  \"palette\": {\r\n    \"colorValues\": [\r\n      {\r\n        \"color\": 13107200,\r\n   " +
                    "     \"value\": 591.9539794921875\r\n      },\r\n      {\r\n        \"color\": 16711680,\r\n" +
                    "        \"value\": 593.02544759114585\r\n      },\r\n      {\r\n        \"color\": 1476096" +
                    "0,\r\n        \"value\": 594.0969156901042\r\n      },\r\n      {\r\n        \"color\": 1673" +
                    "4720,\r\n        \"value\": 595.16838378906255\r\n      },\r\n      {\r\n        \"color\": " +
                    "16744960,\r\n        \"value\": 596.23985188802078\r\n      },\r\n      {\r\n        \"colo" +
                    "r\": 16755200,\r\n        \"value\": 597.31131998697913\r\n      },\r\n      {\r\n        \"" +
                    "color\": 16762880,\r\n        \"value\": 598.38278808593748\r\n      },\r\n      {\r\n     " +
                    "   \"color\": 16768000,\r\n        \"value\": 599.45425618489583\r\n      },\r\n      {\r\n " +
                    "       \"color\": 16442880,\r\n        \"value\": 600.52572428385417\r\n      },\r\n      " +
                    "{\r\n        \"color\": 14476800,\r\n        \"value\": 601.59719238281252\r\n      },\r\n  " +
                    "    {\r\n        \"color\": 13821440,\r\n        \"value\": 602.66866048177087\r\n      }," +
                    "\r\n      {\r\n        \"color\": 13166080,\r\n        \"value\": 603.74012858072922\r\n    " +
                    "  },\r\n      {\r\n        \"color\": 11855360,\r\n        \"value\": 604.81159667968745\r\n" +
                    "      },\r\n      {\r\n        \"color\": 9889280,\r\n        \"value\": 605.8830647786458" +
                    "\r\n      },\r\n      {\r\n        \"color\": 8578560,\r\n        \"value\": 606.95453287760" +
                    "415\r\n      },\r\n      {\r\n        \"color\": 6615040,\r\n        \"value\": 608.02600097" +
                    "65625\r\n      },\r\n      {\r\n        \"color\": 65280,\r\n        \"value\": 609.09746907" +
                    "552085\r\n      },\r\n      {\r\n        \"color\": 61540,\r\n        \"value\": 610.1689371" +
                    "744792\r\n      },\r\n      {\r\n        \"color\": 59010,\r\n        \"value\": 611.2404052" +
                    "7343755\r\n      },\r\n      {\r\n        \"color\": 59030,\r\n        \"value\": 612.311873" +
                    "37239578\r\n      },\r\n      {\r\n        \"color\": 59060,\r\n        \"value\": 613.38334" +
                    "147135413\r\n      },\r\n      {\r\n        \"color\": 59080,\r\n        \"value\": 614.4548" +
                    "0957031248\r\n      },\r\n      {\r\n        \"color\": 59090,\r\n        \"value\": 615.526" +
                    "27766927083\r\n      },\r\n      {\r\n        \"color\": 56540,\r\n        \"value\": 616.59" +
                    "774576822917\r\n      },\r\n      {\r\n        \"color\": 51430,\r\n        \"value\": 617.6" +
                    "6921386718752\r\n      },\r\n      {\r\n        \"color\": 46320,\r\n        \"value\": 618." +
                    "74068196614587\r\n      },\r\n      {\r\n        \"color\": 38645,\r\n        \"value\": 619" +
                    ".81215006510422\r\n      },\r\n      {\r\n        \"color\": 30970,\r\n        \"value\": 62" +
                    "0.88361816406245\r\n      },\r\n      {\r\n        \"color\": 23295,\r\n        \"value\": 6" +
                    "21.9550862630208\r\n      },\r\n      {\r\n        \"color\": 18175,\r\n        \"value\": 6" +
                    "23.02655436197915\r\n      },\r\n      {\r\n        \"color\": 255,\r\n        \"value\": 62" +
                    "4.0980224609375\r\n      }\r\n    ],\r\n    \"aboveLastColor\": 8388736,\r\n    \"belowFirs" +
                    "tColor\": 16711935\r\n  },\r\n  \"Code\": 0,\r\n  \"Message\": \"success\"\r\n}", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Compaction Get Palettes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CompactionPalette")]
        public virtual void CompactionGetPalettes()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Compaction Get Palettes", ((string[])(null)));
#line 160
  this.ScenarioSetup(scenarioInfo);
#line 161
 testRunner.Given("the Compaction Palettes service URI \"/api/v2/compaction/colorpalettes\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 162
  testRunner.And("a projectUid \"ff91dd40-1569-4765-a2bc-014321f76ace\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 163
 testRunner.When("I request Palettes", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 164
 testRunner.Then("the Palettes result should be", "{\r\n  \"cmvDetailPalette\": {\r\n    \"colorValues\": [\r\n      {\r\n      \"color\": 2971523" +
                    ",\r\n      \"value\": 0.0\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"color\": 4430812,\r\n\t\t\t\"value\": 10.0\r\n\t\t},\r\n" +
                    "\t\t{\r\n\t\t\t\"color\": 12509169,\r\n\t\t\t\"value\": 20.0\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"color\": 10341991,\r\n" +
                    "\t\t\t\"value\": 30.0\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"color\": 7053374,\r\n\t\t\t\"value\": 40.0\r\n\t\t},\r\n\t\t{\r\n" +
                    "\t\t\t\"color\": 3828517,\r\n\t\t\t\"value\": 50.0\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"color\": 16174803,\r\n\t\t\t\"va" +
                    "lue\": 60.0\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"color\": 13990524,\r\n\t\t\t\"value\": 70.0\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"c" +
                    "olor\": 12660791,\r\n\t\t\t\"value\": 80.0\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"color\": 15105570,\r\n\t\t\t\"value\"" +
                    ": 90.0\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"color\": 14785888,\r\n\t\t\t\"value\": 100.0\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"colo" +
                    "r\": 15190446,\r\n\t\t\t\"value\": 110.0\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"color\": 5182823,\r\n\t\t\t\"value\": 1" +
                    "20.0\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"color\": 9259433,\r\n\t\t\t\"value\": 130.0\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"color\":" +
                    " 13740258,\r\n\t\t\t\"value\": 140.0\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"color\": 1971179,\r\n\t\t\t\"value\": 150." +
                    "0\r\n\t\t}\r\n    ],\r\n    \"aboveLastColor\": null,\r\n    \"belowFirstColor\": null\r\n  },\r\n" +
                    "  \"passCountDetailPalette\": {\r\n    \"colorValues\": [\r\n      {\r\n        \"color\": 2" +
                    "971523,\r\n        \"value\": 1\r\n      },\r\n      {\r\n        \"color\": 4430812,\r\n     " +
                    "   \"value\": 2\r\n      },\r\n      {\r\n        \"color\": 12509169,\r\n        \"value\": 3" +
                    "\r\n      },\r\n      {\r\n        \"color\": 10341991,\r\n        \"value\": 4\r\n      },\r\n " +
                    "     {\r\n        \"color\": 7053374,\r\n        \"value\": 5\r\n      },\r\n      {\r\n      " +
                    "  \"color\": 3828517,\r\n        \"value\": 6\r\n      },\r\n      {\r\n        \"color\": 161" +
                    "74803,\r\n        \"value\": 7\r\n      },\r\n      {\r\n        \"color\": 13990524,\r\n     " +
                    "   \"value\": 8\r\n      }\r\n    ],\r\n    \"aboveLastColor\": 12660791,\r\n    \"belowFirst" +
                    "Color\": null\r\n  },\r\n  \"passCountSummaryPalette\": {\r\n    \"aboveTargetColor\": 1395" +
                    "9168,\r\n    \"onTargetColor\": 9159498,\r\n    \"belowTargetColor\": 87963\r\n  },\r\n  \"cu" +
                    "tFillPalette\": {\r\n    \"colorValues\": [\r\n      {\r\n        \"color\": 11789820,\r\n   " +
                    "     \"value\": -0.2\r\n      },\r\n      {\r\n        \"color\": 236517,\r\n        \"value\"" +
                    ": -0.1\r\n      },\r\n      {\r\n        \"color\": 87963,\r\n        \"value\": -0.05\r\n    " +
                    "  },\r\n      {\r\n        \"color\": 9159498,\r\n        \"value\": 0\r\n      },\r\n      {\r" +
                    "\n        \"color\": 16764370,\r\n        \"value\": 0.05\r\n      },\r\n      {\r\n        \"" +
                    "color\": 15037299,\r\n        \"value\": 0.1\r\n      },\r\n      {\r\n        \"color\": 139" +
                    "59168,\r\n        \"value\": 0.2\r\n      }\r\n    ],\r\n    \"aboveLastColor\": null,\r\n    " +
                    "\"belowFirstColor\": null\r\n  },\r\n  \"temperatureSummaryPalette\": {\r\n    \"aboveTarge" +
                    "tColor\": 13959168,\r\n    \"onTargetColor\": 9159498,\r\n    \"belowTargetColor\": 87963" +
                    "\r\n  },\r\n  \"cmvSummaryPalette\": {\r\n    \"aboveTargetColor\": 13959168,\r\n    \"onTarg" +
                    "etColor\": 9159498,\r\n    \"belowTargetColor\": 87963\r\n  },\r\n  \"mdpSummaryPalette\": " +
                    "{\r\n    \"aboveTargetColor\": 13959168,\r\n    \"onTargetColor\": 9159498,\r\n    \"belowT" +
                    "argetColor\": 87963\r\n  },\r\n  \"cmvPercentChangePalette\": {\r\n    \"colorValues\": [\r\n" +
                    "      {\r\n        \"color\": 9159498,\r\n        \"value\": 5\r\n      },\r\n      {\r\n     " +
                    "   \"color\": 16764370,\r\n        \"value\": 20\r\n      },\r\n      {\r\n        \"color\": " +
                    "15037299,\r\n        \"value\": 50\r\n      }\r\n    ],\r\n    \"aboveLastColor\": 13959168," +
                    "\r\n    \"belowFirstColor\": 33554431\r\n  },\r\n  \"speedSummaryPalette\": {\r\n    \"aboveT" +
                    "argetColor\": 13959168,\r\n    \"onTargetColor\": 9159498,\r\n    \"belowTargetColor\": 8" +
                    "7963\r\n  },\r\n  \"temperatureDetailPalette\": {\r\n    \"colorValues\": [\r\n      {\r\n    " +
                    "    \"color\": 2971523,\r\n        \"value\": 70\r\n      },\r\n      {\r\n        \"color\": " +
                    "4430812,\r\n        \"value\": 80\r\n      },\r\n      {\r\n        \"color\": 12509169,\r\n  " +
                    "      \"value\": 90\r\n      },\r\n      {\r\n        \"color\": 14479047,\r\n        \"value" +
                    "\": 100\r\n      },\r\n      {\r\n        \"color\": 10341991,\r\n        \"value\": 110\r\n   " +
                    "   },\r\n      {\r\n        \"color\": 7053374,\r\n        \"value\": 120\r\n      },\r\n     " +
                    " {\r\n        \"color\": 3828517,\r\n        \"value\": 130\r\n      },\r\n      {\r\n        " +
                    "\"color\": 16174803,\r\n        \"value\": 140\r\n      },\r\n      {\r\n        \"color\": 13" +
                    "990524,\r\n        \"value\": 150\r\n      },\r\n      {\r\n        \"color\": 12660791,\r\n  " +
                    "      \"value\": 160\r\n      }\r\n    ],\r\n    \"aboveLastColor\": null,\r\n    \"belowFirs" +
                    "tColor\": null\r\n  },\r\n  \"Code\": 0,\r\n  \"Message\": \"success\"\r\n}", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
