// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18408
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ProductionDataSvc.AcceptanceTests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class OverrideDesignsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "OverrideDesigns.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "OverrideDesigns", "I should be able to override designs for a machine, undo overriden design for a m" +
                    "achine, filter by overriden design by getting elevation in a cell with multiple " +
                    "cell passes", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "OverrideDesigns")))
            {
                ProductionDataSvc.AcceptanceTests.OverrideDesignsFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 4
#line 5
 testRunner.Given("the edit data service URI \"/api/v1/productiondata/edit\", the get data service URI" +
                    " \"/api/v1/productiondata/getedits\", request parameter repository file \"OverrideD" +
                    "esignParamRepository.json\", result repository file \"OverrideDesignResultReposito" +
                    "ry.json\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        public virtual void OverrideDesignGetListOfOverridenDesignsUndoOverrideDesign(string overrideDesignsRequest, string getOverrideDesignsRequest, string undoDesignsRequest, string getInitialDesignListResponse, string getWithOverrideDesignListResponse, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Override design, get list of overriden designs, undo override design", exampleTags);
#line 7
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 8
 testRunner.When(string.Format("I override design with \"{0}\" supplying a request from a repository", overrideDesignsRequest), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
 testRunner.And(string.Format("I get the list of overriden designs supplying a request \"{0}\" from a repository a" +
                        "nd save it to \"<AfterOverride>\"", getOverrideDesignsRequest), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
 testRunner.And(string.Format("I undo design \"{0}\" supplying a request from a repository", undoDesignsRequest), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
 testRunner.And(string.Format("I get the list of overriden designs supplying a request \"{0}\" from a repository a" +
                        "nd save it to \"<AfterUndo>\"", getOverrideDesignsRequest), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
 testRunner.Then(string.Format("The override design list before undo should include design \"{0}\"", getWithOverrideDesignListResponse), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 13
 testRunner.And(string.Format("The override design list should include only initial designs in \"{0}\"", getInitialDesignListResponse), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Override design, get list of overriden designs, undo override design")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "OverrideDesigns")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "DesignOverrideBlankInitialEvents")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OverrideDesignsRequest", "DesignOverrideBlankInitialEvents")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GetOverrideDesignsRequest", "GetDesignOverrideBlankInitialEventsRequest")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UndoDesignsRequest", "UndoDesignOverrideBlankInitialEventsRequest")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GetInitialDesignListResponse", "DesignOverrideAfterUndoBlankInitialEventsResponse")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GetWithOverrideDesignListResponse", "DesignOverrideBeforeUndoBlankInitialEventsResponse")]
        public virtual void OverrideDesignGetListOfOverridenDesignsUndoOverrideDesign_DesignOverrideBlankInitialEvents()
        {
            this.OverrideDesignGetListOfOverridenDesignsUndoOverrideDesign("DesignOverrideBlankInitialEvents", "GetDesignOverrideBlankInitialEventsRequest", "UndoDesignOverrideBlankInitialEventsRequest", "DesignOverrideAfterUndoBlankInitialEventsResponse", "DesignOverrideBeforeUndoBlankInitialEventsResponse", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Override design, get list of overriden designs, undo override design")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "OverrideDesigns")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "LayerOverrideBlankInitialEvents")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OverrideDesignsRequest", "LayerOverrideBlankInitialEvents")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GetOverrideDesignsRequest", "GetLayerOverrideBlankInitialEventsRequest")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UndoDesignsRequest", "UndoLayerOverrideBlankInitialEventsRequest")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GetInitialDesignListResponse", "LayerOverrideAfterUndoBlankInitialEventsResponse")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GetWithOverrideDesignListResponse", "LayerOverrideBeforeUndoBlankInitialEventsResponse")]
        public virtual void OverrideDesignGetListOfOverridenDesignsUndoOverrideDesign_LayerOverrideBlankInitialEvents()
        {
            this.OverrideDesignGetListOfOverridenDesignsUndoOverrideDesign("LayerOverrideBlankInitialEvents", "GetLayerOverrideBlankInitialEventsRequest", "UndoLayerOverrideBlankInitialEventsRequest", "LayerOverrideAfterUndoBlankInitialEventsResponse", "LayerOverrideBeforeUndoBlankInitialEventsResponse", ((string[])(null)));
        }
        
        public virtual void OverrideDesignFilterDataByOverridenDesignGettingCellDatumElevationUndoOverrideDesign(string overrideDesignsRequest, string cellDatumRequest, string resultDatumAfterOverride, string undoDesignsForCellDatum, string cellDatumRequestAfterUndo, string resultDatumInitialResult, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Override design, filter data by overriden design getting cell datum elevation, un" +
                    "do override design", exampleTags);
#line 20
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 21
 testRunner.Given("the CellDatum service URI \"/api/v1/productiondata/cells/datum\", CellDatum request" +
                    " parameter repository file \"OverrideDesignParamRepository.json\", CellDatum resul" +
                    "t repository file \"OverrideDesignResultRepository.json\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 22
 testRunner.When(string.Format("I override design with \"{0}\" supplying a request from a repository", overrideDesignsRequest), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 23
 testRunner.And(string.Format("I request Production Data Cell Datum supplying \"{0}\" paramters from the repositor" +
                        "y", cellDatumRequest), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
 testRunner.Then(string.Format("the Production Data Cell Datum response should match \"{0}\" result from the reposi" +
                        "tory", resultDatumAfterOverride), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 25
 testRunner.When(string.Format("I undo design \"{0}\" supplying a request from a repository", undoDesignsForCellDatum), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 26
 testRunner.And(string.Format("I request Production Data Cell Datum supplying \"{0}\" paramters from the repositor" +
                        "y", cellDatumRequestAfterUndo), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
 testRunner.Then(string.Format("the Production Data Cell Datum response should match \"{0}\" result from the reposi" +
                        "tory", resultDatumInitialResult), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Override design, filter data by overriden design getting cell datum elevation, un" +
            "do override design")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "OverrideDesigns")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "DesignOverrideForFiltering")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OverrideDesignsRequest", "DesignOverrideForFiltering")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CellDatumRequest", "CellDatumRequestFilteredByDesign4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ResultDatumAfterOverride", "ResultDatumAfterOverrideResponse")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UndoDesignsForCellDatum", "UndoDesignsForCellDatumRequest")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CellDatumRequestAfterUndo", "CellDatumRequestFilteredByDesign4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ResultDatumInitialResult", "NoneDatumResult")]
        public virtual void OverrideDesignFilterDataByOverridenDesignGettingCellDatumElevationUndoOverrideDesign_DesignOverrideForFiltering()
        {
            this.OverrideDesignFilterDataByOverridenDesignGettingCellDatumElevationUndoOverrideDesign("DesignOverrideForFiltering", "CellDatumRequestFilteredByDesign4", "ResultDatumAfterOverrideResponse", "UndoDesignsForCellDatumRequest", "CellDatumRequestFilteredByDesign4", "NoneDatumResult", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Override design, filter data by overriden design getting cell datum elevation, un" +
            "do override design")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "OverrideDesigns")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "LayerOverrideForFiltering")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OverrideDesignsRequest", "LayerOverrideForFiltering")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CellDatumRequest", "CellDatumRequestFilteredByLayer15")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ResultDatumAfterOverride", "ResultDatumAfterLayerOverrideResponse")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UndoDesignsForCellDatum", "UndoLayerForCellDatumRequest")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CellDatumRequestAfterUndo", "CellDatumRequestFilteredByLayer15")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ResultDatumInitialResult", "NoneDatumResult")]
        public virtual void OverrideDesignFilterDataByOverridenDesignGettingCellDatumElevationUndoOverrideDesign_LayerOverrideForFiltering()
        {
            this.OverrideDesignFilterDataByOverridenDesignGettingCellDatumElevationUndoOverrideDesign("LayerOverrideForFiltering", "CellDatumRequestFilteredByLayer15", "ResultDatumAfterLayerOverrideResponse", "UndoLayerForCellDatumRequest", "CellDatumRequestFilteredByLayer15", "NoneDatumResult", ((string[])(null)));
        }
    }
}
#pragma warning restore
#endregion
