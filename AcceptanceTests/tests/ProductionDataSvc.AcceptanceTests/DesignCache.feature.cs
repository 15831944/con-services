// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ProductionDataSvc.AcceptanceTests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class DesignCacheFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "DesignCache.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "DesignCache", "I should be able to delete files from the design cache.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "DesignCache")))
            {
                ProductionDataSvc.AcceptanceTests.DesignCacheFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("DesignCache - Delete a Design Surface From Cache")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "DesignCache")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.IgnoreAttribute()]
        public virtual void DesignCache_DeleteADesignSurfaceFromCache()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("DesignCache - Delete a Design Surface From Cache", new string[] {
                        "ignore"});
#line 57
this.ScenarioSetup(scenarioInfo);
#line 58
 testRunner.Given("the DeleteDesignCacheFile service URI \"/api/v1/designcache/delete\", a project 100" +
                    "1158 and a file named \"Building Pad - Building_Pad.ttm\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 59
  testRunner.And("the following Summary Volumes request is sent to \"/api/v1/volumes/summary\" to mak" +
                    "e sure the design file is downloaded if required", @"{
	""projectID"": 1001158,
	""volumeCalcType"": 6,
	""baseDesignDescriptor"": {
		""id"": -1,
		""file"": {
			""filespaceId"": ""u3bdc38d6-1afe-470e-8c1c-fc241d4c5e01"",
			""path"": ""/77561/1158"",
			""fileName"": ""Building Pad - Building_Pad.ttm""
		},
		""offset"": 0
	},
	""topFilter"": {
		""polygonGrid"": [
			{ ""x"": 2860.065, ""y"": 1221.277 }, { ""x"": 2860.766, ""y"": 1221.284 },
			{ ""x"": 2860.758, ""y"": 1220.609 }, { ""x"": 2860.072, ""y"": 1220.594 }
	],
	""returnEarliest"": false
	}
}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
 testRunner.When("I delete this file", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 83
 testRunner.Then("the file should no longer exist in the design cache", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("DesignCache - Automatically Download a Design Surface Into Cache")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "DesignCache")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.IgnoreAttribute()]
        public virtual void DesignCache_AutomaticallyDownloadADesignSurfaceIntoCache()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("DesignCache - Automatically Download a Design Surface Into Cache", new string[] {
                        "ignore"});
#line 86
this.ScenarioSetup(scenarioInfo);
#line 87
 testRunner.Given("the DeleteDesignCacheFile service URI \"/api/v1/designcache/delete\", a project 100" +
                    "1158 and a file named \"Building Pad - Building_Pad.ttm\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 88
  testRunner.And("the file does not already exist in the design cache", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 89
 testRunner.When("the following Summary Volumes request is sent to \"/api/v1/volumes/summary\"", @"{
	""projectID"": 1001158,
	""volumeCalcType"": 6,
	""baseDesignDescriptor"": {
		""id"": -1,
		""file"": {
			""filespaceId"": ""u3bdc38d6-1afe-470e-8c1c-fc241d4c5e01"",
			""path"": ""/77561/1158"",
			""fileName"": ""Building Pad - Building_Pad.ttm""
		},
		""offset"": 0
	},
	""topFilter"": {
		""polygonGrid"": [
			{ ""x"": 2860.065, ""y"": 1221.277 }, { ""x"": 2860.766, ""y"": 1221.284 },
			{ ""x"": 2860.758, ""y"": 1220.609 }, { ""x"": 2860.072, ""y"": 1220.594 }
	],
	""returnEarliest"": false
	}
}", ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 112
 testRunner.Then("the file should be automatically downloaded into the design cache", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
