// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ProductionDataSvc.AcceptanceTests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class GetLiftsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "GetLifts.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "GetLifts", "\tI should be able to request all lift ids of a project", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "GetLifts")))
            {
                global::ProductionDataSvc.AcceptanceTests.GetLiftsFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 4
#line 5
 testRunner.Given("the Lift ID service URI \"/api/v1/projects/{0}/liftids\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GetLifts - Project With One Asset")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "GetLifts")]
        public virtual void GetLifts_ProjectWithOneAsset()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GetLifts - Project With One Asset", ((string[])(null)));
#line 7
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 8
 testRunner.Given("a GetLifts project Id 1001280", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
 testRunner.When("I request lift ids", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "AssetId",
                        "DesignId",
                        "LayerId",
                        "StartDate",
                        "EndDate"});
            table1.AddRow(new string[] {
                        "4035848580437757",
                        "1",
                        "8",
                        "2014-04-10T03:26:11.457",
                        "2014-04-10T03:51:06.274"});
            table1.AddRow(new string[] {
                        "4035848580437757",
                        "0",
                        "8",
                        "2014-04-15T02:25:57.665",
                        "2014-04-15T02:32:46.369"});
            table1.AddRow(new string[] {
                        "4035848580437757",
                        "1",
                        "8",
                        "2014-04-15T02:32:59.356",
                        "2014-04-15T03:25:39.495"});
            table1.AddRow(new string[] {
                        "4035848580437757",
                        "4",
                        "8",
                        "2014-04-15T03:34:04.966",
                        "2014-04-15T03:59:05.352"});
#line 10
 testRunner.Then("the following lift details should be returned", ((string)(null)), table1, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GetLifts - Project With Two Assets")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "GetLifts")]
        public virtual void GetLifts_ProjectWithTwoAssets()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GetLifts - Project With Two Assets", ((string[])(null)));
#line 17
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 18
 testRunner.Given("a GetLifts project Id 1001214", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 19
 testRunner.When("I request lift ids", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "AssetId",
                        "DesignId",
                        "LayerId",
                        "StartDate",
                        "EndDate"});
            table2.AddRow(new string[] {
                        "1111",
                        "1",
                        "3",
                        "2014-11-25T00:25:40.564",
                        "2014-11-25T00:30:59.227"});
            table2.AddRow(new string[] {
                        "1111",
                        "2",
                        "2",
                        "2014-11-25T00:30:59.227",
                        "2014-11-25T00:31:25.827"});
            table2.AddRow(new string[] {
                        "1111",
                        "2",
                        "3",
                        "2014-11-25T00:31:25.827",
                        "2014-11-25T00:32:24.927"});
            table2.AddRow(new string[] {
                        "1111",
                        "2",
                        "2",
                        "2014-11-25T00:32:24.927",
                        "2014-11-25T00:32:28.327"});
            table2.AddRow(new string[] {
                        "1111",
                        "2",
                        "1",
                        "2014-11-25T00:32:28.327",
                        "2014-11-25T00:35:40.827"});
            table2.AddRow(new string[] {
                        "2222",
                        "1",
                        "2",
                        "2014-11-25T00:07:55.193",
                        "2014-11-25T00:11:06.989"});
            table2.AddRow(new string[] {
                        "2222",
                        "1",
                        "3",
                        "2014-11-25T00:11:06.989",
                        "2014-11-25T00:14:05.788"});
            table2.AddRow(new string[] {
                        "2222",
                        "1",
                        "4",
                        "2014-11-25T00:14:05.788",
                        "2014-11-25T00:17:55.588"});
#line 20
 testRunner.Then("the following lift details should be returned", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
