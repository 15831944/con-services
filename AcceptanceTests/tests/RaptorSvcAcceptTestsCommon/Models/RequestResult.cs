using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace RaptorSvcAcceptTestsCommon.Models
{
    /// <summary>
    /// Represents general (minimal) reponse generated by a sevice.
    /// This is copied from ...\RaptorServicesCommon\Contracts\ContractExecutionResult.cs
    /// </summary>
    public class RequestResult
    {
        public int Code { get; set; }
        public string Message { get; set; }

        /// <summary>
        ///     Initializes a new instance of the <see cref="ContractExecutionResult" /> class.
        /// </summary>
        /// <param name="code">The resulting code. Default value is <see cref="ContractExecutionStates.ExecutedSuccessfully" /></param>
        /// <param name="message">The verbose user-friendly message. Default value is empty string.</param>
        protected RequestResult(int code, string message = "")
        {
            Code = code;
            Message = message;
        }

        /// <summary>
        ///     Initializes a new instance of the <see cref="ContractExecutionResult" /> class with default
        ///     <see cref="ContractExecutionStates.ExecutedSuccessfully" /> result
        /// </summary>
        /// <param name="message">The verbose user-friendly message.</param>
        protected RequestResult(string message)
            : this(RequestResultCode.ExecutedSuccessfully, message)
        {
        }

        /// <summary>
        /// Default constructor for serialization
        /// </summary>
        public RequestResult()
        {
        
        }

    }

    public class DummyRequestResult : RequestResult
    {

        protected DummyRequestResult() : base("success")
        {
        }
    }

    /// <summary>
    /// Defines return code for a request.
    /// This is copied from ...\RaptorServicesCommon\Contracts\ContractExecutionResult.cs
    /// </summary>
    public class RequestResultCode
    {
        /// <summary>
        ///     Service request executed successfully
        /// </summary>
        public static readonly int ExecutedSuccessfully = 0;

        /// <summary>
        ///     Requested data was invalid or POSTed JSON was invalid
        /// </summary>
        public static readonly int IncorrectRequestedData = -1;

        /// <summary>
        ///     Supplied data didn't pass validation
        /// </summary>
        public static readonly int ValidationError = -2;

        /// <summary>
        ///     Internal processing error
        /// </summary>
        public static readonly int InternalProcessingError = -3;

        /// <summary>
        ///     Failed to get results
        /// </summary>
        public static readonly int FailedToGetResults = -4;
    }
}
