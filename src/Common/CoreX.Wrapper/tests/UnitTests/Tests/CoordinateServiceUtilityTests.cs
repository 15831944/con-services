using System;
using CoreX.Wrapper.UnitTests.Types;
using FluentAssertions;
using Xunit;

namespace CoreX.Wrapper.UnitTests.Tests
{
  public class CoordinateServiceUtilityTests
  {
    private readonly CoreXClient _corex = new CoreXClient();

    [Fact]
    public void SetCSIBFromDCFile_should_return_invalidLength_for_null_DC_content()
    {
      var exObj = Assert.Throws<ArgumentException>(() => _corex.SetCSIBFromDCFile(string.Empty));

      exObj.Message.Should().Be("Empty path name is not legal. (Parameter 'path')");
    }

    [Fact]
    public void Should_provide_valid_CDIB_from_coordinate_system_string()
    {
      _corex.SetCSIBFromDCFile(DCFile.GetFilePath(DCFile.UTM_32_NN1954_08));

      _corex.CSIB.Should().Be("VE5MIENTSUIAAAAAAAAmQE5vcndheSAoRVVSRUY4OU5UTSkAAFVUTTMyAABVVE0zMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEAAERhdHVtVGhyZWVQYXJhbWV0ZXJzAAAAAAAAAECmVFhB4zYaFMQ/WEEAAAAAAAAAgAAAAAAAAACAAAAAAAAAAIAOVVRNMzIAAAAAAAAAAAAA4PCcdi8bxD8AAAAAAAAAAAAAAACAhB5BeJyiI7n87z8AAAAAAADwPwAAAAAAAAAAAAAAAAAAAAABAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVVUTTMyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8D8BVVRNMzIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgtRFT7Ifm/GC1EVPshCUAYLURU+yH5PxgtRFT7IQlAAQEBAQEBA04AbwByAHcAYQB5ACAAKABFAFUAUgBFAEYAOAA5AE4AVABNACkAAABVAFQATQAzADIAAABVAFQATQAzADIAAAAAAEQAYQB0AHUAbQBUAGgAcgBlAGUAUABhAHIAYQBtAGUAdABlAHIAcwAAAAAAVQBUAE0AMwAyAAAAAAAAAFUAVABNADMAMgAAAFUAVABNADMAMgAAAAAAAAAAAHtQU0U9MjU4MzI7TlNFPTU1NTU7fQAAe0xHRT00MjU4O0xERT02MjU4O0dHRT00MjU4O0dERT02MjU4O30Ae0xFRT03MDE5O30Ae1ZTRT01Nzk5O1ZERT01MjA2O30A");
    }
  }
}
