trigger:
  branches:
    include:
      - master
      # Building of release and feature branches via Pull Requests using Azure Git is handled in Branch Policies.
  paths:
    include:
      - 'src/Common/*'

pool: fsm-merino-services

variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  serviceName: Common
  rootServiceFolder: '$(System.DefaultWorkingDirectory)/src/service'
  isMasterBranch: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]

jobs:
  - job: BuildTestCommon
    displayName: 'Build & Test Common solution'
    timeoutInMinutes: 20
    steps:
      - checkout: self
        fetchDepth: 1
      - task: DotNetCoreCLI@2
        displayName: 'dotnet build'
        inputs:
          command: 'build'
          projects: 'src/Common/Common.sln'
          arguments: '-nowarn:NU1701 -nowarn:CS1591'
      - task: DotNetCoreCLI@2
        displayName: 'dotnet test'
        inputs:
          command: 'test'
          projects: 'src/Common/Common.sln'
          arguments: '--no-restore -nowarn:NU1701 -nowarn:CS1591 /p:CollectCoverage=${isMasterBranch}'
          publishTestResults: true

  - job: Build3DPService
    displayName: 'Build 3DP service'
    timeoutInMinutes: 20
    steps:
    - checkout: self
      fetchDepth: 1
    - template: templates/build-service.yaml
      parameters:
        servicePath: '$(rootServiceFolder)/3DP'
        solution: 'VSS.Productivity3D.Service.sln'
        testFolder: 'test'

  - job: BuildProjectService
    displayName: 'Build Project service'
    timeoutInMinutes: 20
    steps:
    - checkout: self
      fetchDepth: 1
    - template: templates/build-service.yaml
      parameters:
        servicePath: '$(rootServiceFolder)/Project'
        solution: 'VSS.Visionlink.Project.sln'
        testFolder: 'test'

  - job: BuildTRexService
    displayName: 'Build TRex'
    timeoutInMinutes: 30
    steps:
    - checkout: self
      fetchDepth: 1

    - task: PowerShell@2
      displayName: 'Remove WebTools project'

      inputs:
        targetType: 'inline'
        script: 'dotnet sln $(rootServiceFolder)/TRex/TRex.netstandard.sln remove $(rootServiceFolder)/TRex/src/tools/VSS.TRex.Webtools/VSS.TRex.Webtools.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'dotnet build'
      inputs:
        command: 'build'
        projects: '$(rootServiceFolder)/TRex/TRex.netstandard.sln'
        arguments: '-nowarn:NU1701 -nowarn:CS1591'
  
    - task: DotNetCoreCLI@2
      displayName: 'dotnet test'
      inputs:
        command: test
        projects: '$(rootServiceFolder)/TRex/TRex.netstandard.sln'
        arguments: '-nowarn:NU1701 -nowarn:CS1591'

  - job: BuildWebTools
    displayName: 'Build TRex WebTools'
    timeoutInMinutes: 30
    steps:
    - checkout: self
      fetchDepth: 1
    - task: DotNetCoreCLI@2
      displayName: 'dotnet build'
      inputs:
        command: 'build'
        projects: '$(rootServiceFolder)/TRex/src/tools/VSS.TRex.Webtools/VSS.TRex.Webtools.csproj'
        arguments: '-nowarn:NU1701 -nowarn:CS1591'

  - job: BuildTileService
    displayName: 'Build Tile service'
    timeoutInMinutes: 20
    steps:
    - checkout: self
      fetchDepth: 1
    - template: templates/build-service.yaml
      parameters:
        servicePath: '$(rootServiceFolder)/TileService'
        solution: 'VSS.Tile.Service.sln'
        testFolder: 'test'

  - job: BuildTFAService
    displayName: 'Build TFA service'
    timeoutInMinutes: 20
    steps:
    - checkout: self
      fetchDepth: 1
    - template: templates/build-service.yaml
      parameters:
        servicePath: '$(rootServiceFolder)/TagFileAuth'
        solution: 'VSS.TagFileAuth.Service.sln'
        testFolder: 'test'

  - job: BuildSchedulerService
    displayName: 'Build Scheduler service'
    timeoutInMinutes: 20
    steps:
    - checkout: self
      fetchDepth: 1
    - template: templates/build-service.yaml
      parameters:
        servicePath: '$(rootServiceFolder)/Scheduler'
        solution: 'VSS.Productivity3D.Scheduler.sln'
        testFolder: 'test'

  - job: BuildPreferencesService
    displayName: 'Build Preferences service'
    timeoutInMinutes: 20
    steps:
    - checkout: self
      fetchDepth: 1
    - template: templates/build-service.yaml
      parameters:
        servicePath: '$(rootServiceFolder)/Preferences'
        solution: 'CCSS.Productivity3D.Preferences.sln'
        testFolder: 'test'

  - job: BuildPushService
    displayName: 'Build Push service'
    timeoutInMinutes: 20
    steps:
    - checkout: self
      fetchDepth: 1
    - template: templates/build-service.yaml
      parameters:
        servicePath: '$(rootServiceFolder)/Push'
        solution: 'VSS.Productivity3D.Push.sln'
        testFolder: 'test'

  - job: BuildFilterService
    displayName: 'Build Filter service'
    timeoutInMinutes: 20
    steps:
    - checkout: self
      fetchDepth: 1
    - template: templates/build-service.yaml
      parameters:
        servicePath: '$(rootServiceFolder)/Filter'
        solution: 'VSS.Productivity3D.Filter.sln'
        testFolder: 'test'

  - job: Build3dAssetMgmtService
    displayName: 'Build Asset Management service'
    timeoutInMinutes: 20
    steps:
    - checkout: self
      fetchDepth: 1
    - template: templates/build-service.yaml
      parameters:
        servicePath: '$(rootServiceFolder)/3dAssetMgmt'
        solution: 'VSS.Productivity3D.3DAssetMgmt.sln'
        testFolder: 'test'

  - job: BuildEntitlementsService
    displayName: 'Build Entitlements service'
    timeoutInMinutes: 20
    steps:
    - checkout: self
      fetchDepth: 1
    - template: templates/build-service.yaml
      parameters:
        servicePath: '$(rootServiceFolder)/Entitlements'
        solution: 'VSS.Productivity3D.Entitlements.sln'
        testFolder: 'test'

  - job: BuildMegalodonService
    displayName: 'Build Megalodon service'
    timeoutInMinutes: 20
    steps:
    - checkout: self
      fetchDepth: 1
    - template: templates/build-service.yaml
      parameters:
        servicePath: '$(rootServiceFolder)/Megalodon'
        solution: 'CCSS.Megalodon.sln'
        testFolder: 'test'

  - job: BuildHealthzService
    displayName: 'Build Healthz service'
    timeoutInMinutes: 20
    steps:
    - checkout: self
      fetchDepth: 1
    - template: templates/build-service.yaml
      parameters:
        servicePath: '$(rootServiceFolder)/Healthz'
        solution: 'CCSS.WorksOS.Healthz.sln'
        testFolder: 'test'
