parameters:
  - name: serviceName
    type: string
  - name: sourceBranchName
    type: string
  - name: buildId
    type: string
  - name: ecrRepositoryName
    type: string
  - name: trexServices
    type: object
    default: []

steps:
  - ${{ each service in parameters.trexServices }}:
    - task: PowerShell@2
      condition: and(succeeded(), eq(variables['isMasterBranch'], true), eq(pushServiceImages, true))
      displayName: "Push Image: ${{ service }}"
      inputs:
        filePath: build/azure-build-pipeline.ps1
        arguments: "-service ${{ parameters.serviceName }}
                    -action publishAndPushImage
                    -sourceArtifactPath /trex/${{ service }}
                    -destArtifactPath /trex/${{ service }}
                    -branch ${{ parameters.sourceBranchName }}
                    -imageSuffix \"${{ parameters.buildId }}.${{ service }}\"
                    -ecrRepositoryName ${{ parameters.ecrRepositoryName }}"

    # Run this task by default on non Master branches (can be overridden on a manual queue of the build pipeline).
    # Should save time and space by not pushing built container images to ECR on every feature branch.
    - task: PowerShell@2
      condition: and(succeeded(), eq(variables['isMasterBranch'], false), eq(pushServiceImages, false))
      script: echo "pushServiceImages=$(pushServiceImages), images will be build locally but not pushed to ECR."
      displayName: "Publish Image: ${{ service }}"
      inputs:
        filePath: build/azure-build-pipeline.ps1
        arguments: "-service ${{ parameters.serviceName }}
                    -action publish
                    -sourceArtifactPath /trex/${{ service }}
                    -destArtifactPath /trex/${{ service }}
                    -branch ${{ parameters.sourceBranchName }}
                    -imageSuffix \"${{ parameters.buildId }}.${{ service }}\"
                    -ecrRepositoryName ${{ parameters.ecrRepositoryName }}"
