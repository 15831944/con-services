<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.1</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
    <LangVersion>latest</LangVersion>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.All" Version="2.1.1" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="2.1.1" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="2.1.5" />
    <PackageReference Include="Newtonsoft.Json" Version="12.0.1" />
    <PackageReference Include="Apache.Ignite" Version="2.8.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\src\app\fetch-data\fetch-data-model.ts" />
    <None Remove="ClientApp\src\app\fetch-data\fetch-data.component.ts" />
    <None Remove="ClientApp\src\app\fetch-data\fetch-data.service.ts" />
    <None Remove="ClientApp\src\app\grid-service-deployer\grid-service-deployer.service.ts" />
    <None Remove="ClientApp\src\app\grid-status\grid-model.ts" />
    <None Remove="ClientApp\src\app\grid-status\grid-status.service.ts" />
    <None Remove="ClientApp\src\app\http-error-handler.service.ts" />
    <None Remove="ClientApp\src\app\message.service.ts" />
    <None Remove="ClientApp\src\app\project\project-component.ts" />
    <None Remove="ClientApp\src\app\project\project-displaymode-model.ts" />
    <None Remove="ClientApp\src\app\project\project-filter-model.ts" />
    <None Remove="ClientApp\src\app\project\project-model.ts" />
    <None Remove="ClientApp\src\app\project\project-service.ts" />
    <None Remove="ClientApp\src\app\project\project-tiledata-model.ts" />
    <None Remove="ClientApp\src\app\project\project-volume-model.ts" />
    <None Remove="ClientApp\src\app\sandbox\sandbox-component.ts" />
    <None Remove="ClientApp\src\app\sandbox\sandbox-model.ts" />
    <None Remove="ClientApp\src\app\sandbox\sandbox-service.ts" />
    <None Remove="ClientApp\src\app\upload-data\tagfile-request.ts" />
    <None Remove="ClientApp\src\app\upload-data\upload-data.service.ts" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\gateway\VSS.TRex.Gateway.Common\VSS.TRex.Gateway.Common.csproj" />
    <ProjectReference Include="..\..\netstandard\VSS.TRex.Alignments.Interfaces\VSS.TRex.Alignments.Interfaces.csproj" />
    <ProjectReference Include="..\..\netstandard\VSS.TRex.Alignments\VSS.TRex.Alignments.csproj" />
    <ProjectReference Include="..\..\netstandard\VSS.TRex.Common.Exceptions\VSS.TRex.Common.Exceptions.csproj" />
    <ProjectReference Include="..\..\netstandard\VSS.TRex.ExistenceMaps\VSS.TRex.ExistenceMaps.csproj" />
    <ProjectReference Include="..\..\netstandard\VSS.TRex.Rendering.Implementations.Core2\VSS.TRex.Rendering.Implementations.Core2.csproj" />
    <ProjectReference Include="..\..\netstandard\VSS.TRex.Rendering\VSS.TRex.Rendering.csproj" />
    <ProjectReference Include="..\..\netstandard\VSS.TRex.SiteModels.Interfaces\VSS.TRex.SiteModels.Interfaces.csproj" />
    <ProjectReference Include="..\..\netstandard\VSS.TRex.SiteModels\VSS.TRex.SiteModels.csproj" />
    <ProjectReference Include="..\..\netstandard\VSS.TRex.Storage.Interfaces\VSS.TRex.Storage.Interfaces.csproj" />
    <ProjectReference Include="..\..\netstandard\VSS.TRex.Storage.Models\VSS.TRex.Storage.Models.csproj" />
    <ProjectReference Include="..\..\netstandard\VSS.TRex.Storage\VSS.TRex.Storage.csproj" />
    <ProjectReference Include="..\..\netstandard\VSS.TRex.TAGFiles\VSS.TRex.TAGFiles.csproj" />
    <ProjectReference Include="..\..\netstandard\VSS.TRex.Types\VSS.TRex.Types.csproj" />
    <ProjectReference Include="..\..\netstandard\VSS.TRex.Volumes\VSS.TRex.Volumes.csproj" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\src\app\fetch-data\fetch-data.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\fetch-data\fetch-data-model.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\fetch-data\fetch-data.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\grid-service-deployer\grid-service-deployer.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\grid-status\grid-model.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\grid-status\grid-status.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\http-error-handler.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\message.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\project\project-component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\project\project-displaymode-model.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\project\project-filter-model.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\project\project-model.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\project\project-service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\project\project-tiledata-model.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\project\project-volume-model.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\sandbox\sandbox-component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\sandbox\sandbox-model.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\sandbox\sandbox-service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\upload-data\tagfile-request.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\upload-data\upload-data.service.ts" />
  </ItemGroup>

  <ItemGroup>
    <None Update="igniteKubeConfig.xml">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="igniteMutableKubeConfig.xml">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
  </ItemGroup>


  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

  <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
    <TypeScriptTarget>ES2015</TypeScriptTarget>
    <TypeScriptJSXEmit>None</TypeScriptJSXEmit>
    <TypeScriptModuleKind>ES6</TypeScriptModuleKind>
    <TypeScriptCompileOnSaveEnabled>True</TypeScriptCompileOnSaveEnabled>
    <TypeScriptNoImplicitAny>False</TypeScriptNoImplicitAny>
    <TypeScriptRemoveComments>False</TypeScriptRemoveComments>
    <TypeScriptOutFile />
    <TypeScriptOutDir />
    <TypeScriptGeneratesDeclarations>False</TypeScriptGeneratesDeclarations>
    <TypeScriptNoEmitOnError>True</TypeScriptNoEmitOnError>
    <TypeScriptSourceMap>True</TypeScriptSourceMap>
    <TypeScriptMapRoot />
    <TypeScriptSourceRoot />
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
    <WarningsAsErrors />
  </PropertyGroup>

</Project>
