<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/util
                           http://www.springframework.org/schema/util/spring-util.xsd">

  <bean class="org.apache.ignite.configuration.IgniteConfiguration">
    <property name="gridLogger">
      <bean class="org.apache.ignite.logger.log4j.Log4JLogger">
        <constructor-arg type="java.lang.String" value="ignite-log4j.xml"/>
      </bean>
    </property>
    <property name="discoverySpi">
      <bean class="org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi">
        <property name="ipFinder">
          <bean class="org.apache.ignite.spi.discovery.tcp.ipfinder.kubernetes.TcpDiscoveryKubernetesIpFinder">
            <property name="namespace" value="#{systemEnvironment['DEPLOYED_ENV']}"/>
            <property name="serviceName" value="ignite-immutable" />
          </bean>
        </property>
      </bean>
    </property>
    <property name="cacheConfiguration">
      <list>
        <!-- Creating a cache configuration. -->
        <bean class="org.apache.ignite.configuration.CacheConfiguration">
            <property name="name" value="SiteModelsCache-Immutable"/>
            <property name="dataRegionName" value="Default-Immutable" />
            <!-- Creating the affinity function with custom setting.
            <property name="affinity">
                <bean class="org.apache.ignite.cache.affinity.trex.TrexImmutableNonSpatialAffinityFunction">
                </bean>
            </property>-->
        </bean>
        <bean class="org.apache.ignite.configuration.CacheConfiguration">
          <property name="name" value="Spatial-Immutable"/>
          <property name="dataRegionName" value="Default-Immutable" />
          <!-- Creating the affinity function with custom setting. -->
          <property name="affinity">
            <bean class="org.apache.ignite.cache.affinity.trex.TrexImmutableSpatialAffinityFunction">
            </bean>
          </property>
        </bean>
        <bean class="org.apache.ignite.configuration.CacheConfiguration">
          <property name="name" value="Spatial-Immutable-Compressed"/>
          <property name="dataRegionName" value="Default-Immutable" />
          <property name="storeKeepBinary" value="true" />
          <!-- Creating the affinity function with custom setting. -->
          <property name="affinity">
            <bean class="org.apache.ignite.cache.affinity.trex.TrexImmutableSpatialAffinityFunction">
            </bean>
          </property>
        </bean>
        <bean class="org.apache.ignite.configuration.CacheConfiguration">
            <property name="name" value="SiteModelChangeMapsCache"/>
            <property name="dataRegionName" value="Default-Immutable" />
            <property name="storeKeepBinary" value="true" />
            <!-- Creating the affinity function with custom setting. Note: This intentionally uses the mutable spatial affinity function as this is project centric (ie: Only want change maps located on a single node)-->
            <property name="affinity">
                <bean class="org.apache.ignite.cache.affinity.trex.TrexMutableSpatialAffinityFunction">
                </bean>
            </property>
        </bean>
      </list>
    </property>
  </bean>
</beans>