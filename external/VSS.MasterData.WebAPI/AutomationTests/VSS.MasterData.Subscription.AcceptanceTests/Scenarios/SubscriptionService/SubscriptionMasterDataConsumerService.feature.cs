// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace VSS.MasterData.Subscription.AcceptanceTests.Scenarios.SubscriptionService
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class SubscriptionMasterDataConsumerServiceFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "SubscriptionMasterDataConsumerService.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Subscription MasterData ConsumerService", @"
 References : https://docs.google.com/document/d/18zWcH34qTGne3rmqbDgqQ8Oh3ochUFJkrpRJfJ1D6vQ/edit
                         
 Dependencies:  Internal -  Kafka Topic
					  VSS DB	 - VSS-MasterData-Subscription
					      Tables - Asset Subscription
								   Project Subscription
								   Customer Subscription

 User Story 11721:Subscription MasterData Consumer Service (Master Data Management)", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "Subscription MasterData ConsumerService")))
            {
                VSS.MasterData.Subscription.AcceptanceTests.Scenarios.SubscriptionService.SubscriptionMasterDataConsumerServiceFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionMasterDataConsumerService_AssetSubscriptionCreateHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Subscription MasterData ConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sanity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionMasterDataConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US11721")]
        public virtual void SubscriptionMasterDataConsumerService_AssetSubscriptionCreateHappyPath()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SubscriptionMasterDataConsumerService_AssetSubscriptionCreateHappyPath", new string[] {
                        "Automated",
                        "Sanity",
                        "Positive",
                        "SubscriptionMasterDataConsumerService",
                        "US11721"});
#line 16
this.ScenarioSetup(scenarioInfo);
#line 17
      testRunner.Given("SubscriptionMasterDataConsumerService Is Ready To Verify \'SubscriptionMasterDataC" +
                    "onsumerService_AssetSubscriptionCreateHappyPath\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 18
         testRunner.And("SubscriptionService AssetSubscriptionCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 19
      testRunner.When("I Post Valid SubscriptionService AssetSubscriptionCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 20
      testRunner.Then("The SubscriptionService AssetSubscriptionCreated Details Are Stored in AssetSubsc" +
                    "ription and CustomerSubscription tables", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionMasterDataConsumerService_AssetSubscriptionUpdateHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Subscription MasterData ConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sanity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionMasterDataConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US11721")]
        public virtual void SubscriptionMasterDataConsumerService_AssetSubscriptionUpdateHappyPath()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SubscriptionMasterDataConsumerService_AssetSubscriptionUpdateHappyPath", new string[] {
                        "Automated",
                        "Sanity",
                        "Positive",
                        "SubscriptionMasterDataConsumerService",
                        "US11721"});
#line 24
this.ScenarioSetup(scenarioInfo);
#line 25
      testRunner.Given("SubscriptionMasterDataConsumerService Is Ready To Verify \'SubscriptionMasterDataC" +
                    "onsumerService_AssetSubscriptionUpdateHappyPath\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 26
         testRunner.And("SubscriptionService AssetSubscriptionUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
      testRunner.When("I Post Valid SubscriptionService AssetSubscriptionUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 28
      testRunner.Then("The SubscriptionService AssetSubscriptionUpdated Details Are Stored in AssetSubsc" +
                    "ription and CustomerSubscription tables", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void SubscriptionMasterDataConsumerService_AssetSubscriptionUpdateValidOptionalFields(string description, string customerUID, string assetUID, string subscriptionType, string startDate, string endDate, string deviceUID, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Positive",
                    "SubscriptionService",
                    "US13356"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SubscriptionMasterDataConsumerService_AssetSubscriptionUpdateValidOptionalFields", @__tags);
#line 32
this.ScenarioSetup(scenarioInfo);
#line 33
      testRunner.Given("SubscriptionService Is Ready To Verify \'SubscriptionMasterDataConsumerService_Ass" +
                    "etSubscriptionUpdateValidOptionalFields\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 34
         testRunner.And("SubscriptionService AssetSubscriptionUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
      testRunner.When(string.Format("I Set SubscriptionService AssetSubscriptionUpdate CustomerUID To \'{0}\'", customerUID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 36
        testRunner.And(string.Format("I Set SubscriptionService AssetSubscriptionUpdate AssetUID To \'{0}\'", assetUID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
        testRunner.And(string.Format("I Set SubscriptionService AssetSubscriptionUpdate SubscriptionType To \'{0}\'", subscriptionType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
        testRunner.And(string.Format("I Set SubscriptionService AssetSubscriptionUpdate StartDate  To \'{0}\'", startDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
        testRunner.And(string.Format("I Set SubscriptionService AssetSubscriptionUpdate EndDate To \'{0}\'", endDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
        testRunner.And(string.Format("I Set SubscriptionService AssetSubscriptionUpdate DeviceUID To \'{0}\'", deviceUID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
        testRunner.And("I Post Valid SubscriptionService AssetSubscriptionUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
      testRunner.Then("The SubscriptionService AssetSubscriptionUpdated Details Are Stored in AssetSubsc" +
                    "ription and CustomerSubscription tables", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionMasterDataConsumerService_AssetSubscriptionUpdateValidOptionalFields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Subscription MasterData ConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US13356")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "CustomerUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "CustomerUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "6CEC6135-89C8-11E5-9797-005056886D0D")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetUID", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionType", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StartDate", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EndDate", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DeviceUID", "NULL_NULL")]
        public virtual void SubscriptionMasterDataConsumerService_AssetSubscriptionUpdateValidOptionalFields_CustomerUID()
        {
            this.SubscriptionMasterDataConsumerService_AssetSubscriptionUpdateValidOptionalFields("CustomerUID", "6CEC6135-89C8-11E5-9797-005056886D0D", "NULL_NULL", "NULL_NULL", "NULL_NULL", "NULL_NULL", "NULL_NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionMasterDataConsumerService_AssetSubscriptionUpdateValidOptionalFields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Subscription MasterData ConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US13356")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "AssetUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "AssetUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetUID", "6CEC6135-89C8-11E5-9797-005056886D0D")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionType", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StartDate", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EndDate", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DeviceUID", "NULL_NULL")]
        public virtual void SubscriptionMasterDataConsumerService_AssetSubscriptionUpdateValidOptionalFields_AssetUID()
        {
            this.SubscriptionMasterDataConsumerService_AssetSubscriptionUpdateValidOptionalFields("AssetUID", "NULL_NULL", "6CEC6135-89C8-11E5-9797-005056886D0D", "NULL_NULL", "NULL_NULL", "NULL_NULL", "NULL_NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionMasterDataConsumerService_AssetSubscriptionUpdateValidOptionalFields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Subscription MasterData ConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US13356")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SubscriptionType")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SubscriptionType")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetUID", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionType", "AdvancedProductivity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StartDate", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EndDate", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DeviceUID", "NULL_NULL")]
        public virtual void SubscriptionMasterDataConsumerService_AssetSubscriptionUpdateValidOptionalFields_SubscriptionType()
        {
            this.SubscriptionMasterDataConsumerService_AssetSubscriptionUpdateValidOptionalFields("SubscriptionType", "NULL_NULL", "NULL_NULL", "AdvancedProductivity", "NULL_NULL", "NULL_NULL", "NULL_NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionMasterDataConsumerService_AssetSubscriptionUpdateValidOptionalFields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Subscription MasterData ConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US13356")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "StartDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "StartDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetUID", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionType", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StartDate", "11/22/2015 2:29:55 PM")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EndDate", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DeviceUID", "NULL_NULL")]
        public virtual void SubscriptionMasterDataConsumerService_AssetSubscriptionUpdateValidOptionalFields_StartDate()
        {
            this.SubscriptionMasterDataConsumerService_AssetSubscriptionUpdateValidOptionalFields("StartDate", "NULL_NULL", "NULL_NULL", "NULL_NULL", "11/22/2015 2:29:55 PM", "NULL_NULL", "NULL_NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionMasterDataConsumerService_AssetSubscriptionUpdateValidOptionalFields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Subscription MasterData ConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US13356")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "EndDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "EndDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetUID", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionType", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StartDate", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EndDate", "11/22/2015 2:29:55 PM")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DeviceUID", "NULL_NULL")]
        public virtual void SubscriptionMasterDataConsumerService_AssetSubscriptionUpdateValidOptionalFields_EndDate()
        {
            this.SubscriptionMasterDataConsumerService_AssetSubscriptionUpdateValidOptionalFields("EndDate", "NULL_NULL", "NULL_NULL", "NULL_NULL", "NULL_NULL", "11/22/2015 2:29:55 PM", "NULL_NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionMasterDataConsumerService_AssetSubscriptionUpdateValidOptionalFields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Subscription MasterData ConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US13356")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "DeviceUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "DeviceUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetUID", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionType", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StartDate", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EndDate", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DeviceUID", "6CEC6135-89C8-11E5-9797-005056886D0D")]
        public virtual void SubscriptionMasterDataConsumerService_AssetSubscriptionUpdateValidOptionalFields_DeviceUID()
        {
            this.SubscriptionMasterDataConsumerService_AssetSubscriptionUpdateValidOptionalFields("DeviceUID", "NULL_NULL", "NULL_NULL", "NULL_NULL", "NULL_NULL", "NULL_NULL", "6CEC6135-89C8-11E5-9797-005056886D0D", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionMasterDataConsumerService_CreateInvalid_Duplicate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Subscription MasterData ConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionMasterDataConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US11721")]
        public virtual void SubscriptionMasterDataConsumerService_CreateInvalid_Duplicate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SubscriptionMasterDataConsumerService_CreateInvalid_Duplicate", new string[] {
                        "Automated",
                        "Regression",
                        "Negative",
                        "SubscriptionMasterDataConsumerService",
                        "US11721"});
#line 55
this.ScenarioSetup(scenarioInfo);
#line 56
      testRunner.Given("SubscriptionMasterDataConsumerService Is Ready To Verify \'SubscriptionMasterDataC" +
                    "onsumerService_CreateInvalid_Duplicate\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 57
         testRunner.And("SubscriptionService AssetSubscriptionCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 58
      testRunner.When("I Post Valid SubscriptionService AssetSubscriptionCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 59
        testRunner.And("I Post Valid SubscriptionService AssetSubscriptionCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
      testRunner.Then("The SubscriptionService AssetSubscriptionCreated Details Are Stored in VSS DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionMasterDataConsumerService_UpdateInvalid_WithoutCreate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Subscription MasterData ConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sanity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionMasterDataConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US11721")]
        public virtual void SubscriptionMasterDataConsumerService_UpdateInvalid_WithoutCreate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SubscriptionMasterDataConsumerService_UpdateInvalid_WithoutCreate", new string[] {
                        "Automated",
                        "Sanity",
                        "Negative",
                        "SubscriptionMasterDataConsumerService",
                        "US11721"});
#line 64
this.ScenarioSetup(scenarioInfo);
#line 65
      testRunner.Given("SubscriptionMasterDataConsumerService Is Ready To Verify \'SubscriptionMasterDataC" +
                    "onsumerService_UpdateInvalid_WithoutCreate\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 66
         testRunner.And("SubscriptionService AssetSubscriptionUpdate Request Is Setup With Default Values " +
                    "WithoutCreate", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 67
      testRunner.When("I Post Valid SubscriptionService AssetSubscriptionUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 68
      testRunner.Then("The SubscriptionService AssetSubscriptionUpdated Details Must Not be Stored in VS" +
                    "S DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionMasterDataConsumerService_AssetSubscription_SameAssetDifferentSubscri" +
            "ptionTypes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Subscription MasterData ConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sanity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionMasterDataConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US11721")]
        public virtual void SubscriptionMasterDataConsumerService_AssetSubscription_SameAssetDifferentSubscriptionTypes()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SubscriptionMasterDataConsumerService_AssetSubscription_SameAssetDifferentSubscri" +
                    "ptionTypes", new string[] {
                        "Automated",
                        "Sanity",
                        "Positive",
                        "SubscriptionMasterDataConsumerService",
                        "US11721"});
#line 72
this.ScenarioSetup(scenarioInfo);
#line 73
      testRunner.Given("SubscriptionMasterDataConsumerService Is Ready To Verify \'SubscriptionMasterDataC" +
                    "onsumerService_AssetSubscription_SameAssetDifferentSubscriptionTypes\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 74
         testRunner.And("SubscriptionService AssetSubscriptionCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
       testRunner.When("I Set Valid SubscriptionService AssetSubscriptionCreate Request SubscriptionType " +
                    "To \'Essentials\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 76
         testRunner.And("I Post Valid SubscriptionService AssetSubscriptionCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 77
                                      testRunner.And("I Set Valid SubscriptionService AssetSubscriptionCreate Request SubscriptionType " +
                    "To \'ManualMaintenancelog\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 78
                                                  testRunner.And("I Set Valid SubscriptionService AssetSubscriptionCreate Request SubscriptionUID T" +
                    "o Unique UID", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
              testRunner.And("I Post Valid SubscriptionService AssetSubscriptionCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 80
         testRunner.Then("The SubscriptionService AssetSubscriptionCreated Details Are Stored in \'AssetSubs" +
                    "cription\' Table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 81
           testRunner.And("The CustomerSubscription Table Should Contain SubscriptionType with StartDate and" +
                    " EndDate", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionMasterDataConsumerService_AssetSubscription_DifferentAssetsSameSubscr" +
            "iptionType")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Subscription MasterData ConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sanity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionMasterDataConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US11721")]
        public virtual void SubscriptionMasterDataConsumerService_AssetSubscription_DifferentAssetsSameSubscriptionType()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SubscriptionMasterDataConsumerService_AssetSubscription_DifferentAssetsSameSubscr" +
                    "iptionType", new string[] {
                        "Automated",
                        "Sanity",
                        "Positive",
                        "SubscriptionMasterDataConsumerService",
                        "US11721"});
#line 85
this.ScenarioSetup(scenarioInfo);
#line 86
         testRunner.Given("SubscriptionMasterDataConsumerService Is Ready To Verify \'SubscriptionMasterDataC" +
                    "onsumerService_AssetSubscriptionCreateHappyPath\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 87
                                    testRunner.And("SubscriptionService AssetSubscriptionCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 88
         testRunner.When("I Set Valid SubscriptionService AssetSubscriptionCreate Request StartDate To Min " +
                    "Date", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 89
              testRunner.And("I Post Valid SubscriptionService AssetSubscriptionCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 90
              testRunner.And("I Set Valid SubscriptionService AssetSubscriptionCreate Request AssetUID To Secon" +
                    "d AssetUID", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 91
                                                  testRunner.And("I Set Valid SubscriptionService AssetSubscriptionCreate Request StartDate To Curr" +
                    "ent Date", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 92
              testRunner.And("I Set Valid SubscriptionService AssetSubscriptionCreate Request EndDate To Max Da" +
                    "te", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 93
                                                  testRunner.And("I Set Valid SubscriptionService AssetSubscriptionCreate Request SubscriptionUID T" +
                    "o Unique UID", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 94
              testRunner.And("I Post Valid SubscriptionService AssetSubscriptionCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionMasterDataConsumerService_AssetSubscriptionSC4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Subscription MasterData ConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sanity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionMasterDataConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US11721")]
        public virtual void SubscriptionMasterDataConsumerService_AssetSubscriptionSC4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SubscriptionMasterDataConsumerService_AssetSubscriptionSC4", new string[] {
                        "Automated",
                        "Sanity",
                        "Positive",
                        "SubscriptionMasterDataConsumerService",
                        "US11721"});
#line 105
this.ScenarioSetup(scenarioInfo);
#line 106
                  testRunner.Given("SubscriptionMasterDataConsumerService Is Ready To Verify \'SubscriptionMasterDataC" +
                    "onsumerService_AssetSubscriptionCreateHappyPath\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 107
                                testRunner.And("SubscriptionService AssetSubscriptionCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 108
                  testRunner.When("I Post Valid SubscriptionService AssetSubscriptionCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 109
                                testRunner.And("I Set Valid SubscriptionService AssetSubscriptionCreate Request AssetUID To Secon" +
                    "d AssetUID", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 110
                                testRunner.And("I Set Valid SubscriptionService AssetSubscriptionCreate Request StartDate To Min " +
                    "Date", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 111
                                testRunner.And("I Post Valid SubscriptionService AssetSubscriptionCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 112
                                                                testRunner.And("I Set Valid SubscriptionService AssetSubscriptionUpdate Request StartDate To Min " +
                    "Date", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 113
                                testRunner.And("I Set Valid SubscriptionService AssetSubscriptionUpdate Request StartDate To \'01/" +
                    "02/2018 2:29:55 PM\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 114
                                testRunner.And("I Set Valid SubscriptionService AssetSubscriptionUpdate Request EndDate To \'01/30" +
                    "/2028 2:29:55 PM\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 115
                                testRunner.And("I Post Valid SubscriptionService AssetSubscriptionUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 116
                                testRunner.And("I Set Valid SubscriptionService AssetSubscriptionCreate Request AssetUID To a Dif" +
                    "ferent UID", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 117
                                testRunner.And("I Set Valid SubscriptionService AssetSubscriptionCreate Request SubscriptionType " +
                    "To \'Essentials\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 118
                                testRunner.And("I Set Valid SubscriptionService AssetSubscriptionCreate Request StartDate To \'12/" +
                    "01/2016 2:29:55 PM\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 119
                                testRunner.And("I Set Valid SubscriptionService AssetSubscriptionCreate Request EndDate To \'12/29" +
                    "/2026 2:29:55 PM\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 120
                                testRunner.And("I Post Valid SubscriptionService AssetSubscriptionCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 121
                  testRunner.Then("The SubscriptionService AssetSubscriptionCreated Details Are Stored in \'AssetSubs" +
                    "cription\' Table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 122
                    testRunner.And("The \'CustomerSubscription\' Table Should Contain SubscriptionType as \'StandardHeal" +
                    "th\' with StartDate as \'12/28/2015\' and EndDate as \'10/24/2025\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 123
                                testRunner.And("The \'CustomerSubscription\' Table Should Contain SubscriptionType as \'Essentials\' " +
                    "with StartDate as \'12/01/2016\' and EndDate as \'01/30/2028\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void SubscriptionMasterDataConsumerService_CustomerSubscriptionCreateHappyPath(string description, string subscriptionType, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Sanity",
                    "Positive",
                    "SubscriptionMasterDataConsumerService",
                    "US12870"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SubscriptionMasterDataConsumerService_CustomerSubscriptionCreateHappyPath", @__tags);
#line 129
this.ScenarioSetup(scenarioInfo);
#line 130
   testRunner.Given("SubscriptionMasterDataConsumerService Is Ready To Verify \'SubscriptionMasterDataC" +
                    "onsumerService_CustomerSubscriptionCreateHappyPath\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 131
  testRunner.And("SubscriptionService CustomerSubscriptionCreate Request Is Setup With Default Valu" +
                    "es", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 132
   testRunner.When("I Post Valid SubscriptionService CustomerSubscriptionCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 133
   testRunner.Then("The SubscriptionService CustomerSubscriptionCreated Details Are Stored in Custome" +
                    "rSubscription table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionMasterDataConsumerService_CustomerSubscriptionCreateHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Subscription MasterData ConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sanity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionMasterDataConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US12870")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Manual 3D Project Monitoring")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Manual 3D Project Monitoring")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionType", "Manual 3D Project Monitoring")]
        public virtual void SubscriptionMasterDataConsumerService_CustomerSubscriptionCreateHappyPath_Manual3DProjectMonitoring()
        {
            this.SubscriptionMasterDataConsumerService_CustomerSubscriptionCreateHappyPath("Manual 3D Project Monitoring", "Manual 3D Project Monitoring", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionMasterDataConsumerService_CustomerSubscriptionCreateHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Subscription MasterData ConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sanity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionMasterDataConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US12870")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Operator Id/ Manage Operators")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Operator Id/ Manage Operators")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionType", "Operator Id/ Manage Operators")]
        public virtual void SubscriptionMasterDataConsumerService_CustomerSubscriptionCreateHappyPath_OperatorIdManageOperators()
        {
            this.SubscriptionMasterDataConsumerService_CustomerSubscriptionCreateHappyPath("Operator Id/ Manage Operators", "Operator Id/ Manage Operators", ((string[])(null)));
        }
        
        public virtual void SubscriptionMasterDataConsumerService_CustomerSubscriptionUpdateHappyPath(string description, string subscriptionType, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Sanity",
                    "Positive",
                    "SubscriptionMasterDataConsumerService",
                    "US12870"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SubscriptionMasterDataConsumerService_CustomerSubscriptionUpdateHappyPath", @__tags);
#line 141
this.ScenarioSetup(scenarioInfo);
#line 142
   testRunner.Given("SubscriptionMasterDataConsumerService Is Ready To Verify \'SubscriptionMasterDataC" +
                    "onsumerService_CustomerSubscriptionUpdateHappyPath\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 143
  testRunner.And("SubscriptionService CustomerSubscriptionUpdate Request Is Setup With Default Valu" +
                    "es", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 144
   testRunner.When("I Post Valid SubscriptionService CustomerSubscriptionUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 145
   testRunner.Then("The SubscriptionService CustomerSubscriptionUpdated Details Are Stored in Custome" +
                    "rSubscription table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionMasterDataConsumerService_CustomerSubscriptionUpdateHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Subscription MasterData ConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sanity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionMasterDataConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US12870")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Manual 3D Project Monitoring")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Manual 3D Project Monitoring")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionType", "Manual 3D Project Monitoring")]
        public virtual void SubscriptionMasterDataConsumerService_CustomerSubscriptionUpdateHappyPath_Manual3DProjectMonitoring()
        {
            this.SubscriptionMasterDataConsumerService_CustomerSubscriptionUpdateHappyPath("Manual 3D Project Monitoring", "Manual 3D Project Monitoring", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionMasterDataConsumerService_CustomerSubscriptionUpdateHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Subscription MasterData ConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sanity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionMasterDataConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US12870")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Operator Id/ Manage Operators")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Operator Id/ Manage Operators")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionType", "Operator Id/ Manage Operators")]
        public virtual void SubscriptionMasterDataConsumerService_CustomerSubscriptionUpdateHappyPath_OperatorIdManageOperators()
        {
            this.SubscriptionMasterDataConsumerService_CustomerSubscriptionUpdateHappyPath("Operator Id/ Manage Operators", "Operator Id/ Manage Operators", ((string[])(null)));
        }
        
        public virtual void SubscriptionMasterDataConsumerService_CustomerSubscriptionpdateValidOptionalFields(string description, string startDate, string endDate, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Positive",
                    "SubscriptionMasterDataConsumerService",
                    "US12870"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SubscriptionMasterDataConsumerService_CustomerSubscriptionpdateValidOptionalField" +
                    "s", @__tags);
#line 153
this.ScenarioSetup(scenarioInfo);
#line 154
   testRunner.Given("SubscriptionService Is Ready To Verify \'SubscriptionMasterDataConsumerService_Cus" +
                    "tomerSubscriptionUpdateValidOptionalFields\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 155
  testRunner.And("SubscriptionService CustomerSubscriptionUpdate Request Is Setup With Default Valu" +
                    "es", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 156
   testRunner.When(string.Format("I Set SubscriptionService CustomerSubscriptionUpdate StartDate  To \'{0}\'", startDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 157
  testRunner.And(string.Format("I Set SubscriptionService CustomerSubscriptionUpdate EndDate To \'{0}\'", endDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 158
     testRunner.And("I Post Valid SubscriptionService CustomerSubscriptionUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 159
   testRunner.Then("The SubscriptionService CustomerSubscriptionUpdated Details Are Stored in Custome" +
                    "rSubscription table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionMasterDataConsumerService_CustomerSubscriptionpdateValidOptionalField" +
            "s")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Subscription MasterData ConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionMasterDataConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US12870")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "StartDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "StartDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StartDate", "11/22/2015 2:29:55 PM")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EndDate", "NULL_NULL")]
        public virtual void SubscriptionMasterDataConsumerService_CustomerSubscriptionpdateValidOptionalFields_StartDate()
        {
            this.SubscriptionMasterDataConsumerService_CustomerSubscriptionpdateValidOptionalFields("StartDate", "11/22/2015 2:29:55 PM", "NULL_NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionMasterDataConsumerService_CustomerSubscriptionpdateValidOptionalField" +
            "s")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Subscription MasterData ConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionMasterDataConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US12870")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "EndDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "EndDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StartDate", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EndDate", "11/22/2015 2:29:55 PM")]
        public virtual void SubscriptionMasterDataConsumerService_CustomerSubscriptionpdateValidOptionalFields_EndDate()
        {
            this.SubscriptionMasterDataConsumerService_CustomerSubscriptionpdateValidOptionalFields("EndDate", "NULL_NULL", "11/22/2015 2:29:55 PM", ((string[])(null)));
        }
        
        public virtual void SubscriptionMasterDataConsumerService_ProjectSubscriptionCreateHappyPath(string description, string subscriptionType, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Sanity",
                    "Positive",
                    "SubscriptionMasterDataConsumerService",
                    "US12870"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SubscriptionMasterDataConsumerService_ProjectSubscriptionCreateHappyPath", @__tags);
#line 167
this.ScenarioSetup(scenarioInfo);
#line 168
   testRunner.Given("SubscriptionMasterDataConsumerService Is Ready To Verify \'SubscriptionMasterDataC" +
                    "onsumerService_ProjectSubscriptionCreateHappyPath\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 169
  testRunner.And("SubscriptionService ProjectSubscriptionCreate Request Is Setup With Default Value" +
                    "s", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 170
   testRunner.When(string.Format("I set SubscriptionService ProjectSubscriptionCreate SubscriptionType To \'{0}\'", subscriptionType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 171
     testRunner.And("I Post Valid SubscriptionService ProjectSubscriptionCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 172
   testRunner.Then("SubscriptionService ProjectSubscriptionCreated Details Are Stored in ProjectSubsc" +
                    "ription and CustomerSubscription tables", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionMasterDataConsumerService_ProjectSubscriptionCreateHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Subscription MasterData ConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sanity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionMasterDataConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US12870")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Landfill")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Landfill")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionType", "Landfill")]
        public virtual void SubscriptionMasterDataConsumerService_ProjectSubscriptionCreateHappyPath_Landfill()
        {
            this.SubscriptionMasterDataConsumerService_ProjectSubscriptionCreateHappyPath("Landfill", "Landfill", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionMasterDataConsumerService_ProjectSubscriptionCreateHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Subscription MasterData ConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sanity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionMasterDataConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US12870")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Project Monitoring")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Project Monitoring")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionType", "Project Monitoring")]
        public virtual void SubscriptionMasterDataConsumerService_ProjectSubscriptionCreateHappyPath_ProjectMonitoring()
        {
            this.SubscriptionMasterDataConsumerService_ProjectSubscriptionCreateHappyPath("Project Monitoring", "Project Monitoring", ((string[])(null)));
        }
        
        public virtual void SubscriptionMasterDataConsumerService_ProjectSubscriptionUpdateHappyPath(string description, string subscriptionType, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Sanity",
                    "Positive",
                    "SubscriptionMasterDataConsumerService",
                    "US12870"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SubscriptionMasterDataConsumerService_ProjectSubscriptionUpdateHappyPath", @__tags);
#line 180
this.ScenarioSetup(scenarioInfo);
#line 181
   testRunner.Given("SubscriptionMasterDataConsumerService Is Ready To Verify \'SubscriptionMasterDataC" +
                    "onsumerService_ProjectSubscriptionUpdateHappyPath\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 182
  testRunner.And("SubscriptionService ProjectSubscriptionUpdate Request Is Setup With Default Value" +
                    "s", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 183
   testRunner.When(string.Format("I set SubscriptionService ProjectSubscriptionUpdate SubscriptionType To \'{0}\'", subscriptionType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 184
  testRunner.And("I Post Valid SubscriptionService ProjectSubscriptionUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 185
   testRunner.Then("SubscriptionService ProjectSubscriptionUpdated Details Are Stored in ProjectSubsc" +
                    "ription and CustomerSubscription tables", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionMasterDataConsumerService_ProjectSubscriptionUpdateHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Subscription MasterData ConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sanity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionMasterDataConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US12870")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Landfill")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Landfill")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionType", "Landfill")]
        public virtual void SubscriptionMasterDataConsumerService_ProjectSubscriptionUpdateHappyPath_Landfill()
        {
            this.SubscriptionMasterDataConsumerService_ProjectSubscriptionUpdateHappyPath("Landfill", "Landfill", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionMasterDataConsumerService_ProjectSubscriptionUpdateHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Subscription MasterData ConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sanity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionMasterDataConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US12870")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Project Monitoring")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Project Monitoring")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionType", "Project Monitoring")]
        public virtual void SubscriptionMasterDataConsumerService_ProjectSubscriptionUpdateHappyPath_ProjectMonitoring()
        {
            this.SubscriptionMasterDataConsumerService_ProjectSubscriptionUpdateHappyPath("Project Monitoring", "Project Monitoring", ((string[])(null)));
        }
        
        public virtual void SubscriptionMasterDataConsumerService_ProjectSubscriptionpdateValidOptionalFields(string description, string startDate, string endDate, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Positive",
                    "SubscriptionMasterDataConsumerService",
                    "US13356"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SubscriptionMasterDataConsumerService_ProjectSubscriptionpdateValidOptionalFields" +
                    "", @__tags);
#line 193
this.ScenarioSetup(scenarioInfo);
#line 194
   testRunner.Given("SubscriptionMasterDataConsumerService Is Ready To Verify \'SubscriptionReadService" +
                    "_ProjectSubscriptionpdateValidOptionalFields\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 195
  testRunner.And("SubscriptionService ProjectSubscriptionUpdate Request Is Setup With Default Value" +
                    "s", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 196
   testRunner.When(string.Format("I Set SubscriptionService ProjectSubscriptionUpdate StartDate  To \'{0}\'", startDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 197
  testRunner.And(string.Format("I Set SubscriptionService ProjectSubscriptionUpdate EndDate To \'{0}\'", endDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 198
     testRunner.And("I Post Valid SubscriptionService ProjectSubscriptionUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 199
   testRunner.Then("SubscriptionService ProjectSubscriptionUpdated Details Are Stored in ProjectSubsc" +
                    "ription and CustomerSubscription tables", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionMasterDataConsumerService_ProjectSubscriptionpdateValidOptionalFields" +
            "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Subscription MasterData ConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionMasterDataConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US13356")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "StartDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "StartDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StartDate", "11/22/2015 2:29:55 PM")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EndDate", "NULL_NULL")]
        public virtual void SubscriptionMasterDataConsumerService_ProjectSubscriptionpdateValidOptionalFields_StartDate()
        {
            this.SubscriptionMasterDataConsumerService_ProjectSubscriptionpdateValidOptionalFields("StartDate", "11/22/2015 2:29:55 PM", "NULL_NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionMasterDataConsumerService_ProjectSubscriptionpdateValidOptionalFields" +
            "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Subscription MasterData ConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionMasterDataConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US13356")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "EndDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "EndDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StartDate", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EndDate", "11/22/2015 2:29:55 PM")]
        public virtual void SubscriptionMasterDataConsumerService_ProjectSubscriptionpdateValidOptionalFields_EndDate()
        {
            this.SubscriptionMasterDataConsumerService_ProjectSubscriptionpdateValidOptionalFields("EndDate", "NULL_NULL", "11/22/2015 2:29:55 PM", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionMasterDataConsumerService_ProjectSubscription_MultipleProjectsForSame" +
            "Customer")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Subscription MasterData ConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionMasterDataConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US12870")]
        public virtual void SubscriptionMasterDataConsumerService_ProjectSubscription_MultipleProjectsForSameCustomer()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SubscriptionMasterDataConsumerService_ProjectSubscription_MultipleProjectsForSame" +
                    "Customer", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "SubscriptionMasterDataConsumerService",
                        "US12870"});
#line 207
this.ScenarioSetup(scenarioInfo);
#line 208
   testRunner.Given("SubscriptionMasterDataConsumerService Is Ready To Verify \'SubscriptionMasterDataC" +
                    "onsumerService_ProjectSubscription_MultipleProjectsForSameCustomer\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 209
  testRunner.And("SubscriptionService ProjectSubscriptionCreate Request Is Setup With Default Value" +
                    "s", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 210
   testRunner.When("I set SubscriptionService ProjectSubscriptionCreate StartDate To Min Date", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 211
     testRunner.And("I Post Valid SubscriptionService ProjectSubscriptionCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 212
  testRunner.And("I set SubscriptionService ProjectSubscriptionCreate StartDate To Current Date", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 213
  testRunner.And("I Post Valid SubscriptionService ProjectSubscriptionCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 214
   testRunner.Then("SubscriptionService ProjectSubscriptionCreated Details Are Stored in ProjectSubsc" +
                    "ription table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 215
     testRunner.And("The CustomerSubscription table should have the StartDate as Min Date and End Date" +
                    " as Max Date", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionMasterDataConsumerService_ProjectSubscriptionAssociateProjectSubscrip" +
            "tionHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Subscription MasterData ConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sanity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionMasterDataConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US12870")]
        public virtual void SubscriptionMasterDataConsumerService_ProjectSubscriptionAssociateProjectSubscriptionHappyPath()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SubscriptionMasterDataConsumerService_ProjectSubscriptionAssociateProjectSubscrip" +
                    "tionHappyPath", new string[] {
                        "Automated",
                        "Sanity",
                        "Positive",
                        "SubscriptionMasterDataConsumerService",
                        "US12870"});
#line 220
this.ScenarioSetup(scenarioInfo);
#line 221
   testRunner.Given("SubscriptionMasterDataConsumerService Is Ready To Verify \'SubscriptionMasterDataC" +
                    "onsumerService_ProjectSubscriptionAssociateProjectSubscriptionHappyPath\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 222
  testRunner.And("SubscriptionService AssociateProjectSubscription Request Is Setup With Default Va" +
                    "lues", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 223
   testRunner.When("I Post Valid SubscriptionService AssociateProjectSubscription Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 224
   testRunner.Then("SubscriptionService ProjectSubscriptionAssociated Details Are Stored in ProjectSu" +
                    "bscription table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionMasterDataConsumerService_ProjectSubscriptionDissociateProjectSubscri" +
            "ptionHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Subscription MasterData ConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sanity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionMasterDataConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US12870")]
        public virtual void SubscriptionMasterDataConsumerService_ProjectSubscriptionDissociateProjectSubscriptionHappyPath()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SubscriptionMasterDataConsumerService_ProjectSubscriptionDissociateProjectSubscri" +
                    "ptionHappyPath", new string[] {
                        "Automated",
                        "Sanity",
                        "Positive",
                        "SubscriptionMasterDataConsumerService",
                        "US12870"});
#line 228
this.ScenarioSetup(scenarioInfo);
#line 229
   testRunner.Given("SubscriptionMasterDataConsumerService Is Ready To Verify \'SubscriptionMasterDataC" +
                    "onsumerService_ProjectSubscriptionDissociateProjectSubscriptionHappyPath\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 230
  testRunner.And("SubscriptionService DissociateProjectSubscription Request Is Setup With Default V" +
                    "alues", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 231
   testRunner.When("I Post Valid SubscriptionService DissociateProjectSubscription Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 232
   testRunner.Then("SubscriptionService ProjectSubscriptionAssociated Details Are Stored in ProjectSu" +
                    "bscription table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
