// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace VSS.MasterData.Asset.AcceptanceTests.Scenarios.AssetService
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class AssetServiceFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "AssetService.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "AssetService", " References : A. Contract Document - None\r\n Dependencies:  Internal -  Kafka Topi" +
                    "c\r\n     User Story 7349  : Asset Service (Master Data Manaetement)\r\n  User Story" +
                    " 21042 : Migrate Asset Service to IKVM Kafka Driver", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "AssetService")))
            {
                VSS.MasterData.Asset.AcceptanceTests.Scenarios.AssetService.AssetServiceFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sanity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        public virtual void AssetService_CreateHappyPath()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_CreateHappyPath", new string[] {
                        "Automated",
                        "Sanity",
                        "Positive",
                        "AssetService",
                        "US7349",
                        "US21042"});
#line 10
this.ScenarioSetup(scenarioInfo);
#line 11
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_CreateHappyPath\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 12
 testRunner.And("AssetServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
 testRunner.When("I Post Valid AssetServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 14
 testRunner.Then("The AssetCreated Details must be stored in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sanity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        public virtual void AssetService_UpdateHappyPath()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_UpdateHappyPath", new string[] {
                        "Automated",
                        "Sanity",
                        "Positive",
                        "AssetService",
                        "US7349",
                        "US21042"});
#line 19
this.ScenarioSetup(scenarioInfo);
#line 20
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_UpdateHappyPath\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 21
 testRunner.And("AssetServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
 testRunner.When("I Post Valid AssetServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 23
 testRunner.Then("The AssetUpdated Details must be stored in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_DeleteHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sanity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        public virtual void AssetService_DeleteHappyPath()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_DeleteHappyPath", new string[] {
                        "Automated",
                        "Sanity",
                        "Positive",
                        "AssetService",
                        "US7349",
                        "US21042"});
#line 28
this.ScenarioSetup(scenarioInfo);
#line 30
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_DeleteHappyPath\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 31
 testRunner.And("AssetServiceDelete Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
 testRunner.When("I Post Valid AssetServiceDelete Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 33
 testRunner.Then("The AssetDeleted Details must be stored in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void AssetService_CreateValidMakeCode(string description, string makeCode, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Positive",
                    "AssetService",
                    "US7349",
                    "US21042"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_CreateValidMakeCode", @__tags);
#line 38
this.ScenarioSetup(scenarioInfo);
#line 39
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_CreateValidMakeCode\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 40
 testRunner.And("AssetServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
 testRunner.When(string.Format("I Set AssetServiceCreate MakeCode To \'{0}\'", makeCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 42
 testRunner.And("I Post Valid AssetServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
 testRunner.Then("The AssetCreated Details must be stored in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateValidMakeCode")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InLowerCase")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InLowerCase")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MakeCode", "cat")]
        public virtual void AssetService_CreateValidMakeCode_InLowerCase()
        {
            this.AssetService_CreateValidMakeCode("InLowerCase", "cat", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateValidMakeCode")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InUpperCase")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InUpperCase")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MakeCode", "CAT")]
        public virtual void AssetService_CreateValidMakeCode_InUpperCase()
        {
            this.AssetService_CreateValidMakeCode("InUpperCase", "CAT", ((string[])(null)));
        }
        
        public virtual void AssetService_CreateValidSerialNumber(string description, string serialNumber, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Positive",
                    "AssetService",
                    "US7349",
                    "US21042"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_CreateValidSerialNumber", @__tags);
#line 53
this.ScenarioSetup(scenarioInfo);
#line 54
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_CreateValidSerialNumber\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 55
 testRunner.And("AssetServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
 testRunner.When(string.Format("I Set AssetServiceCreate SerialNumber To \'{0}\'", serialNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 57
 testRunner.And("I Post Valid AssetServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 58
 testRunner.Then("The AssetCreated Details must be stored in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateValidSerialNumber")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SingleQuotes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SingleQuotes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SerialNumber", "A0544 - \'08 730EJ")]
        public virtual void AssetService_CreateValidSerialNumber_SingleQuotes()
        {
            this.AssetService_CreateValidSerialNumber("SingleQuotes", "A0544 - \'08 730EJ", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateValidSerialNumber")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SplCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SplCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SerialNumber", "JEGMA CONST. & DEV\'T")]
        public virtual void AssetService_CreateValidSerialNumber_SplCharacters()
        {
            this.AssetService_CreateValidSerialNumber("SplCharacters", "JEGMA CONST. & DEV\'T", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateValidSerialNumber")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "DoubleQuotes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "DoubleQuotes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SerialNumber", "TRK\"")]
        public virtual void AssetService_CreateValidSerialNumber_DoubleQuotes()
        {
            this.AssetService_CreateValidSerialNumber("DoubleQuotes", "TRK\"", ((string[])(null)));
        }
        
        public virtual void AssetService_CreateValidAssetName(string description, string assetName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Positive",
                    "AssetService",
                    "US7349",
                    "US21042"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_CreateValidAssetName", @__tags);
#line 69
this.ScenarioSetup(scenarioInfo);
#line 70
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_CreateValidAssetName\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 71
 testRunner.And("AssetServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 72
 testRunner.When(string.Format("I Set AssetServiceCreate AssetName To \'{0}\'", assetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 73
 testRunner.And("I Post Valid AssetServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 74
 testRunner.Then("The AssetCreated Details must be stored in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateValidAssetName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetName", "NULL_NULL")]
        public virtual void AssetService_CreateValidAssetName_NULL()
        {
            this.AssetService_CreateValidAssetName("NULL", "NULL_NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateValidAssetName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetName", "EMPTY_EMPTY")]
        public virtual void AssetService_CreateValidAssetName_EMPTY()
        {
            this.AssetService_CreateValidAssetName("EMPTY", "EMPTY_EMPTY", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateValidAssetName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SingleQuotes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SingleQuotes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetName", "A0544 - \'08 730EJ")]
        public virtual void AssetService_CreateValidAssetName_SingleQuotes()
        {
            this.AssetService_CreateValidAssetName("SingleQuotes", "A0544 - \'08 730EJ", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateValidAssetName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SplCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SplCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetName", "JEGMA CONST. & DEV\'T")]
        public virtual void AssetService_CreateValidAssetName_SplCharacters()
        {
            this.AssetService_CreateValidAssetName("SplCharacters", "JEGMA CONST. & DEV\'T", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateValidAssetName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "DoubleQuotes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "DoubleQuotes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetName", "213-9632 15.75\" BUCKET")]
        public virtual void AssetService_CreateValidAssetName_DoubleQuotes()
        {
            this.AssetService_CreateValidAssetName("DoubleQuotes", "213-9632 15.75\" BUCKET", ((string[])(null)));
        }
        
        public virtual void AssetService_CreateValidAssetType(string description, string assetType, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Positive",
                    "AssetService",
                    "US7349",
                    "US21042"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_CreateValidAssetType", @__tags);
#line 87
this.ScenarioSetup(scenarioInfo);
#line 88
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_CreateValidAssetType\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 89
 testRunner.And("AssetServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 90
 testRunner.When(string.Format("I Set AssetServiceCreate AssetType To \'{0}\'", assetType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 91
 testRunner.And("I Post Valid AssetServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 92
 testRunner.Then("The AssetCreated Details must be stored in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateValidAssetType")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetType", "NULL_NULL")]
        public virtual void AssetService_CreateValidAssetType_NULL()
        {
            this.AssetService_CreateValidAssetType("NULL", "NULL_NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateValidAssetType")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetType", "EMPTY_EMPTY")]
        public virtual void AssetService_CreateValidAssetType_EMPTY()
        {
            this.AssetService_CreateValidAssetType("EMPTY", "EMPTY_EMPTY", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateValidAssetType")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SingleQuotes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SingleQuotes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetType", "A0544 - \'08 730EJ")]
        public virtual void AssetService_CreateValidAssetType_SingleQuotes()
        {
            this.AssetService_CreateValidAssetType("SingleQuotes", "A0544 - \'08 730EJ", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateValidAssetType")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SplCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SplCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetType", "JEGMA CONST. & DEV\'T")]
        public virtual void AssetService_CreateValidAssetType_SplCharacters()
        {
            this.AssetService_CreateValidAssetType("SplCharacters", "JEGMA CONST. & DEV\'T", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateValidAssetType")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "DoubleQuotes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "DoubleQuotes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetType", "213-9632 15.75\" BUCKET")]
        public virtual void AssetService_CreateValidAssetType_DoubleQuotes()
        {
            this.AssetService_CreateValidAssetType("DoubleQuotes", "213-9632 15.75\" BUCKET", ((string[])(null)));
        }
        
        public virtual void AssetService_CreateValidModel(string description, string model, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Positive",
                    "AssetService",
                    "US7349",
                    "US21042"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_CreateValidModel", @__tags);
#line 105
this.ScenarioSetup(scenarioInfo);
#line 106
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_CreateValidModel\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 107
 testRunner.And("AssetServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 108
 testRunner.When(string.Format("I Set AssetServiceCreate Model To \'{0}\'", model), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 109
 testRunner.And("I Post Valid AssetServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 110
 testRunner.Then("The AssetCreated Details must be stored in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateValidModel")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Model", "NULL_NULL")]
        public virtual void AssetService_CreateValidModel_NULL()
        {
            this.AssetService_CreateValidModel("NULL", "NULL_NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateValidModel")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Model", "EMPTY_EMPTY")]
        public virtual void AssetService_CreateValidModel_EMPTY()
        {
            this.AssetService_CreateValidModel("EMPTY", "EMPTY_EMPTY", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateValidModel")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SingleQuotes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SingleQuotes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Model", "A0544 - \'08 730EJ")]
        public virtual void AssetService_CreateValidModel_SingleQuotes()
        {
            this.AssetService_CreateValidModel("SingleQuotes", "A0544 - \'08 730EJ", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateValidModel")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SplCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SplCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Model", "JEGMA CONST. & DEV\'T")]
        public virtual void AssetService_CreateValidModel_SplCharacters()
        {
            this.AssetService_CreateValidModel("SplCharacters", "JEGMA CONST. & DEV\'T", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateValidModel")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "DoubleQuotes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "DoubleQuotes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Model", "213-9632 15.75\" BUCKET")]
        public virtual void AssetService_CreateValidModel_DoubleQuotes()
        {
            this.AssetService_CreateValidModel("DoubleQuotes", "213-9632 15.75\" BUCKET", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateValidModelYear_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        public virtual void AssetService_CreateValidModelYear_NULL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_CreateValidModelYear_NULL", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "AssetService",
                        "US7349",
                        "US21042"});
#line 123
this.ScenarioSetup(scenarioInfo);
#line 124
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_CreateValidModelYear_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 125
 testRunner.And("AssetServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 126
 testRunner.When("I Set AssetServiceCreate ModelYear To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 127
 testRunner.And("I Post Valid AssetServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 128
 testRunner.Then("The AssetCreated Details must be stored in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void AssetService_CreateValidEquipmentVIN(string description, string equipmentVIN, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Positive",
                    "AssetService",
                    "US7349",
                    "US21042"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_CreateValidEquipmentVIN", @__tags);
#line 133
this.ScenarioSetup(scenarioInfo);
#line 134
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_CreateValidEquipmentVIN\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 135
 testRunner.And("AssetServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 136
 testRunner.When(string.Format("I Set AssetServiceCreate EquipmentVIN To \'{0}\'", equipmentVIN), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 137
 testRunner.And("I Post Valid AssetServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 138
 testRunner.Then("The AssetCreated Details must be stored in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateValidEquipmentVIN")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EquipmentVIN", "NULL_NULL")]
        public virtual void AssetService_CreateValidEquipmentVIN_NULL()
        {
            this.AssetService_CreateValidEquipmentVIN("NULL", "NULL_NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateValidEquipmentVIN")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EquipmentVIN", "EMPTY_EMPTY")]
        public virtual void AssetService_CreateValidEquipmentVIN_EMPTY()
        {
            this.AssetService_CreateValidEquipmentVIN("EMPTY", "EMPTY_EMPTY", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateValidEquipmentVIN")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SingleQuotes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SingleQuotes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EquipmentVIN", "A0544 - \'08 730EJ")]
        public virtual void AssetService_CreateValidEquipmentVIN_SingleQuotes()
        {
            this.AssetService_CreateValidEquipmentVIN("SingleQuotes", "A0544 - \'08 730EJ", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateValidEquipmentVIN")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SplCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SplCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EquipmentVIN", "JEGMA CONST. & DEV\'T")]
        public virtual void AssetService_CreateValidEquipmentVIN_SplCharacters()
        {
            this.AssetService_CreateValidEquipmentVIN("SplCharacters", "JEGMA CONST. & DEV\'T", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateValidEquipmentVIN")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "DoubleQuotes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "DoubleQuotes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EquipmentVIN", "213-9632 15.75\" BUCKET")]
        public virtual void AssetService_CreateValidEquipmentVIN_DoubleQuotes()
        {
            this.AssetService_CreateValidEquipmentVIN("DoubleQuotes", "213-9632 15.75\" BUCKET", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateValidIconKey_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        public virtual void AssetService_CreateValidIconKey_NULL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_CreateValidIconKey_NULL", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "AssetService",
                        "US7349",
                        "US21042"});
#line 151
this.ScenarioSetup(scenarioInfo);
#line 152
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_CreateValidIconKey_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 153
 testRunner.And("AssetServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 154
 testRunner.When("I Set AssetServiceCreate IconKey To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 155
 testRunner.And("I Post Valid AssetServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 156
 testRunner.Then("The AssetCreated Details must be stored in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateValidLegacyAssetID_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        public virtual void AssetService_CreateValidLegacyAssetID_NULL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_CreateValidLegacyAssetID_NULL", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "AssetService",
                        "US7349",
                        "US21042"});
#line 161
this.ScenarioSetup(scenarioInfo);
#line 162
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_CreateValidLegacyAssetID_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 163
 testRunner.And("AssetServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 164
 testRunner.When("I Set AssetServiceCreate LegacyAssetID To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 165
 testRunner.And("I Post Valid AssetServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 166
 testRunner.Then("The AssetCreated Details must be stored in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateValidOptionalFields_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        public virtual void AssetService_CreateValidOptionalFields_NULL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_CreateValidOptionalFields_NULL", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "AssetService",
                        "US7349",
                        "US21042"});
#line 171
this.ScenarioSetup(scenarioInfo);
#line 172
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_CreateValidOptionalFields_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 173
 testRunner.And("AssetServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "AssetName",
                        "AssetType",
                        "Model",
                        "ModelYear",
                        "EquipmentVIN",
                        "IconKey",
                        "LegacyAssetID"});
            table1.AddRow(new string[] {
                        "NULL_NULL",
                        "NULL_NULL",
                        "NULL_NULL",
                        "NULL_NULL",
                        "NULL_NULL",
                        "NULL_NULL",
                        "NULL_NULL"});
#line 174
 testRunner.When("I Post Valid AssetServiceCreate Request With The Below Values", ((string)(null)), table1, "When ");
#line 177
 testRunner.Then("The AssetCreated Details must be stored in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateValidAssetName_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        public virtual void AssetService_UpdateValidAssetName_NULL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_UpdateValidAssetName_NULL", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "AssetService",
                        "US7349",
                        "US21042"});
#line 182
this.ScenarioSetup(scenarioInfo);
#line 183
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_UpdateValidAssetName_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 184
 testRunner.And("AssetServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "AssetName",
                        "AssetType",
                        "Model",
                        "ModelYear",
                        "EquipmentVIN",
                        "IconKey",
                        "LegacyAssetID"});
            table2.AddRow(new string[] {
                        "NULL_NULL",
                        "Loader",
                        "A60",
                        "2010",
                        "TestAsset123",
                        "30",
                        "109289009947"});
#line 185
 testRunner.When("I Post Valid AssetServiceUpdate Request With The Below Values", ((string)(null)), table2, "When ");
#line 188
 testRunner.Then("The AssetUpdated Details must be stored in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void AssetService_UpdateValidAssetName(string description, string assetName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Positive",
                    "AssetService",
                    "US7349",
                    "US21042",
                    "Bug22230"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_UpdateValidAssetName", @__tags);
#line 193
this.ScenarioSetup(scenarioInfo);
#line 194
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_UpdateValidAssetName\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 195
 testRunner.And("AssetServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 196
 testRunner.When(string.Format("I Set AssetServiceUpdate AssetName To \'{0}\'", assetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 197
 testRunner.And("I Post Valid AssetServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 198
 testRunner.Then("The AssetUpdated Details must be stored in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateValidAssetName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Bug22230")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetName", "EMPTY_EMPTY")]
        public virtual void AssetService_UpdateValidAssetName_EMPTY()
        {
            this.AssetService_UpdateValidAssetName("EMPTY", "EMPTY_EMPTY", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateValidAssetName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Bug22230")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SingleQuotes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SingleQuotes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetName", "A0544 - \'08 730EJ")]
        public virtual void AssetService_UpdateValidAssetName_SingleQuotes()
        {
            this.AssetService_UpdateValidAssetName("SingleQuotes", "A0544 - \'08 730EJ", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateValidAssetName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Bug22230")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SplCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SplCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetName", "JEGMA CONST. & DEV\'T")]
        public virtual void AssetService_UpdateValidAssetName_SplCharacters()
        {
            this.AssetService_UpdateValidAssetName("SplCharacters", "JEGMA CONST. & DEV\'T", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateValidAssetName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Bug22230")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "DoubleQuotes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "DoubleQuotes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetName", "213-9632 15.75\" BUCKET")]
        public virtual void AssetService_UpdateValidAssetName_DoubleQuotes()
        {
            this.AssetService_UpdateValidAssetName("DoubleQuotes", "213-9632 15.75\" BUCKET", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateValidAssetType_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        public virtual void AssetService_UpdateValidAssetType_NULL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_UpdateValidAssetType_NULL", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "AssetService",
                        "US7349",
                        "US21042"});
#line 210
this.ScenarioSetup(scenarioInfo);
#line 211
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_UpdateValidAssetType_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 212
 testRunner.And("AssetServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "AssetName",
                        "AssetType",
                        "Model",
                        "ModelYear",
                        "EquipmentVIN",
                        "IconKey",
                        "LegacyAssetID"});
            table3.AddRow(new string[] {
                        "TestAsset256",
                        "NULL_NULL",
                        "B89",
                        "2013",
                        "TestAsset256",
                        "17",
                        "109289009947"});
#line 213
 testRunner.When("I Post Valid AssetServiceUpdate Request With The Below Values", ((string)(null)), table3, "When ");
#line 216
 testRunner.Then("The AssetUpdated Details must be stored in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void AssetService_UpdateValidAssetType(string description, string assetType, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Positive",
                    "AssetService",
                    "US7349",
                    "US21042",
                    "Bug22230"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_UpdateValidAssetType", @__tags);
#line 221
this.ScenarioSetup(scenarioInfo);
#line 222
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_UpdateValidAssetType\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 223
 testRunner.And("AssetServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 224
 testRunner.When(string.Format("I Set AssetServiceUpdate AssetType To \'{0}\'", assetType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 225
 testRunner.And("I Post Valid AssetServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 226
 testRunner.Then("The AssetUpdated Details must be stored in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateValidAssetType")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Bug22230")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetType", "EMPTY_EMPTY")]
        public virtual void AssetService_UpdateValidAssetType_EMPTY()
        {
            this.AssetService_UpdateValidAssetType("EMPTY", "EMPTY_EMPTY", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateValidAssetType")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Bug22230")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SingleQuotes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SingleQuotes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetType", "A0544 - \'08 730EJ")]
        public virtual void AssetService_UpdateValidAssetType_SingleQuotes()
        {
            this.AssetService_UpdateValidAssetType("SingleQuotes", "A0544 - \'08 730EJ", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateValidAssetType")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Bug22230")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SplCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SplCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetType", "JEGMA CONST. & DEV\'T")]
        public virtual void AssetService_UpdateValidAssetType_SplCharacters()
        {
            this.AssetService_UpdateValidAssetType("SplCharacters", "JEGMA CONST. & DEV\'T", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateValidAssetType")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Bug22230")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "DoubleQuotes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "DoubleQuotes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetType", "213-9632 15.75\" BUCKET")]
        public virtual void AssetService_UpdateValidAssetType_DoubleQuotes()
        {
            this.AssetService_UpdateValidAssetType("DoubleQuotes", "213-9632 15.75\" BUCKET", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateValidModel_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        public virtual void AssetService_UpdateValidModel_NULL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_UpdateValidModel_NULL", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "AssetService",
                        "US7349",
                        "US21042"});
#line 238
this.ScenarioSetup(scenarioInfo);
#line 239
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_UpdateValidModel_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 240
 testRunner.And("AssetServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "AssetName",
                        "AssetType",
                        "Model",
                        "ModelYear",
                        "EquipmentVIN",
                        "IconKey",
                        "LegacyAssetID"});
            table4.AddRow(new string[] {
                        "TestAsset892",
                        "LOADER",
                        "NULL_NULL",
                        "2011",
                        "TestAsset256",
                        "30",
                        "109289009947"});
#line 241
 testRunner.When("I Post Valid AssetServiceUpdate Request With The Below Values", ((string)(null)), table4, "When ");
#line 244
 testRunner.Then("The AssetUpdated Details must be stored in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void AssetService_UpdateValidModel(string description, string model, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Positive",
                    "AssetService",
                    "US7349",
                    "US21042",
                    "Bug22230"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_UpdateValidModel", @__tags);
#line 249
this.ScenarioSetup(scenarioInfo);
#line 250
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_UpdateValidModel\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 251
 testRunner.And("AssetServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 252
 testRunner.When(string.Format("I Set AssetServiceUpdate Model To \'{0}\'", model), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 253
 testRunner.And("I Post Valid AssetServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 254
 testRunner.Then("The AssetUpdated Details must be stored in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateValidModel")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Bug22230")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Model", "EMPTY_EMPTY")]
        public virtual void AssetService_UpdateValidModel_EMPTY()
        {
            this.AssetService_UpdateValidModel("EMPTY", "EMPTY_EMPTY", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateValidModel")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Bug22230")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SingleQuotes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SingleQuotes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Model", "A0544 - \'08 730EJ")]
        public virtual void AssetService_UpdateValidModel_SingleQuotes()
        {
            this.AssetService_UpdateValidModel("SingleQuotes", "A0544 - \'08 730EJ", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateValidModel")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Bug22230")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SplCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SplCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Model", "JEGMA CONST. & DEV\'T")]
        public virtual void AssetService_UpdateValidModel_SplCharacters()
        {
            this.AssetService_UpdateValidModel("SplCharacters", "JEGMA CONST. & DEV\'T", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateValidModel")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Bug22230")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "DoubleQuotes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "DoubleQuotes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Model", "213-9632 15.75\" BUCKET")]
        public virtual void AssetService_UpdateValidModel_DoubleQuotes()
        {
            this.AssetService_UpdateValidModel("DoubleQuotes", "213-9632 15.75\" BUCKET", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateValidModelYear_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        public virtual void AssetService_UpdateValidModelYear_NULL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_UpdateValidModelYear_NULL", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "AssetService",
                        "US7349",
                        "US21042"});
#line 266
this.ScenarioSetup(scenarioInfo);
#line 267
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_UpdateValidModelYear_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 268
 testRunner.And("AssetServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "AssetName",
                        "AssetType",
                        "Model",
                        "ModelYear",
                        "EquipmentVIN",
                        "IconKey",
                        "LegacyAssetID"});
            table5.AddRow(new string[] {
                        "TestAsset892",
                        "MULTI TERRAIN LOADERS",
                        "B89",
                        "NULL_NULL",
                        "TestAsset256",
                        "17",
                        "109289009947"});
#line 269
 testRunner.When("I Post Valid AssetServiceUpdate Request With The Below Values", ((string)(null)), table5, "When ");
#line 272
 testRunner.Then("The AssetUpdated Details must be stored in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateValidEquipmentVIN_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        public virtual void AssetService_UpdateValidEquipmentVIN_NULL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_UpdateValidEquipmentVIN_NULL", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "AssetService",
                        "US7349",
                        "US21042"});
#line 277
this.ScenarioSetup(scenarioInfo);
#line 278
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_UpdateValidEquipmentVIN_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 279
 testRunner.And("AssetServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "AssetName",
                        "AssetType",
                        "Model",
                        "ModelYear",
                        "EquipmentVIN",
                        "IconKey",
                        "LegacyAssetID"});
            table6.AddRow(new string[] {
                        "TestAssetayt",
                        "PIPELAYERS",
                        "H88",
                        "2011",
                        "NULL_NULL",
                        "30",
                        "109289009947"});
#line 280
 testRunner.When("I Post Valid AssetServiceUpdate Request With The Below Values", ((string)(null)), table6, "When ");
#line 283
 testRunner.Then("The AssetUpdated Details must be stored in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void AssetService_UpdateValidEquipmentVIN(string description, string equipmentVIN, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Positive",
                    "AssetService",
                    "US7349",
                    "US21042",
                    "Bug22230"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_UpdateValidEquipmentVIN", @__tags);
#line 288
this.ScenarioSetup(scenarioInfo);
#line 289
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_UpdateValidEquipmentVIN\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 290
 testRunner.And("AssetServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 291
 testRunner.When(string.Format("I Set AssetServiceUpdate EquipmentVIN To \'{0}\'", equipmentVIN), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 292
 testRunner.And("I Post Valid AssetServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 293
 testRunner.Then("The AssetUpdated Details must be stored in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateValidEquipmentVIN")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Bug22230")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EquipmentVIN", "EMPTY_EMPTY")]
        public virtual void AssetService_UpdateValidEquipmentVIN_EMPTY()
        {
            this.AssetService_UpdateValidEquipmentVIN("EMPTY", "EMPTY_EMPTY", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateValidEquipmentVIN")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Bug22230")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SingleQuotes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SingleQuotes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EquipmentVIN", "A0544 - \'08 730EJ")]
        public virtual void AssetService_UpdateValidEquipmentVIN_SingleQuotes()
        {
            this.AssetService_UpdateValidEquipmentVIN("SingleQuotes", "A0544 - \'08 730EJ", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateValidEquipmentVIN")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Bug22230")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SplCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SplCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EquipmentVIN", "JEGMA CONST. & DEV\'T")]
        public virtual void AssetService_UpdateValidEquipmentVIN_SplCharacters()
        {
            this.AssetService_UpdateValidEquipmentVIN("SplCharacters", "JEGMA CONST. & DEV\'T", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateValidEquipmentVIN")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Bug22230")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "DoubleQuotes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "DoubleQuotes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EquipmentVIN", "213-9632 15.75\" BUCKET")]
        public virtual void AssetService_UpdateValidEquipmentVIN_DoubleQuotes()
        {
            this.AssetService_UpdateValidEquipmentVIN("DoubleQuotes", "213-9632 15.75\" BUCKET", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateValidIconKey_Blank")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        public virtual void AssetService_UpdateValidIconKey_Blank()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_UpdateValidIconKey_Blank", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "AssetService",
                        "US7349",
                        "US21042"});
#line 305
this.ScenarioSetup(scenarioInfo);
#line 306
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_UpdateValidIconKey_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 307
 testRunner.And("AssetServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "AssetName",
                        "AssetType",
                        "Model",
                        "ModelYear",
                        "EquipmentVIN",
                        "IconKey",
                        "LegacyAssetID"});
            table7.AddRow(new string[] {
                        "TestAsset145",
                        "PIPELAYERS",
                        "K90",
                        "2011",
                        "TestAsset256",
                        "NULL_NULL",
                        "6991574262784860160"});
#line 308
 testRunner.When("I Post Valid AssetServiceUpdate Request With The Below Values", ((string)(null)), table7, "When ");
#line 311
 testRunner.Then("The AssetUpdated Details must be stored in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateValidLegacyAssetID_Blank")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        public virtual void AssetService_UpdateValidLegacyAssetID_Blank()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_UpdateValidLegacyAssetID_Blank", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "AssetService",
                        "US7349",
                        "US21042"});
#line 316
this.ScenarioSetup(scenarioInfo);
#line 317
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_UpdateValidLegacyAssetID_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 318
 testRunner.And("AssetServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "AssetName",
                        "AssetType",
                        "Model",
                        "ModelYear",
                        "EquipmentVIN",
                        "IconKey",
                        "LegacyAssetID"});
            table8.AddRow(new string[] {
                        "TestAsset145",
                        "PIPELAYERS",
                        "K90",
                        "2011",
                        "TestAsset256",
                        "25",
                        "NULL_NULL"});
#line 319
 testRunner.When("I Post Valid AssetServiceUpdate Request With The Below Values", ((string)(null)), table8, "When ");
#line 322
 testRunner.Then("The AssetUpdated Details must be stored in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithValidMakeCode")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        public virtual void AssetService_CreateAssetWithValidMakeCode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_CreateAssetWithValidMakeCode", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "AssetService",
                        "US83964"});
#line 327
this.ScenarioSetup(scenarioInfo);
#line 328
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_CreateAssetWithValidMakeCode\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 329
 testRunner.And("AssetServiceCreate Request Is Setup With Default Values and Valid MakeCode", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 330
 testRunner.When("I Post Valid AssetServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 331
 testRunner.Then("The AssetCreated Details must be stored in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void AssetService_CreateAssetWithValidObjectType(string description, string objectType, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Positive",
                    "AssetService",
                    "US83964"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_CreateAssetWithValidObjectType", @__tags);
#line 336
this.ScenarioSetup(scenarioInfo);
#line 337
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_CreateAssetWithValidObjectType\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 338
 testRunner.And("AssetServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 339
 testRunner.When(string.Format("I Set AssetServiceCreate ObjectType To \'{0}\'", objectType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 340
 testRunner.And("I Post Valid AssetServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 341
 testRunner.Then("The AssetCreated Details must be stored in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithValidObjectType")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ObjectType_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ObjectType_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ObjectType", "EMPTY")]
        public virtual void AssetService_CreateAssetWithValidObjectType_ObjectType_Empty()
        {
            this.AssetService_CreateAssetWithValidObjectType("ObjectType_Empty", "EMPTY", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithValidObjectType")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ObjectType_Null")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ObjectType_Null")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ObjectType", "NULL")]
        public virtual void AssetService_CreateAssetWithValidObjectType_ObjectType_Null()
        {
            this.AssetService_CreateAssetWithValidObjectType("ObjectType_Null", "NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithValidObjectType")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ObjectType_MinCharacter")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ObjectType_MinCharacter")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ObjectType", "MinValue")]
        public virtual void AssetService_CreateAssetWithValidObjectType_ObjectType_MinCharacter()
        {
            this.AssetService_CreateAssetWithValidObjectType("ObjectType_MinCharacter", "MinValue", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithValidObjectType")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ObjectType_MaxCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ObjectType_MaxCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ObjectType", "MaxValue")]
        public virtual void AssetService_CreateAssetWithValidObjectType_ObjectType_MaxCharacters()
        {
            this.AssetService_CreateAssetWithValidObjectType("ObjectType_MaxCharacters", "MaxValue", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithValidObjectType")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ObjectType_ValidValue")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ObjectType_ValidValue")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ObjectType", "Valid")]
        public virtual void AssetService_CreateAssetWithValidObjectType_ObjectType_ValidValue()
        {
            this.AssetService_CreateAssetWithValidObjectType("ObjectType_ValidValue", "Valid", ((string[])(null)));
        }
        
        public virtual void AssetService_CreateAssetWithValidCategory(string description, string category, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Positive",
                    "AssetService",
                    "US83964"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_CreateAssetWithValidCategory", @__tags);
#line 354
this.ScenarioSetup(scenarioInfo);
#line 355
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_CreateAssetWithValidCategory\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 356
 testRunner.And("AssetServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 357
 testRunner.When(string.Format("I Set AssetServiceCreate Category To \'{0}\'", category), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 358
 testRunner.And("I Post Valid AssetServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 359
 testRunner.Then("The AssetCreated Details must be stored in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithValidCategory")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Category_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Category_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Category", "EMPTY")]
        public virtual void AssetService_CreateAssetWithValidCategory_Category_Empty()
        {
            this.AssetService_CreateAssetWithValidCategory("Category_Empty", "EMPTY", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithValidCategory")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Category_Null")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Category_Null")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Category", "NULL")]
        public virtual void AssetService_CreateAssetWithValidCategory_Category_Null()
        {
            this.AssetService_CreateAssetWithValidCategory("Category_Null", "NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithValidCategory")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Category_MinCharacter")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Category_MinCharacter")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Category", "MinValue")]
        public virtual void AssetService_CreateAssetWithValidCategory_Category_MinCharacter()
        {
            this.AssetService_CreateAssetWithValidCategory("Category_MinCharacter", "MinValue", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithValidCategory")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Category_MaxCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Category_MaxCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Category", "MaxValue")]
        public virtual void AssetService_CreateAssetWithValidCategory_Category_MaxCharacters()
        {
            this.AssetService_CreateAssetWithValidCategory("Category_MaxCharacters", "MaxValue", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithValidCategory")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Category_ValidValue")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Category_ValidValue")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Category", "Valid")]
        public virtual void AssetService_CreateAssetWithValidCategory_Category_ValidValue()
        {
            this.AssetService_CreateAssetWithValidCategory("Category_ValidValue", "Valid", ((string[])(null)));
        }
        
        public virtual void AssetService_CreateAssetWithValidProject(string description, string project, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Positive",
                    "AssetService",
                    "US83964"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_CreateAssetWithValidProject", @__tags);
#line 373
this.ScenarioSetup(scenarioInfo);
#line 374
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_CreateAssetWithValidProject\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 375
 testRunner.And("AssetServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 376
 testRunner.When(string.Format("I Set AssetServiceCreate Project To \'{0}\'", project), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 377
 testRunner.And("I Post Valid AssetServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 378
 testRunner.Then("The AssetCreated Details must be stored in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithValidProject")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Project_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Project_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Project", "EMPTY")]
        public virtual void AssetService_CreateAssetWithValidProject_Project_Empty()
        {
            this.AssetService_CreateAssetWithValidProject("Project_Empty", "EMPTY", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithValidProject")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Project_Null")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Project_Null")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Project", "NULL")]
        public virtual void AssetService_CreateAssetWithValidProject_Project_Null()
        {
            this.AssetService_CreateAssetWithValidProject("Project_Null", "NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithValidProject")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Project_MinCharacter")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Project_MinCharacter")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Project", "MinValue")]
        public virtual void AssetService_CreateAssetWithValidProject_Project_MinCharacter()
        {
            this.AssetService_CreateAssetWithValidProject("Project_MinCharacter", "MinValue", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithValidProject")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Project_MaxCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Project_MaxCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Project", "MaxValue")]
        public virtual void AssetService_CreateAssetWithValidProject_Project_MaxCharacters()
        {
            this.AssetService_CreateAssetWithValidProject("Project_MaxCharacters", "MaxValue", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithValidProject")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Project_ValidValue")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Project_ValidValue")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Project", "Valid")]
        public virtual void AssetService_CreateAssetWithValidProject_Project_ValidValue()
        {
            this.AssetService_CreateAssetWithValidProject("Project_ValidValue", "Valid", ((string[])(null)));
        }
        
        public virtual void AssetService_CreateAssetWithValidProjectStatus(string description, string projectStatus, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Positive",
                    "AssetService",
                    "US83964"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_CreateAssetWithValidProjectStatus", @__tags);
#line 391
this.ScenarioSetup(scenarioInfo);
#line 392
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_CreateAssetWithValidProjectStatus\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 393
 testRunner.And("AssetServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 394
 testRunner.When(string.Format("I Set AssetServiceCreate ProjectStatus To \'{0}\'", projectStatus), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 395
 testRunner.And("I Post Valid AssetServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 396
 testRunner.Then("The AssetCreated Details must be stored in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithValidProjectStatus")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ProjectStatus_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ProjectStatus_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProjectStatus", "EMPTY")]
        public virtual void AssetService_CreateAssetWithValidProjectStatus_ProjectStatus_Empty()
        {
            this.AssetService_CreateAssetWithValidProjectStatus("ProjectStatus_Empty", "EMPTY", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithValidProjectStatus")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ProjectStatus_Null")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ProjectStatus_Null")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProjectStatus", "NULL")]
        public virtual void AssetService_CreateAssetWithValidProjectStatus_ProjectStatus_Null()
        {
            this.AssetService_CreateAssetWithValidProjectStatus("ProjectStatus_Null", "NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithValidProjectStatus")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ProjectStatus_MinCharacter")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ProjectStatus_MinCharacter")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProjectStatus", "MinValue")]
        public virtual void AssetService_CreateAssetWithValidProjectStatus_ProjectStatus_MinCharacter()
        {
            this.AssetService_CreateAssetWithValidProjectStatus("ProjectStatus_MinCharacter", "MinValue", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithValidProjectStatus")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ProjectStatus_MaxCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ProjectStatus_MaxCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProjectStatus", "MaxValue")]
        public virtual void AssetService_CreateAssetWithValidProjectStatus_ProjectStatus_MaxCharacters()
        {
            this.AssetService_CreateAssetWithValidProjectStatus("ProjectStatus_MaxCharacters", "MaxValue", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithValidProjectStatus")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ProjectStatus_ValidValue")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ProjectStatus_ValidValue")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProjectStatus", "Valid")]
        public virtual void AssetService_CreateAssetWithValidProjectStatus_ProjectStatus_ValidValue()
        {
            this.AssetService_CreateAssetWithValidProjectStatus("ProjectStatus_ValidValue", "Valid", ((string[])(null)));
        }
        
        public virtual void AssetService_CreateAssetWithValidSortField(string description, string sortField, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Positive",
                    "AssetService",
                    "US83964"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_CreateAssetWithValidSortField", @__tags);
#line 409
this.ScenarioSetup(scenarioInfo);
#line 410
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_CreateAssetWithValidSortField\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 411
 testRunner.And("AssetServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 412
 testRunner.When(string.Format("I Set AssetServiceCreate SortField To \'{0}\'", sortField), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 413
 testRunner.And("I Post Valid AssetServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 414
 testRunner.Then("The AssetCreated Details must be stored in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithValidSortField")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SortField_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SortField_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SortField", "EMPTY")]
        public virtual void AssetService_CreateAssetWithValidSortField_SortField_Empty()
        {
            this.AssetService_CreateAssetWithValidSortField("SortField_Empty", "EMPTY", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithValidSortField")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SortField_Null")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SortField_Null")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SortField", "NULL")]
        public virtual void AssetService_CreateAssetWithValidSortField_SortField_Null()
        {
            this.AssetService_CreateAssetWithValidSortField("SortField_Null", "NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithValidSortField")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SortField_MinCharacter")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SortField_MinCharacter")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SortField", "MinValue")]
        public virtual void AssetService_CreateAssetWithValidSortField_SortField_MinCharacter()
        {
            this.AssetService_CreateAssetWithValidSortField("SortField_MinCharacter", "MinValue", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithValidSortField")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SortField_MaxCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SortField_MaxCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SortField", "MaxValue")]
        public virtual void AssetService_CreateAssetWithValidSortField_SortField_MaxCharacters()
        {
            this.AssetService_CreateAssetWithValidSortField("SortField_MaxCharacters", "MaxValue", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithValidSortField")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SortField_ValidValue")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SortField_ValidValue")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SortField", "Valid")]
        public virtual void AssetService_CreateAssetWithValidSortField_SortField_ValidValue()
        {
            this.AssetService_CreateAssetWithValidSortField("SortField_ValidValue", "Valid", ((string[])(null)));
        }
        
        public virtual void AssetService_CreateAssetWithValidSource(string description, string source, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Positive",
                    "AssetService",
                    "US83964"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_CreateAssetWithValidSource", @__tags);
#line 427
this.ScenarioSetup(scenarioInfo);
#line 428
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_CreateAssetWithValidSource\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 429
 testRunner.And("AssetServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 430
 testRunner.When(string.Format("I Set AssetServiceCreate Source To \'{0}\'", source), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 431
 testRunner.And("I Post Valid AssetServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 432
 testRunner.Then("The AssetCreated Details must be stored in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithValidSource")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Source_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Source_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Source", "EMPTY")]
        public virtual void AssetService_CreateAssetWithValidSource_Source_Empty()
        {
            this.AssetService_CreateAssetWithValidSource("Source_Empty", "EMPTY", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithValidSource")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Source_Null")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Source_Null")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Source", "NULL")]
        public virtual void AssetService_CreateAssetWithValidSource_Source_Null()
        {
            this.AssetService_CreateAssetWithValidSource("Source_Null", "NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithValidSource")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Source_MinCharacter")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Source_MinCharacter")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Source", "MinValue")]
        public virtual void AssetService_CreateAssetWithValidSource_Source_MinCharacter()
        {
            this.AssetService_CreateAssetWithValidSource("Source_MinCharacter", "MinValue", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithValidSource")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Source_MaxCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Source_MaxCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Source", "MaxValue")]
        public virtual void AssetService_CreateAssetWithValidSource_Source_MaxCharacters()
        {
            this.AssetService_CreateAssetWithValidSource("Source_MaxCharacters", "MaxValue", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithValidSource")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Source_ValidValue")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Source_ValidValue")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Source", "Valid")]
        public virtual void AssetService_CreateAssetWithValidSource_Source_ValidValue()
        {
            this.AssetService_CreateAssetWithValidSource("Source_ValidValue", "Valid", ((string[])(null)));
        }
        
        public virtual void AssetService_CreateAssetWithValidUserEnteredRuntimeHours(string description, string userEnteredRuntimeHours, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Positive",
                    "AssetService",
                    "US83964"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_CreateAssetWithValidUserEnteredRuntimeHours", @__tags);
#line 445
this.ScenarioSetup(scenarioInfo);
#line 446
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_CreateAssetWithValidUserEnteredRunt" +
                    "imeHours\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 447
 testRunner.And("AssetServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 448
 testRunner.When(string.Format("I Set AssetServiceCreate UserEnteredRuntimeHours To \'{0}\'", userEnteredRuntimeHours), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 449
 testRunner.And("I Post Valid AssetServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 450
 testRunner.Then("The AssetCreated Details must be stored in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithValidUserEnteredRuntimeHours")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "UserEnteredRuntimeHours_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "UserEnteredRuntimeHours_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserEnteredRuntimeHours", "EMPTY")]
        public virtual void AssetService_CreateAssetWithValidUserEnteredRuntimeHours_UserEnteredRuntimeHours_Empty()
        {
            this.AssetService_CreateAssetWithValidUserEnteredRuntimeHours("UserEnteredRuntimeHours_Empty", "EMPTY", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithValidUserEnteredRuntimeHours")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "UserEnteredRuntimeHours_Null")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "UserEnteredRuntimeHours_Null")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserEnteredRuntimeHours", "NULL")]
        public virtual void AssetService_CreateAssetWithValidUserEnteredRuntimeHours_UserEnteredRuntimeHours_Null()
        {
            this.AssetService_CreateAssetWithValidUserEnteredRuntimeHours("UserEnteredRuntimeHours_Null", "NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithValidUserEnteredRuntimeHours")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "UserEnteredRuntimeHours_MinCharacter")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "UserEnteredRuntimeHours_MinCharacter")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserEnteredRuntimeHours", "MinValue")]
        public virtual void AssetService_CreateAssetWithValidUserEnteredRuntimeHours_UserEnteredRuntimeHours_MinCharacter()
        {
            this.AssetService_CreateAssetWithValidUserEnteredRuntimeHours("UserEnteredRuntimeHours_MinCharacter", "MinValue", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithValidUserEnteredRuntimeHours")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "UserEnteredRuntimeHours_MaxCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "UserEnteredRuntimeHours_MaxCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserEnteredRuntimeHours", "MaxValue")]
        public virtual void AssetService_CreateAssetWithValidUserEnteredRuntimeHours_UserEnteredRuntimeHours_MaxCharacters()
        {
            this.AssetService_CreateAssetWithValidUserEnteredRuntimeHours("UserEnteredRuntimeHours_MaxCharacters", "MaxValue", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithValidUserEnteredRuntimeHours")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "UserEnteredRuntimeHours_ValidValue")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "UserEnteredRuntimeHours_ValidValue")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserEnteredRuntimeHours", "Valid")]
        public virtual void AssetService_CreateAssetWithValidUserEnteredRuntimeHours_UserEnteredRuntimeHours_ValidValue()
        {
            this.AssetService_CreateAssetWithValidUserEnteredRuntimeHours("UserEnteredRuntimeHours_ValidValue", "Valid", ((string[])(null)));
        }
        
        public virtual void AssetService_CreateAssetWithValidClassification(string description, string classification, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Positive",
                    "AssetService",
                    "US83964"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_CreateAssetWithValidClassification", @__tags);
#line 463
this.ScenarioSetup(scenarioInfo);
#line 464
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_CreateAssetWithValidClassification\'" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 465
 testRunner.And("AssetServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 466
 testRunner.When(string.Format("I Set AssetServiceCreate Classification To \'{0}\'", classification), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 467
 testRunner.And("I Post Valid AssetServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 468
 testRunner.Then("The AssetCreated Details must be stored in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithValidClassification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Classification_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Classification_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "EMPTY")]
        public virtual void AssetService_CreateAssetWithValidClassification_Classification_Empty()
        {
            this.AssetService_CreateAssetWithValidClassification("Classification_Empty", "EMPTY", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithValidClassification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Classification_Null")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Classification_Null")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "NULL")]
        public virtual void AssetService_CreateAssetWithValidClassification_Classification_Null()
        {
            this.AssetService_CreateAssetWithValidClassification("Classification_Null", "NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithValidClassification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Classification_MinCharacter")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Classification_MinCharacter")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "MinValue")]
        public virtual void AssetService_CreateAssetWithValidClassification_Classification_MinCharacter()
        {
            this.AssetService_CreateAssetWithValidClassification("Classification_MinCharacter", "MinValue", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithValidClassification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Classification_MaxCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Classification_MaxCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "MaxValue")]
        public virtual void AssetService_CreateAssetWithValidClassification_Classification_MaxCharacters()
        {
            this.AssetService_CreateAssetWithValidClassification("Classification_MaxCharacters", "MaxValue", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithValidClassification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Classification_ValidValue")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Classification_ValidValue")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "Valid")]
        public virtual void AssetService_CreateAssetWithValidClassification_Classification_ValidValue()
        {
            this.AssetService_CreateAssetWithValidClassification("Classification_ValidValue", "Valid", ((string[])(null)));
        }
        
        public virtual void AssetService_UpdateObjectTypeHappyPath(string description, string objectType, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Positive",
                    "AssetService",
                    "US83964"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_UpdateObjectTypeHappyPath", @__tags);
#line 481
this.ScenarioSetup(scenarioInfo);
#line 482
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_UpdateObjectTypeHappyPath\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 483
 testRunner.And("AssetServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 484
 testRunner.When(string.Format("I Set AssetServiceUpate ObjectType To \'{0}\'", objectType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 485
 testRunner.And("I Post Valid AssetServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 486
 testRunner.Then("The AssetUpdated Details must be stored in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateObjectTypeHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ObjectType_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ObjectType_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ObjectType", "EMPTY")]
        public virtual void AssetService_UpdateObjectTypeHappyPath_ObjectType_Empty()
        {
            this.AssetService_UpdateObjectTypeHappyPath("ObjectType_Empty", "EMPTY", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateObjectTypeHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ObjectType_Null")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ObjectType_Null")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ObjectType", "NULL")]
        public virtual void AssetService_UpdateObjectTypeHappyPath_ObjectType_Null()
        {
            this.AssetService_UpdateObjectTypeHappyPath("ObjectType_Null", "NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateObjectTypeHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ObjectType_MinCharacter")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ObjectType_MinCharacter")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ObjectType", "MinValue")]
        public virtual void AssetService_UpdateObjectTypeHappyPath_ObjectType_MinCharacter()
        {
            this.AssetService_UpdateObjectTypeHappyPath("ObjectType_MinCharacter", "MinValue", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateObjectTypeHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ObjectType_MaxCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ObjectType_MaxCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ObjectType", "MaxValue")]
        public virtual void AssetService_UpdateObjectTypeHappyPath_ObjectType_MaxCharacters()
        {
            this.AssetService_UpdateObjectTypeHappyPath("ObjectType_MaxCharacters", "MaxValue", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateObjectTypeHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ObjectType_ValidValue")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ObjectType_ValidValue")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ObjectType", "Valid")]
        public virtual void AssetService_UpdateObjectTypeHappyPath_ObjectType_ValidValue()
        {
            this.AssetService_UpdateObjectTypeHappyPath("ObjectType_ValidValue", "Valid", ((string[])(null)));
        }
        
        public virtual void AssetService_UpdateCategoryHappyPath(string description, string category, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Positive",
                    "AssetService",
                    "US83964"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_UpdateCategoryHappyPath", @__tags);
#line 499
this.ScenarioSetup(scenarioInfo);
#line 500
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_UpdateCategoryHappyPath\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 501
 testRunner.And("AssetServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 502
 testRunner.When(string.Format("I Set AssetServiceUpate Category To \'{0}\'", category), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 503
 testRunner.And("I Post Valid AssetServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 504
 testRunner.Then("The AssetUpdated Details must be stored in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateCategoryHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Category_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Category_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Category", "EMPTY")]
        public virtual void AssetService_UpdateCategoryHappyPath_Category_Empty()
        {
            this.AssetService_UpdateCategoryHappyPath("Category_Empty", "EMPTY", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateCategoryHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Category_Null")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Category_Null")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Category", "NULL")]
        public virtual void AssetService_UpdateCategoryHappyPath_Category_Null()
        {
            this.AssetService_UpdateCategoryHappyPath("Category_Null", "NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateCategoryHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Category_MinCharacter")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Category_MinCharacter")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Category", "MinValue")]
        public virtual void AssetService_UpdateCategoryHappyPath_Category_MinCharacter()
        {
            this.AssetService_UpdateCategoryHappyPath("Category_MinCharacter", "MinValue", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateCategoryHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Category_MaxCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Category_MaxCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Category", "MaxValue")]
        public virtual void AssetService_UpdateCategoryHappyPath_Category_MaxCharacters()
        {
            this.AssetService_UpdateCategoryHappyPath("Category_MaxCharacters", "MaxValue", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateCategoryHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Category_ValidValue")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Category_ValidValue")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Category", "Valid")]
        public virtual void AssetService_UpdateCategoryHappyPath_Category_ValidValue()
        {
            this.AssetService_UpdateCategoryHappyPath("Category_ValidValue", "Valid", ((string[])(null)));
        }
        
        public virtual void AssetService_UpdateProjectHappyPath(string description, string project, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Positive",
                    "AssetService",
                    "US83964"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_UpdateProjectHappyPath", @__tags);
#line 517
this.ScenarioSetup(scenarioInfo);
#line 518
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_UpdateProjectHappyPath\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 519
 testRunner.And("AssetServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 520
 testRunner.When(string.Format("I Set AssetServiceUpate Project To \'{0}\'", project), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 521
 testRunner.And("I Post Valid AssetServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 522
 testRunner.Then("The AssetUpdated Details must be stored in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateProjectHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Project_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Project_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Project", "EMPTY")]
        public virtual void AssetService_UpdateProjectHappyPath_Project_Empty()
        {
            this.AssetService_UpdateProjectHappyPath("Project_Empty", "EMPTY", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateProjectHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Project_Null")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Project_Null")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Project", "NULL")]
        public virtual void AssetService_UpdateProjectHappyPath_Project_Null()
        {
            this.AssetService_UpdateProjectHappyPath("Project_Null", "NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateProjectHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Project_MinCharacter")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Project_MinCharacter")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Project", "MinValue")]
        public virtual void AssetService_UpdateProjectHappyPath_Project_MinCharacter()
        {
            this.AssetService_UpdateProjectHappyPath("Project_MinCharacter", "MinValue", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateProjectHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Project_MaxCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Project_MaxCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Project", "MaxValue")]
        public virtual void AssetService_UpdateProjectHappyPath_Project_MaxCharacters()
        {
            this.AssetService_UpdateProjectHappyPath("Project_MaxCharacters", "MaxValue", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateProjectHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Project_ValidValue")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Project_ValidValue")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Project", "Valid")]
        public virtual void AssetService_UpdateProjectHappyPath_Project_ValidValue()
        {
            this.AssetService_UpdateProjectHappyPath("Project_ValidValue", "Valid", ((string[])(null)));
        }
        
        public virtual void AssetService_UpdateProjectStatusHappyPath(string description, string projectStatus, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Positive",
                    "AssetService",
                    "US83964"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_UpdateProjectStatusHappyPath", @__tags);
#line 535
this.ScenarioSetup(scenarioInfo);
#line 536
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_UpdateProjectStatusHappyPath\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 537
 testRunner.And("AssetServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 538
 testRunner.When(string.Format("I Set AssetServiceUpate ProjectStatus To \'{0}\'", projectStatus), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 539
 testRunner.And("I Post Valid AssetServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 540
 testRunner.Then("The AssetUpdated Details must be stored in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateProjectStatusHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ProjectStatus_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ProjectStatus_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProjectStatus", "EMPTY")]
        public virtual void AssetService_UpdateProjectStatusHappyPath_ProjectStatus_Empty()
        {
            this.AssetService_UpdateProjectStatusHappyPath("ProjectStatus_Empty", "EMPTY", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateProjectStatusHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ProjectStatus_Null")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ProjectStatus_Null")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProjectStatus", "NULL")]
        public virtual void AssetService_UpdateProjectStatusHappyPath_ProjectStatus_Null()
        {
            this.AssetService_UpdateProjectStatusHappyPath("ProjectStatus_Null", "NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateProjectStatusHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ProjectStatus_MinCharacter")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ProjectStatus_MinCharacter")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProjectStatus", "MinValue")]
        public virtual void AssetService_UpdateProjectStatusHappyPath_ProjectStatus_MinCharacter()
        {
            this.AssetService_UpdateProjectStatusHappyPath("ProjectStatus_MinCharacter", "MinValue", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateProjectStatusHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ProjectStatus_MaxCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ProjectStatus_MaxCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProjectStatus", "MaxValue")]
        public virtual void AssetService_UpdateProjectStatusHappyPath_ProjectStatus_MaxCharacters()
        {
            this.AssetService_UpdateProjectStatusHappyPath("ProjectStatus_MaxCharacters", "MaxValue", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateProjectStatusHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ProjectStatus_ValidValue")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ProjectStatus_ValidValue")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProjectStatus", "Valid")]
        public virtual void AssetService_UpdateProjectStatusHappyPath_ProjectStatus_ValidValue()
        {
            this.AssetService_UpdateProjectStatusHappyPath("ProjectStatus_ValidValue", "Valid", ((string[])(null)));
        }
        
        public virtual void AssetService_UpdateSortFieldHappyPath(string description, string sortField, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Positive",
                    "AssetService",
                    "US83964"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_UpdateSortFieldHappyPath", @__tags);
#line 553
this.ScenarioSetup(scenarioInfo);
#line 554
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_UpdateSortFieldHappyPath\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 555
 testRunner.And("AssetServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 556
 testRunner.When(string.Format("I Set AssetServiceUpate SortField To \'{0}\'", sortField), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 557
 testRunner.And("I Post Valid AssetServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 558
 testRunner.Then("The AssetUpdated Details must be stored in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateSortFieldHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SortField_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SortField_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SortField", "EMPTY")]
        public virtual void AssetService_UpdateSortFieldHappyPath_SortField_Empty()
        {
            this.AssetService_UpdateSortFieldHappyPath("SortField_Empty", "EMPTY", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateSortFieldHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SortField_Null")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SortField_Null")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SortField", "NULL")]
        public virtual void AssetService_UpdateSortFieldHappyPath_SortField_Null()
        {
            this.AssetService_UpdateSortFieldHappyPath("SortField_Null", "NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateSortFieldHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SortField_MinCharacter")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SortField_MinCharacter")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SortField", "MinValue")]
        public virtual void AssetService_UpdateSortFieldHappyPath_SortField_MinCharacter()
        {
            this.AssetService_UpdateSortFieldHappyPath("SortField_MinCharacter", "MinValue", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateSortFieldHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SortField_MaxCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SortField_MaxCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SortField", "MaxValue")]
        public virtual void AssetService_UpdateSortFieldHappyPath_SortField_MaxCharacters()
        {
            this.AssetService_UpdateSortFieldHappyPath("SortField_MaxCharacters", "MaxValue", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateSortFieldHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SortField_ValidValue")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SortField_ValidValue")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SortField", "Valid")]
        public virtual void AssetService_UpdateSortFieldHappyPath_SortField_ValidValue()
        {
            this.AssetService_UpdateSortFieldHappyPath("SortField_ValidValue", "Valid", ((string[])(null)));
        }
        
        public virtual void AssetService_UpdateSourceHappyPath(string description, string source, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Positive",
                    "AssetService",
                    "US83964"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_UpdateSourceHappyPath", @__tags);
#line 571
this.ScenarioSetup(scenarioInfo);
#line 572
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_UpdateSourceHappyPath\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 573
 testRunner.And("AssetServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 574
 testRunner.When(string.Format("I Set AssetServiceUpate Source To \'{0}\'", source), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 575
 testRunner.And("I Post Valid AssetServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 576
 testRunner.Then("The AssetUpdated Details must be stored in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateSourceHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Source_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Source_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Source", "EMPTY")]
        public virtual void AssetService_UpdateSourceHappyPath_Source_Empty()
        {
            this.AssetService_UpdateSourceHappyPath("Source_Empty", "EMPTY", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateSourceHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Source_Null")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Source_Null")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Source", "NULL")]
        public virtual void AssetService_UpdateSourceHappyPath_Source_Null()
        {
            this.AssetService_UpdateSourceHappyPath("Source_Null", "NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateSourceHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Source_MinCharacter")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Source_MinCharacter")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Source", "MinValue")]
        public virtual void AssetService_UpdateSourceHappyPath_Source_MinCharacter()
        {
            this.AssetService_UpdateSourceHappyPath("Source_MinCharacter", "MinValue", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateSourceHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Source_MaxCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Source_MaxCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Source", "MaxValue")]
        public virtual void AssetService_UpdateSourceHappyPath_Source_MaxCharacters()
        {
            this.AssetService_UpdateSourceHappyPath("Source_MaxCharacters", "MaxValue", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateSourceHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Source_ValidValue")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Source_ValidValue")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Source", "Valid")]
        public virtual void AssetService_UpdateSourceHappyPath_Source_ValidValue()
        {
            this.AssetService_UpdateSourceHappyPath("Source_ValidValue", "Valid", ((string[])(null)));
        }
        
        public virtual void AssetService_UpdateUserEnteredRuntimeHoursHappyPath(string description, string userEnteredRuntimeHours, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Positive",
                    "AssetService",
                    "US83964"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_UpdateUserEnteredRuntimeHoursHappyPath", @__tags);
#line 589
this.ScenarioSetup(scenarioInfo);
#line 590
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_UpdateUserEnteredRuntimeHoursHappyP" +
                    "ath\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 591
 testRunner.And("AssetServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 592
 testRunner.When(string.Format("I Set AssetServiceUpate UserEnteredRuntimeHours To \'{0}\'", userEnteredRuntimeHours), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 593
 testRunner.And("I Post Valid AssetServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 594
 testRunner.Then("The AssetUpdated Details must be stored in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateUserEnteredRuntimeHoursHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "UserEnteredRuntimeHours_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "UserEnteredRuntimeHours_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserEnteredRuntimeHours", "EMPTY")]
        public virtual void AssetService_UpdateUserEnteredRuntimeHoursHappyPath_UserEnteredRuntimeHours_Empty()
        {
            this.AssetService_UpdateUserEnteredRuntimeHoursHappyPath("UserEnteredRuntimeHours_Empty", "EMPTY", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateUserEnteredRuntimeHoursHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "UserEnteredRuntimeHours_Null")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "UserEnteredRuntimeHours_Null")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserEnteredRuntimeHours", "NULL")]
        public virtual void AssetService_UpdateUserEnteredRuntimeHoursHappyPath_UserEnteredRuntimeHours_Null()
        {
            this.AssetService_UpdateUserEnteredRuntimeHoursHappyPath("UserEnteredRuntimeHours_Null", "NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateUserEnteredRuntimeHoursHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "UserEnteredRuntimeHours_MinCharacter")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "UserEnteredRuntimeHours_MinCharacter")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserEnteredRuntimeHours", "MinValue")]
        public virtual void AssetService_UpdateUserEnteredRuntimeHoursHappyPath_UserEnteredRuntimeHours_MinCharacter()
        {
            this.AssetService_UpdateUserEnteredRuntimeHoursHappyPath("UserEnteredRuntimeHours_MinCharacter", "MinValue", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateUserEnteredRuntimeHoursHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "UserEnteredRuntimeHours_MaxCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "UserEnteredRuntimeHours_MaxCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserEnteredRuntimeHours", "MaxValue")]
        public virtual void AssetService_UpdateUserEnteredRuntimeHoursHappyPath_UserEnteredRuntimeHours_MaxCharacters()
        {
            this.AssetService_UpdateUserEnteredRuntimeHoursHappyPath("UserEnteredRuntimeHours_MaxCharacters", "MaxValue", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateUserEnteredRuntimeHoursHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "UserEnteredRuntimeHours_ValidValue")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "UserEnteredRuntimeHours_ValidValue")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserEnteredRuntimeHours", "Valid")]
        public virtual void AssetService_UpdateUserEnteredRuntimeHoursHappyPath_UserEnteredRuntimeHours_ValidValue()
        {
            this.AssetService_UpdateUserEnteredRuntimeHoursHappyPath("UserEnteredRuntimeHours_ValidValue", "Valid", ((string[])(null)));
        }
        
        public virtual void AssetService_UpdateClassificationHappyPath(string description, string classification, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Positive",
                    "AssetService",
                    "US83964"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_UpdateClassificationHappyPath", @__tags);
#line 607
this.ScenarioSetup(scenarioInfo);
#line 608
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_UpdateClassificationHappyPath\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 609
 testRunner.And("AssetServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 610
 testRunner.When(string.Format("I Set AssetServiceUpate Classification To \'{0}\'", classification), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 611
 testRunner.And("I Post Valid AssetServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 612
 testRunner.Then("The AssetUpdated Details must be stored in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateClassificationHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Classification_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Classification_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "EMPTY")]
        public virtual void AssetService_UpdateClassificationHappyPath_Classification_Empty()
        {
            this.AssetService_UpdateClassificationHappyPath("Classification_Empty", "EMPTY", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateClassificationHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Classification_Null")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Classification_Null")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "NULL")]
        public virtual void AssetService_UpdateClassificationHappyPath_Classification_Null()
        {
            this.AssetService_UpdateClassificationHappyPath("Classification_Null", "NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateClassificationHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Classification_MinCharacter")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Classification_MinCharacter")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "MinValue")]
        public virtual void AssetService_UpdateClassificationHappyPath_Classification_MinCharacter()
        {
            this.AssetService_UpdateClassificationHappyPath("Classification_MinCharacter", "MinValue", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateClassificationHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Classification_MaxCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Classification_MaxCharacters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "MaxValue")]
        public virtual void AssetService_UpdateClassificationHappyPath_Classification_MaxCharacters()
        {
            this.AssetService_UpdateClassificationHappyPath("Classification_MaxCharacters", "MaxValue", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateClassificationHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Classification_ValidValue")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Classification_ValidValue")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Classification", "Valid")]
        public virtual void AssetService_UpdateClassificationHappyPath_Classification_ValidValue()
        {
            this.AssetService_UpdateClassificationHappyPath("Classification_ValidValue", "Valid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateAssetWithInValidMakeCode")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US83964")]
        public virtual void AssetService_CreateAssetWithInValidMakeCode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_CreateAssetWithInValidMakeCode", new string[] {
                        "Automated",
                        "Regression",
                        "Negative",
                        "AssetService",
                        "US83964"});
#line 625
this.ScenarioSetup(scenarioInfo);
#line 626
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_CreateAssetWithValidMakeCode\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 627
 testRunner.And("AssetServiceCreate Request Is Setup With Default Values and Invalid MakeCode", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 628
 testRunner.When("I Post Valid AssetServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 629
 testRunner.Then("AssetService Response With \'ERR_InvalidMakeCode\' Should Be Returned", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateInvalid_DuplicateAssetUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        public virtual void AssetService_CreateInvalid_DuplicateAssetUID()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_CreateInvalid_DuplicateAssetUID", new string[] {
                        "Automated",
                        "Regression",
                        "Negative",
                        "AssetService",
                        "US7349"});
#line 633
this.ScenarioSetup(scenarioInfo);
#line 634
 testRunner.Given("AssetService Is Ready To Verify \'<Description>\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 635
 testRunner.And("AssetServiceCreate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 636
 testRunner.When("I Set Invalid AssetServiceCreate AssetUID To Duplicate AssetUID", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 637
 testRunner.And("I Post Invalid AssetServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 638
 testRunner.Then("AssetService Response With \'ERR_Duplicate\' Should Be Returned", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateInvalid_NonExistingAsset")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        public virtual void AssetService_UpdateInvalid_NonExistingAsset()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_UpdateInvalid_NonExistingAsset", new string[] {
                        "Automated",
                        "Regression",
                        "Negative",
                        "AssetService",
                        "US7349"});
#line 642
this.ScenarioSetup(scenarioInfo);
#line 643
 testRunner.Given("AssetService Is Ready To Verify \'<Description>\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 644
 testRunner.And("AssetServiceUpdate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 645
 testRunner.When("I Post Invalid AssetServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 646
 testRunner.Then("AssetService Response With \'ERR_NonExistingAsset\' Should Be Returned", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_DeleteInvalid_NonExistingAsset")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        public virtual void AssetService_DeleteInvalid_NonExistingAsset()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_DeleteInvalid_NonExistingAsset", new string[] {
                        "Automated",
                        "Regression",
                        "Negative",
                        "AssetService",
                        "US7349"});
#line 650
this.ScenarioSetup(scenarioInfo);
#line 651
 testRunner.Given("AssetService Is Ready To Verify \'<Description>\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 652
 testRunner.And("AssetServiceDelete Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 653
 testRunner.When("I Post Invalid AssetServiceDelete Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 654
 testRunner.Then("AssetService Response With \'ERR_NonExistingAsset\' Should Be Returned", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void AssetService_CreateInvalidAssetUID(string description, string assetUID, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "AssetService",
                    "US7349"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_CreateInvalidAssetUID", @__tags);
#line 658
this.ScenarioSetup(scenarioInfo);
#line 659
 testRunner.Given(string.Format("AssetService Is Ready To Verify \'{0}\'", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 660
 testRunner.And("AssetServiceCreate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 661
 testRunner.When(string.Format("I Set Invalid AssetServiceCreate AssetUID To \'{0}\'", assetUID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 662
 testRunner.And("I Post Invalid AssetServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 663
 testRunner.Then(string.Format("AssetService Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateInvalidAssetUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidLength")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidLength")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetUID", "c9ead99b-eea3-4605-92e2-1e6497b773")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_AssetUIDInvalid")]
        public virtual void AssetService_CreateInvalidAssetUID_InvalidLength()
        {
            this.AssetService_CreateInvalidAssetUID("InvalidLength", "c9ead99b-eea3-4605-92e2-1e6497b773", "ERR_AssetUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateInvalidAssetUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetUID", "c9ead99b-eea3 4605-92e2-1e6497b77369")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_AssetUIDInvalid")]
        public virtual void AssetService_CreateInvalidAssetUID_ContainsSpace()
        {
            this.AssetService_CreateInvalidAssetUID("ContainsSpace", "c9ead99b-eea3 4605-92e2-1e6497b77369", "ERR_AssetUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateInvalidAssetUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsUnderScore")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsUnderScore")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetUID", "9AB056CA_3514_E411_8AFE_24FD5231FB1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_AssetUIDInvalid")]
        public virtual void AssetService_CreateInvalidAssetUID_ContainsUnderScore()
        {
            this.AssetService_CreateInvalidAssetUID("ContainsUnderScore", "9AB056CA_3514_E411_8AFE_24FD5231FB1F", "ERR_AssetUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateInvalidAssetUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NotInGUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NotInGUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetUID", "9AB056CA3-514-E411-8AFE-24FD5231FB1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_AssetUIDInvalid")]
        public virtual void AssetService_CreateInvalidAssetUID_NotInGUID()
        {
            this.AssetService_CreateInvalidAssetUID("NotInGUID", "9AB056CA3-514-E411-8AFE-24FD5231FB1F", "ERR_AssetUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateInvalidAssetUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SplChar")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SplChar")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetUID", "9AB056CA3-514-E411-8AFE-24FD5231*B1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_AssetUIDInvalid")]
        public virtual void AssetService_CreateInvalidAssetUID_SplChar()
        {
            this.AssetService_CreateInvalidAssetUID("SplChar", "9AB056CA3-514-E411-8AFE-24FD5231*B1F", "ERR_AssetUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateInvalidAssetUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetUID", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_AssetUIDInvalid")]
        public virtual void AssetService_CreateInvalidAssetUID_NULL()
        {
            this.AssetService_CreateInvalidAssetUID("NULL", "NULL_NULL", "ERR_AssetUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateInvalidSerialNumber_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        public virtual void AssetService_CreateInvalidSerialNumber_NULL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_CreateInvalidSerialNumber_NULL", new string[] {
                        "Automated",
                        "Regression",
                        "Negative",
                        "AssetService",
                        "US7349"});
#line 676
this.ScenarioSetup(scenarioInfo);
#line 677
 testRunner.Given("AssetService Is Ready To Verify \'<Description>\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 678
 testRunner.And("AssetServiceCreate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 679
 testRunner.When("I Set Invalid AssetServiceCreate SerialNumber To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 680
 testRunner.And("I Post Invalid AssetServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 681
 testRunner.Then("AssetService Response With \'ERR_SerialNumberInvalid\' Should Be Returned", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateInvalidMakeCode_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        public virtual void AssetService_CreateInvalidMakeCode_NULL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_CreateInvalidMakeCode_NULL", new string[] {
                        "Automated",
                        "Regression",
                        "Negative",
                        "AssetService",
                        "US7349"});
#line 685
this.ScenarioSetup(scenarioInfo);
#line 686
 testRunner.Given("AssetService Is Ready To Verify \'<Description>\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 687
 testRunner.And("AssetServiceCreate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 688
 testRunner.When("I Set Invalid AssetServiceCreate MakeCode To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 689
 testRunner.And("I Post Invalid AssetServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 690
 testRunner.Then("AssetService Response With \'ERR_MakeCodeInvalid\' Should Be Returned", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void AssetService_CreateInvalidIconKey(string description, string iconKey, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "AssetService",
                    "US7349"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_CreateInvalidIconKey", @__tags);
#line 694
this.ScenarioSetup(scenarioInfo);
#line 695
 testRunner.Given(string.Format("AssetService Is Ready To Verify \'{0}\'", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 696
 testRunner.And("AssetServiceCreate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 697
 testRunner.When(string.Format("I Set Invalid AssetServiceCreate IconKey To \'{0}\'", iconKey), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 698
 testRunner.And("I Post Invalid AssetServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 699
 testRunner.Then(string.Format("AssetService Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateInvalidIconKey")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "String")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "String")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IconKey", "abc")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_IconKeyInvalid")]
        public virtual void AssetService_CreateInvalidIconKey_String()
        {
            this.AssetService_CreateInvalidIconKey("String", "abc", "ERR_IconKeyInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateInvalidIconKey")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IconKey", "1 2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_IconKeyInvalid")]
        public virtual void AssetService_CreateInvalidIconKey_ContainsSpace()
        {
            this.AssetService_CreateInvalidIconKey("ContainsSpace", "1 2", "ERR_IconKeyInvalid", ((string[])(null)));
        }
        
        public virtual void AssetService_CreateInvalidModelYear(string description, string modelYear, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "AssetService",
                    "US7349"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_CreateInvalidModelYear", @__tags);
#line 708
this.ScenarioSetup(scenarioInfo);
#line 709
 testRunner.Given(string.Format("AssetService Is Ready To Verify \'{0}\'", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 710
 testRunner.And("AssetServiceCreate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 711
 testRunner.When(string.Format("I Set Invalid AssetServiceCreate ModelYear To \'{0}\'", modelYear), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 712
 testRunner.And("I Post Invalid AssetServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 713
 testRunner.Then(string.Format("AssetService Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateInvalidModelYear")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "String")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "String")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ModelYear", "abc")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ModelYearInvalid")]
        public virtual void AssetService_CreateInvalidModelYear_String()
        {
            this.AssetService_CreateInvalidModelYear("String", "abc", "ERR_ModelYearInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateInvalidModelYear")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ModelYear", "1 2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ModelYearInvalid")]
        public virtual void AssetService_CreateInvalidModelYear_ContainsSpace()
        {
            this.AssetService_CreateInvalidModelYear("ContainsSpace", "1 2", "ERR_ModelYearInvalid", ((string[])(null)));
        }
        
        public virtual void AssetService_CreateInvalidActionUTC(string description, string actionUTC, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "AssetService",
                    "US7349"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_CreateInvalidActionUTC", @__tags);
#line 722
this.ScenarioSetup(scenarioInfo);
#line 723
 testRunner.Given(string.Format("AssetService Is Ready To Verify \'{0}\'", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 724
 testRunner.And("AssetServiceCreate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 725
 testRunner.When(string.Format("I Set Invalid AssetServiceCreate ActionUTC To \'{0}\'", actionUTC), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 726
 testRunner.And("I Post Invalid AssetServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 727
 testRunner.Then(string.Format("AssetService Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "String")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "String")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "abc")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void AssetService_CreateInvalidActionUTC_String()
        {
            this.AssetService_CreateInvalidActionUTC("String", "abc", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "1 2 3 4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void AssetService_CreateInvalidActionUTC_ContainsSpace()
        {
            this.AssetService_CreateInvalidActionUTC("ContainsSpace", "1 2 3 4", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NotInDateTime")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NotInDateTime")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015-2-13-14-22:02")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void AssetService_CreateInvalidActionUTC_NotInDateTime()
        {
            this.AssetService_CreateInvalidActionUTC("NotInDateTime", "2015-2-13-14-22:02", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateInvalidOptionalFields_Blank")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        public virtual void AssetService_UpdateInvalidOptionalFields_Blank()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_UpdateInvalidOptionalFields_Blank", new string[] {
                        "Automated",
                        "Regression",
                        "Negative",
                        "AssetService",
                        "US7349"});
#line 737
this.ScenarioSetup(scenarioInfo);
#line 738
 testRunner.Given("AssetService Is Ready To Verify \'AssetService_UpdateValidOptionalFields_Blank\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 739
 testRunner.And("AssetServiceUpdate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "AssetName",
                        "AssetType",
                        "Model",
                        "ModelYear",
                        "EquipmentVIN",
                        "IconKey"});
            table9.AddRow(new string[] {
                        "NULL_NULL",
                        "NULL_NULL",
                        "NULL_NULL",
                        "NULL_NULL",
                        "NULL_NULL",
                        "NULL_NULL"});
#line 740
 testRunner.When("I Post Invalid AssetServiceUpdate Request With The Below Values", ((string)(null)), table9, "When ");
#line 743
 testRunner.Then("AssetService Response With \'ERR_AssetUpdateInvalid\' Should Be Returned", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void AssetService_UpdateInvalidAssetUID(string description, string assetUID, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "AssetService",
                    "US7349"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_UpdateInvalidAssetUID", @__tags);
#line 747
this.ScenarioSetup(scenarioInfo);
#line 748
 testRunner.Given(string.Format("AssetService Is Ready To Verify \'{0}\'", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 749
 testRunner.And("AssetServiceUpdate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 750
 testRunner.When(string.Format("I Set Invalid AssetServiceUpdate AssetUID To \'{0}\'", assetUID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 751
 testRunner.And("I Post Invalid AssetServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 752
 testRunner.Then(string.Format("AssetService Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateInvalidAssetUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidLength")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidLength")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetUID", "c9ead99b-eea3-4605-92e2-1e6497b773")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_AssetUIDInvalid")]
        public virtual void AssetService_UpdateInvalidAssetUID_InvalidLength()
        {
            this.AssetService_UpdateInvalidAssetUID("InvalidLength", "c9ead99b-eea3-4605-92e2-1e6497b773", "ERR_AssetUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateInvalidAssetUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetUID", "c9ead99b-eea3 4605-92e2-1e6497b77369")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_AssetUIDInvalid")]
        public virtual void AssetService_UpdateInvalidAssetUID_ContainsSpace()
        {
            this.AssetService_UpdateInvalidAssetUID("ContainsSpace", "c9ead99b-eea3 4605-92e2-1e6497b77369", "ERR_AssetUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateInvalidAssetUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsUnderScore")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsUnderScore")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetUID", "9AB056CA_3514_E411_8AFE_24FD5231FB1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_AssetUIDInvalid")]
        public virtual void AssetService_UpdateInvalidAssetUID_ContainsUnderScore()
        {
            this.AssetService_UpdateInvalidAssetUID("ContainsUnderScore", "9AB056CA_3514_E411_8AFE_24FD5231FB1F", "ERR_AssetUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateInvalidAssetUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NotInGUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NotInGUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetUID", "9AB056CA3-514-E411-8AFE-24FD5231FB1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_AssetUIDInvalid")]
        public virtual void AssetService_UpdateInvalidAssetUID_NotInGUID()
        {
            this.AssetService_UpdateInvalidAssetUID("NotInGUID", "9AB056CA3-514-E411-8AFE-24FD5231FB1F", "ERR_AssetUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateInvalidAssetUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SplChar")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SplChar")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetUID", "9AB056CA3-514-E411-8AFE-24FD5231*B1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_AssetUIDInvalid")]
        public virtual void AssetService_UpdateInvalidAssetUID_SplChar()
        {
            this.AssetService_UpdateInvalidAssetUID("SplChar", "9AB056CA3-514-E411-8AFE-24FD5231*B1F", "ERR_AssetUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateInvalidAssetUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetUID", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_AssetUIDInvalid")]
        public virtual void AssetService_UpdateInvalidAssetUID_NULL()
        {
            this.AssetService_UpdateInvalidAssetUID("NULL", "NULL_NULL", "ERR_AssetUIDInvalid", ((string[])(null)));
        }
        
        public virtual void AssetService_UpdateInvalidModelYear(string description, string modelYear, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "AssetService",
                    "US7349"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_UpdateInvalidModelYear", @__tags);
#line 765
this.ScenarioSetup(scenarioInfo);
#line 766
 testRunner.Given(string.Format("AssetService Is Ready To Verify \'{0}\'", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 767
 testRunner.And("AssetServiceUpdate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 768
 testRunner.When(string.Format("I Set Invalid AssetServiceUpdate ModelYear To \'{0}\'", modelYear), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 769
 testRunner.And("I Post Invalid AssetServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 770
 testRunner.Then(string.Format("AssetService Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateInvalidModelYear")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "String")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "String")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ModelYear", "abc")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ModelYearInvalid")]
        public virtual void AssetService_UpdateInvalidModelYear_String()
        {
            this.AssetService_UpdateInvalidModelYear("String", "abc", "ERR_ModelYearInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateInvalidModelYear")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ModelYear", "1 2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ModelYearInvalid")]
        public virtual void AssetService_UpdateInvalidModelYear_ContainsSpace()
        {
            this.AssetService_UpdateInvalidModelYear("ContainsSpace", "1 2", "ERR_ModelYearInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateInvalidModelYear")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SplChar")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SplChar")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ModelYear", "&^9AB056CA.,-3514-E411-8AF_24FD5231FB1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ModelYearInvalid")]
        public virtual void AssetService_UpdateInvalidModelYear_SplChar()
        {
            this.AssetService_UpdateInvalidModelYear("SplChar", "&^9AB056CA.,-3514-E411-8AF_24FD5231FB1F", "ERR_ModelYearInvalid", ((string[])(null)));
        }
        
        public virtual void AssetService_UpdateInvalidIconKey(string description, string iconKey, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "AssetService",
                    "US7349"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_UpdateInvalidIconKey", @__tags);
#line 780
this.ScenarioSetup(scenarioInfo);
#line 781
 testRunner.Given(string.Format("AssetService Is Ready To Verify \'{0}\'", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 782
 testRunner.And("AssetServiceUpdate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 783
 testRunner.When(string.Format("I Set Invalid AssetServiceUpdate IconKey To \'{0}\'", iconKey), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 784
 testRunner.And("I Post Invalid AssetServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 785
 testRunner.Then(string.Format("AssetService Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateInvalidIconKey")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "String")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "String")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IconKey", "abc")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_IconKeyInvalid")]
        public virtual void AssetService_UpdateInvalidIconKey_String()
        {
            this.AssetService_UpdateInvalidIconKey("String", "abc", "ERR_IconKeyInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateInvalidIconKey")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IconKey", "1 2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_IconKeyInvalid")]
        public virtual void AssetService_UpdateInvalidIconKey_ContainsSpace()
        {
            this.AssetService_UpdateInvalidIconKey("ContainsSpace", "1 2", "ERR_IconKeyInvalid", ((string[])(null)));
        }
        
        public virtual void AssetService_UpdateInvalidActionUTC(string description, string actionUTC, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "AssetService",
                    "US7349"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_UpdateInvalidActionUTC", @__tags);
#line 794
this.ScenarioSetup(scenarioInfo);
#line 795
 testRunner.Given(string.Format("AssetService Is Ready To Verify \'{0}\'", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 796
 testRunner.And("AssetServiceUpdate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 797
 testRunner.When(string.Format("I Set Invalid AssetServiceUpdate ActionUTC To \'{0}\'", actionUTC), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 798
 testRunner.And("I Post Invalid AssetServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 799
 testRunner.Then(string.Format("AssetService Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "String")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "String")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "abc")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void AssetService_UpdateInvalidActionUTC_String()
        {
            this.AssetService_UpdateInvalidActionUTC("String", "abc", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "1 2 3 4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void AssetService_UpdateInvalidActionUTC_ContainsSpace()
        {
            this.AssetService_UpdateInvalidActionUTC("ContainsSpace", "1 2 3 4", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NotInDateTime")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NotInDateTime")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015-2-13-14-22:02")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void AssetService_UpdateInvalidActionUTC_NotInDateTime()
        {
            this.AssetService_UpdateInvalidActionUTC("NotInDateTime", "2015-2-13-14-22:02", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        public virtual void AssetService_DeleteInvalidAssetUID(string description, string assetUID, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "AssetService",
                    "US7349"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_DeleteInvalidAssetUID", @__tags);
#line 809
this.ScenarioSetup(scenarioInfo);
#line 810
 testRunner.Given(string.Format("AssetService Is Ready To Verify \'{0}\'", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 811
 testRunner.And("AssetServiceDelete Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 812
 testRunner.When(string.Format("I Set Invalid AssetServiceDelete AssetUID To \'{0}\'", assetUID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 813
 testRunner.And("I Post Invalid AssetServiceDelete Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 814
 testRunner.Then(string.Format("AssetService Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_DeleteInvalidAssetUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidLength")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidLength")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetUID", "c9ead99b-eea3-4605-92e2-1e6497b773")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_AssetUIDInvalid")]
        public virtual void AssetService_DeleteInvalidAssetUID_InvalidLength()
        {
            this.AssetService_DeleteInvalidAssetUID("InvalidLength", "c9ead99b-eea3-4605-92e2-1e6497b773", "ERR_AssetUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_DeleteInvalidAssetUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetUID", "c9ead99b-eea3 4605-92e2-1e6497b77369")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_AssetUIDInvalid")]
        public virtual void AssetService_DeleteInvalidAssetUID_ContainsSpace()
        {
            this.AssetService_DeleteInvalidAssetUID("ContainsSpace", "c9ead99b-eea3 4605-92e2-1e6497b77369", "ERR_AssetUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_DeleteInvalidAssetUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsUnderScore")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsUnderScore")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetUID", "9AB056CA_3514_E411_8AFE_24FD5231FB1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_AssetUIDInvalid")]
        public virtual void AssetService_DeleteInvalidAssetUID_ContainsUnderScore()
        {
            this.AssetService_DeleteInvalidAssetUID("ContainsUnderScore", "9AB056CA_3514_E411_8AFE_24FD5231FB1F", "ERR_AssetUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_DeleteInvalidAssetUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NotInGUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NotInGUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetUID", "9AB056CA3-514-E411-8AFE-24FD5231FB1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_AssetUIDInvalid")]
        public virtual void AssetService_DeleteInvalidAssetUID_NotInGUID()
        {
            this.AssetService_DeleteInvalidAssetUID("NotInGUID", "9AB056CA3-514-E411-8AFE-24FD5231FB1F", "ERR_AssetUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_DeleteInvalidAssetUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetUID", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_AssetUIDInvalid")]
        public virtual void AssetService_DeleteInvalidAssetUID_NULL()
        {
            this.AssetService_DeleteInvalidAssetUID("NULL", "NULL_NULL", "ERR_AssetUIDInvalid", ((string[])(null)));
        }
        
        public virtual void AssetService_DeleteInvalidActionUTC(string description, string actionUTC, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "AssetService",
                    "US7349"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_DeleteInvalidActionUTC", @__tags);
#line 826
this.ScenarioSetup(scenarioInfo);
#line 827
 testRunner.Given(string.Format("AssetService Is Ready To Verify \'{0}\'", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 828
 testRunner.And("AssetServiceDelete Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 829
 testRunner.When(string.Format("I Set Invalid AssetServiceDelete ActionUTC To \'{0}\'", actionUTC), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 830
 testRunner.And("I Post Invalid AssetServiceDelete Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 831
 testRunner.Then(string.Format("AssetService Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_DeleteInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "String")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "String")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "abc")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTC")]
        public virtual void AssetService_DeleteInvalidActionUTC_String()
        {
            this.AssetService_DeleteInvalidActionUTC("String", "abc", "ERR_ActionUTC", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_DeleteInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015 13 15")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTC")]
        public virtual void AssetService_DeleteInvalidActionUTC_ContainsSpace()
        {
            this.AssetService_DeleteInvalidActionUTC("ContainsSpace", "2015 13 15", "ERR_ActionUTC", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_DeleteInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NotInDateTime")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NotInDateTime")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015-2-13-14-22:02")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTC")]
        public virtual void AssetService_DeleteInvalidActionUTC_NotInDateTime()
        {
            this.AssetService_DeleteInvalidActionUTC("NotInDateTime", "2015-2-13-14-22:02", "ERR_ActionUTC", ((string[])(null)));
        }
        
        public virtual void AssetService_CreateInvalidContentType(string description, string value, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "AssetService",
                    "US7349"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_CreateInvalidContentType", @__tags);
#line 841
this.ScenarioSetup(scenarioInfo);
#line 842
 testRunner.Given(string.Format("AssetService Is Ready To Verify \'{0}\'", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 843
 testRunner.And("AssetServiceCreate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 844
 testRunner.When(string.Format("I Post AssetServiceCreate Request With Invalid ContentType \'{0}\'", value), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 845
 testRunner.Then(string.Format("AssetService Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateInvalidContentType")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "HTML")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "HTML")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Value", "HTML")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_InvalidContentType")]
        public virtual void AssetService_CreateInvalidContentType_HTML()
        {
            this.AssetService_CreateInvalidContentType("HTML", "HTML", "ERR_InvalidContentType", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_CreateInvalidContentType")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "XML")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "XML")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Value", "XML")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_InvalidContentType")]
        public virtual void AssetService_CreateInvalidContentType_XML()
        {
            this.AssetService_CreateInvalidContentType("XML", "XML", "ERR_InvalidContentType", ((string[])(null)));
        }
        
        public virtual void AssetService_UpdateInvalidContentType(string description, string value, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "AssetService",
                    "US7349"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_UpdateInvalidContentType", @__tags);
#line 854
this.ScenarioSetup(scenarioInfo);
#line 855
 testRunner.Given(string.Format("AssetService Is Ready To Verify \'{0}\'", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 856
 testRunner.And("AssetServiceUpdate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 857
 testRunner.When(string.Format("I Post Invalid AssetServiceUpdate Request With Invalid ContentType \'{0}\'", value), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 858
 testRunner.Then(string.Format("AssetService Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateInvalidContentType")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "HTML")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "HTML")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Value", "HTML")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_InvalidContentType")]
        public virtual void AssetService_UpdateInvalidContentType_HTML()
        {
            this.AssetService_UpdateInvalidContentType("HTML", "HTML", "ERR_InvalidContentType", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_UpdateInvalidContentType")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "XML")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "XML")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Value", "XML")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_InvalidContentType")]
        public virtual void AssetService_UpdateInvalidContentType_XML()
        {
            this.AssetService_UpdateInvalidContentType("XML", "XML", "ERR_InvalidContentType", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_VerifyWebAPILogs")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Manual")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        public virtual void AssetService_VerifyWebAPILogs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_VerifyWebAPILogs", new string[] {
                        "Manual",
                        "Regression",
                        "Positive",
                        "AssetService",
                        "US7349",
                        "US21042"});
#line 867
this.ScenarioSetup(scenarioInfo);
#line 868
 testRunner.Given("AssetService Is Ready To Verify \'<Description>\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 869
 testRunner.And("AssetServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 870
 testRunner.When("I Post Valid AssetServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 871
 testRunner.Then("The WebAPI logs should contain an entry for the AssetCreated with AssetUID value", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 872
 testRunner.And("The logs must contain the Kafka driver name that is used for publishing the event" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 873
 testRunner.And("The logs must contain the Instrumentation information", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_Create_WhenKafkaIsInaccessible")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Manual")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        public virtual void AssetService_Create_WhenKafkaIsInaccessible()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_Create_WhenKafkaIsInaccessible", new string[] {
                        "Manual",
                        "Regression",
                        "Negative",
                        "AssetService",
                        "US7349",
                        "US21042"});
#line 877
this.ScenarioSetup(scenarioInfo);
#line 878
 testRunner.Given("AssetService Is Ready To Verify \'<Description>\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 879
 testRunner.And("AssetServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 880
 testRunner.And("AssetService WebAPI Config file has an Incorrect entry for Kafka server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 881
 testRunner.When("I Post Valid AssetServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 882
 testRunner.Then("The Asset Created Details should not be available in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 883
 testRunner.And("The AssetCreateEvent should not be available in kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AssetService_Create_WhenMySqlDBIsInaccessible")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Manual")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AssetService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US7349")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US21042")]
        public virtual void AssetService_Create_WhenMySqlDBIsInaccessible()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AssetService_Create_WhenMySqlDBIsInaccessible", new string[] {
                        "Manual",
                        "Regression",
                        "Negative",
                        "AssetService",
                        "US7349",
                        "US21042"});
#line 887
this.ScenarioSetup(scenarioInfo);
#line 888
 testRunner.Given("AssetService Is Ready To Verify \'<Description>\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 889
 testRunner.And("AssetServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 890
 testRunner.And("Machine Config file has an Incorrect entry for MySql server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 891
 testRunner.When("I Post Valid AssetServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 892
 testRunner.Then("The Asset Created Details should not be available in MySql DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 893
 testRunner.And("The AssetCreateEvent should not be available in kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

