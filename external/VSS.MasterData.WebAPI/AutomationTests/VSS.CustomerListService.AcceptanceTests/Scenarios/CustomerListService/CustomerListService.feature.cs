// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace VSS.CustomerListService.AcceptanceTests.Scenarios.CustomerListService
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class CustomerListServiceFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CustomerListService.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "CustomerListService", @"References:
	-https://docs.google.com/document/d/1Y_30fqzm9Okxlbm1w5GSsDopq_dvstjM7P0K6y-ktpE/edit

Dependencies:  Internal -  Kafka Topic
 					   VSS DB	- VSS-Customer
  	       Table - Customer, UserCustomer	 
User Story: 
11456 - Create windows servcie to read the user customer data from Kafka
  10229 - Implement the API end-point to get customer list for the user", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "CustomerListService")))
            {
                VSS.CustomerListService.AcceptanceTests.Scenarios.CustomerListService.CustomerListServiceFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerListConsumerService_CreateCustomerEvent_HappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerListService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sanity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerListConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US11456")]
        public virtual void CustomerListConsumerService_CreateCustomerEvent_HappyPath()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerListConsumerService_CreateCustomerEvent_HappyPath", new string[] {
                        "Automated",
                        "Sanity",
                        "Positive",
                        "CustomerListConsumerService",
                        "US11456"});
#line 14
this.ScenarioSetup(scenarioInfo);
#line 15
   testRunner.Given("CustomerListConsumerService Is Ready To Verify \'CustomerListConsumerService_Creat" +
                    "eCustomerEvent_HappyPath\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 16
      testRunner.And("CustomerListConsumerService CreateCustomerEvent Request Is Setup With Default Val" +
                    "ues", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
   testRunner.When("I Post Valid CustomerListConsumerService CreateCustomerEvent Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 18
   testRunner.Then("The CreateCustomerEvent Details Are Stored In VSS DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerListConsumerService_CreateCustomerEvent_UpdateName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerListService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerListConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US11456")]
        public virtual void CustomerListConsumerService_CreateCustomerEvent_UpdateName()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerListConsumerService_CreateCustomerEvent_UpdateName", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "CustomerListConsumerService",
                        "US11456"});
#line 22
this.ScenarioSetup(scenarioInfo);
#line 23
   testRunner.Given("CustomerListConsumerService Is Ready To Verify \'CustomerListConsumerService_Creat" +
                    "eCustomerEvent_UpdateName\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 24
      testRunner.And("CustomerListConsumerService CreateCustomerEvent Request Is Setup With Default Val" +
                    "ues", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
   testRunner.When("I Post Valid CustomerListConsumerService CreateCustomerEvent Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 26
        testRunner.And("Update The CustomerListConsumerService CreateCustomerEvent Request With Different" +
                    " Customer Name", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
        testRunner.And("I Post Valid CustomerListConsumerService CreateCustomerEvent Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
   testRunner.Then("The CreateCustomerEvent Details Are Updated In VSS DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerListConsumerService_CreateCustomerEvent_UpdateTypeId")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerListService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerListConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US11456")]
        public virtual void CustomerListConsumerService_CreateCustomerEvent_UpdateTypeId()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerListConsumerService_CreateCustomerEvent_UpdateTypeId", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "CustomerListConsumerService",
                        "US11456"});
#line 32
this.ScenarioSetup(scenarioInfo);
#line 33
   testRunner.Given("CustomerListConsumerService Is Ready To Verify \'CustomerListConsumerService_Creat" +
                    "eCustomerEvent_UpdateTypeId\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 34
      testRunner.And("CustomerListConsumerService CreateCustomerEvent Request Is Setup With Default Val" +
                    "ues", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
   testRunner.When("I Post Valid CustomerListConsumerService CreateCustomerEvent Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 36
        testRunner.And("Update The CustomerListConsumerService CreateCustomerEvent Request With Different" +
                    " Customer TypeId", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
        testRunner.And("I Post Valid CustomerListConsumerService CreateCustomerEvent Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
   testRunner.Then("The CreateCustomerEvent Details Are NOT Updated In VSS DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerListConsumerService_UpdateCustomerEvent_HappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerListService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sanity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerListConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US11456")]
        public virtual void CustomerListConsumerService_UpdateCustomerEvent_HappyPath()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerListConsumerService_UpdateCustomerEvent_HappyPath", new string[] {
                        "Automated",
                        "Sanity",
                        "Positive",
                        "CustomerListConsumerService",
                        "US11456"});
#line 42
this.ScenarioSetup(scenarioInfo);
#line 43
   testRunner.Given("CustomerListConsumerService Is Ready To Verify \'CustomerListConsumerService_Updat" +
                    "eCustomerEvent_HappyPath\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 44
        testRunner.And("CustomerListConsumerService CreateCustomerEvent Request Is Setup With Default Val" +
                    "ues", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 45
   testRunner.When("I Post Valid CustomerListConsumerService CreateCustomerEvent Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 46
        testRunner.And("CustomerListConsumerService UpdateCustomerEvent Request Is Setup With Default Val" +
                    "ues", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
        testRunner.And("I Post Valid CustomerListConsumerService UpdateCustomerEvent Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
   testRunner.Then("The UpdateCustomerEvent Details Are Updated In VSS DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerListConsumerService_DeleteCustomerEvent_HappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerListService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerListConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US11456")]
        public virtual void CustomerListConsumerService_DeleteCustomerEvent_HappyPath()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerListConsumerService_DeleteCustomerEvent_HappyPath", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "CustomerListConsumerService",
                        "US11456"});
#line 52
this.ScenarioSetup(scenarioInfo);
#line 53
   testRunner.Given("CustomerListConsumerService Is Ready To Verify \'CustomerListConsumerService_Delet" +
                    "eCustomerEvent_HappyPath\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 54
        testRunner.And("CustomerListConsumerService CreateCustomerEvent Request Is Setup With Default Val" +
                    "ues", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
   testRunner.When("I Post Valid CustomerListConsumerService CreateCustomerEvent Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 56
        testRunner.And("CustomerListConsumerService DeleteCustomerEvent Request Is Setup With Default Val" +
                    "ues", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 57
        testRunner.And("I Post Valid CustomerListConsumerService DeleteCustomerEvent Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 58
   testRunner.Then("The DeleteCustomerEvent Details Are Removed In VSS DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerListConsumerService_AssociateCustomerUserEvent_HappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerListService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sanity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerListConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US11456")]
        public virtual void CustomerListConsumerService_AssociateCustomerUserEvent_HappyPath()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerListConsumerService_AssociateCustomerUserEvent_HappyPath", new string[] {
                        "Automated",
                        "Sanity",
                        "Positive",
                        "CustomerListConsumerService",
                        "US11456"});
#line 62
this.ScenarioSetup(scenarioInfo);
#line 63
   testRunner.Given("CustomerListConsumerService Is Ready To Verify \'CustomerListConsumerService_Assoc" +
                    "iateCustomerUserEvent_HappyPath\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 64
      testRunner.And("CustomerListConsumerService AssociateCustomerUserEvent Request Is Setup With Defa" +
                    "ult Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 65
   testRunner.When("I Post Valid CustomerListConsumerService AssociateCustomerUserEvent Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 66
   testRunner.Then("The AssociateCustomerUserEvent Details Are Stored In VSS DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerListConsumerService_AssociateMultipleCustomerUserEvent_HappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerListService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerListConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US11456")]
        public virtual void CustomerListConsumerService_AssociateMultipleCustomerUserEvent_HappyPath()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerListConsumerService_AssociateMultipleCustomerUserEvent_HappyPath", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "CustomerListConsumerService",
                        "US11456"});
#line 70
this.ScenarioSetup(scenarioInfo);
#line 71
   testRunner.Given("CustomerListConsumerService Is Ready To Verify \'CustomerListConsumerService_Assoc" +
                    "iateMultipleCustomerUserEvent_HappyPath\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 72
      testRunner.And("CustomerListConsumerService AssociateCustomerUserEvent Request Is Setup With Mult" +
                    "iple Customer Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 73
   testRunner.When("I Post Valid CustomerListConsumerService AssociateCustomerUserEvent Request For M" +
                    "ultiple Customers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 74
   testRunner.Then("The AssociateCustomerUserEvent Details For All Customers Are Stored In VSS DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerListConsumerService_AssociateCustomerUserEvent_InvalidCustomerUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerListService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerListConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US11456")]
        public virtual void CustomerListConsumerService_AssociateCustomerUserEvent_InvalidCustomerUID()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerListConsumerService_AssociateCustomerUserEvent_InvalidCustomerUID", new string[] {
                        "Automated",
                        "Regression",
                        "Negative",
                        "CustomerListConsumerService",
                        "US11456"});
#line 78
this.ScenarioSetup(scenarioInfo);
#line 79
   testRunner.Given("CustomerListConsumerService Is Ready To Verify \'CustomerListConsumerService_Assoc" +
                    "iateCustomerUserEvent_InvalidCustomerUID\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 80
   testRunner.When("I Set CustomerListConsumerService AssociateCustomerUserEvent CustomerUID Which Do" +
                    "esNotExist", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 81
        testRunner.And("I Post Valid CustomerListConsumerService AssociateCustomerUserEvent Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
   testRunner.Then("The AssociateCustomerUserEvent Details Are NOT Stored In VSS DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerListConsumerService_DissociateCustomerUserEvent_HappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerListService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sanity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerListConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US11456")]
        public virtual void CustomerListConsumerService_DissociateCustomerUserEvent_HappyPath()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerListConsumerService_DissociateCustomerUserEvent_HappyPath", new string[] {
                        "Automated",
                        "Sanity",
                        "Positive",
                        "CustomerListConsumerService",
                        "US11456"});
#line 86
this.ScenarioSetup(scenarioInfo);
#line 87
   testRunner.Given("CustomerListConsumerService Is Ready To Verify \'CustomerListConsumerService_Disso" +
                    "ciateCustomerUserEvent_HappyPath\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 88
      testRunner.And("CustomerListConsumerService DissociateCustomerUserEvent Request Is Setup With Def" +
                    "ault Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 89
   testRunner.When("I Post Valid CustomerListConsumerService DissociateCustomerUserEvent Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 90
   testRunner.Then("The DissociateCustomerUserEvent Details Are Removed In VSS DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerListConsumerService_DissociateCustomerUserEvent_InvalidCustomerUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerListService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerListConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US11456")]
        public virtual void CustomerListConsumerService_DissociateCustomerUserEvent_InvalidCustomerUID()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerListConsumerService_DissociateCustomerUserEvent_InvalidCustomerUID", new string[] {
                        "Automated",
                        "Regression",
                        "Negative",
                        "CustomerListConsumerService",
                        "US11456"});
#line 94
this.ScenarioSetup(scenarioInfo);
#line 95
   testRunner.Given("CustomerListConsumerService Is Ready To Verify \'CustomerListConsumerService_Disso" +
                    "ciateCustomerUserEvent_InvalidCustomerUID\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 96
      testRunner.And("CustomerListConsumerService DissociateCustomerUserEvent Request Is Setup With Def" +
                    "ault Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 97
   testRunner.When("I Set CustomerListConsumerService DissociateCustomerUserEvent CustomerUID Which D" +
                    "oesNotExist", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 98
        testRunner.And("I Post Valid CustomerListConsumerService DissociateCustomerUserEvent Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 99
   testRunner.Then("The DissociateCustomerUserEvent Details For Invalid Customer NOT Removed In VSS D" +
                    "B", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerListConsumerService_DissociateCustomerUserEvent_InvalidUserUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerListService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerListConsumerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US11456")]
        public virtual void CustomerListConsumerService_DissociateCustomerUserEvent_InvalidUserUID()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerListConsumerService_DissociateCustomerUserEvent_InvalidUserUID", new string[] {
                        "Automated",
                        "Regression",
                        "Negative",
                        "CustomerListConsumerService",
                        "US11456"});
#line 103
this.ScenarioSetup(scenarioInfo);
#line 104
   testRunner.Given("CustomerListConsumerService Is Ready To Verify \'CustomerListConsumerService_Disso" +
                    "ciateCustomerUserEvent_InvalidUserUID\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 105
      testRunner.And("CustomerListConsumerService DissociateCustomerUserEvent Request Is Setup With Def" +
                    "ault Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 106
   testRunner.When("I Set CustomerListConsumerService DissociateCustomerUserEvent UserUID Which DoesN" +
                    "otExist", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 107
        testRunner.And("I Post Valid CustomerListConsumerService DissociateCustomerUserEvent Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 108
   testRunner.Then("The DissociateCustomerUserEvent Details Are Invalid User NOT Removed In VSS DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerListWebApi_GetUserCustomerList_HappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerListService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sanity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerListWebApi")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9992")]
        public virtual void CustomerListWebApi_GetUserCustomerList_HappyPath()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerListWebApi_GetUserCustomerList_HappyPath", new string[] {
                        "Automated",
                        "Sanity",
                        "Positive",
                        "CustomerListWebApi",
                        "US9992"});
#line 112
this.ScenarioSetup(scenarioInfo);
#line 113
   testRunner.Given("CustomerListWebApi Is Ready To Verify \'CustomerListWebApi_GetUserCustomerList_Hap" +
                    "pyPath\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 114
        testRunner.And("User Created And Associated With Single Customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 115
   testRunner.When("I Post Valid CustomerListWebApi GetUserCustomerList Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 116
   testRunner.Then("The GetUserCustomerList Response Should Return Customer Details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerListWebApi_GetUserCustomerList_Multiple")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerListService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerListWebApi")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9992")]
        public virtual void CustomerListWebApi_GetUserCustomerList_Multiple()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerListWebApi_GetUserCustomerList_Multiple", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "CustomerListWebApi",
                        "US9992"});
#line 120
this.ScenarioSetup(scenarioInfo);
#line 121
   testRunner.Given("CustomerListWebApi Is Ready To Verify \'CustomerListWebApi_GetUserCustomerList_Hap" +
                    "pyPath\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 122
        testRunner.And("User Created And Associated With Multiple Customers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 123
   testRunner.When("I Post Valid CustomerListWebApi GetUserMultipleCustomerList Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 124
   testRunner.Then("The GetUserCustomerList Response Should Return Multiple Customers Details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void CustomerListWebApi_GetUserCustomerList_InvalidAccessToken(string description, string accessToken, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "CustomerListWebApi",
                    "US9992"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerListWebApi_GetUserCustomerList_InvalidAccessToken", @__tags);
#line 128
this.ScenarioSetup(scenarioInfo);
#line 129
   testRunner.Given(string.Format("CustomerListWebApi Is Ready To Verify \'{0}\'", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 130
        testRunner.And("User Created And Associated With Single Customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 131
   testRunner.When(string.Format("I Post InValid CustomerListWebApi GetUserCustomerList Request With \'{0}\'", accessToken), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 132
   testRunner.Then(string.Format("The GetUserCustomerList Response Should Return \'{0}\'", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerListWebApi_GetUserCustomerList_InvalidAccessToken")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerListService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerListWebApi")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9992")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Invalid")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Invalid")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccessToken", "e041692df491461821ceb691fd9f351a")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_InvalidToken")]
        public virtual void CustomerListWebApi_GetUserCustomerList_InvalidAccessToken_Invalid()
        {
            this.CustomerListWebApi_GetUserCustomerList_InvalidAccessToken("Invalid", "e041692df491461821ceb691fd9f351a", "ERR_InvalidToken", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerListWebApi_GetUserCustomerList_InvalidAccessToken")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerListService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerListWebApi")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9992")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccessToken", "EMPTY_EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_EmptyToken")]
        public virtual void CustomerListWebApi_GetUserCustomerList_InvalidAccessToken_Empty()
        {
            this.CustomerListWebApi_GetUserCustomerList_InvalidAccessToken("Empty", "EMPTY_EMPTY", "ERR_EmptyToken", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerListWebApi_GetUserCustomerList_InvalidAccessToken")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerListService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerListWebApi")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9992")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Expired")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Expired")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccessToken", "d041692df491461821ceb691fd9f351a")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ExpiredToken")]
        public virtual void CustomerListWebApi_GetUserCustomerList_InvalidAccessToken_Expired()
        {
            this.CustomerListWebApi_GetUserCustomerList_InvalidAccessToken("Expired", "d041692df491461821ceb691fd9f351a", "ERR_ExpiredToken", ((string[])(null)));
        }
    }
}
#pragma warning restore
#endregion
