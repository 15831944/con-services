// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace VSS.MasterData.Customer.AcceptanceTests.Scenarios.CustomerService
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class CustomerServiceFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CustomerService.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "CustomerService", "References : A. Contract Document - None\r\nDependencies:  Internal -  Kafka Topic\r" +
                    "\nUser Story 8587:Customer Micro Service (Master Data Management)", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "CustomerService")))
            {
                VSS.MasterData.Customer.AcceptanceTests.Scenarios.CustomerService.CustomerServiceFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_CreateHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        public virtual void CustomerService_CreateHappyPath()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerService_CreateHappyPath", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "CustomerService",
                        "US8587"});
#line 9
this.ScenarioSetup(scenarioInfo);
#line 10
 testRunner.Given("CustomerService Is Ready To Verify \'CustomerService_CreateHappyPath\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 11
 testRunner.And("CustomerServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
 testRunner.When("I Post Valid CustomerServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 13
 testRunner.Then("The CreateCustomerEvent Details Are Stored In VSS DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_UpdateHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sanity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        public virtual void CustomerService_UpdateHappyPath()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerService_UpdateHappyPath", new string[] {
                        "Automated",
                        "Sanity",
                        "Positive",
                        "CustomerService",
                        "US8587"});
#line 18
this.ScenarioSetup(scenarioInfo);
#line 19
 testRunner.Given("CustomerService Is Ready To Verify \'CustomerService_UpdateHappyPath\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 20
 testRunner.And("CustomerServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
 testRunner.When("I Post Valid CustomerServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 22
    testRunner.Then("The UpdateCustomerEvent Details Are Stored In VSS DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 23
 testRunner.And("The Processed CustomerServiceUpdate Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_DeleteHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sanity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        public virtual void CustomerService_DeleteHappyPath()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerService_DeleteHappyPath", new string[] {
                        "Automated",
                        "Sanity",
                        "Positive",
                        "CustomerService",
                        "US8587"});
#line 27
this.ScenarioSetup(scenarioInfo);
#line 28
 testRunner.Given("CustomerService Is Ready To Verify \'CustomerService_DeleteHappyPath\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 29
 testRunner.And("CustomerServiceDelete Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.When("I Post Valid CustomerServiceDelete Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 31
    testRunner.Then("The DeleteCustomerEvent Details Are Removed In VSS DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 32
 testRunner.And("The Processed CustomerServiceDelete Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_CreateValidBSSID_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        public virtual void CustomerService_CreateValidBSSID_Empty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerService_CreateValidBSSID_Empty", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "CustomerService",
                        "US8587"});
#line 36
this.ScenarioSetup(scenarioInfo);
#line 37
 testRunner.Given("CustomerService Is Ready To Verify \'CustomerService_CreateValidBSSID_Empty\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 38
 testRunner.And("CustomerServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
 testRunner.When("I Set CustomerServiceCreate BSSID To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 40
 testRunner.And("I Post Valid CustomerServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
 testRunner.Then("The CreateCustomerEvent Details Are Stored In VSS DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 42
 testRunner.And("The Processed CustomerServiceCreate Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_CreateValidNetworkDealerCode_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        public virtual void CustomerService_CreateValidNetworkDealerCode_NULL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerService_CreateValidNetworkDealerCode_NULL", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "CustomerService",
                        "US8587"});
#line 46
this.ScenarioSetup(scenarioInfo);
#line 47
 testRunner.Given("CustomerService Is Ready To Verify \'CustomerService_CreateValidNetworkDealerCode_" +
                    "NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 48
 testRunner.And("CustomerServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
 testRunner.When("I Set CustomerServiceCreate NetworkDealerCode To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 50
 testRunner.And("I Post Valid CustomerServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
 testRunner.Then("The CreateCustomerEvent Details Are Stored In VSS DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 52
 testRunner.And("The Processed CustomerServiceCreate Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_CreateValidNetworkCustomerCode_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        public virtual void CustomerService_CreateValidNetworkCustomerCode_NULL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerService_CreateValidNetworkCustomerCode_NULL", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "CustomerService",
                        "US8587"});
#line 56
this.ScenarioSetup(scenarioInfo);
#line 57
 testRunner.Given("CustomerService Is Ready To Verify \'CustomerService_CreateValidNetworkCustomerCod" +
                    "e_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 58
 testRunner.And("CustomerServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 59
 testRunner.When("I Set CustomerServiceCreate NetworkCustomerCode To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 60
 testRunner.And("I Post Valid CustomerServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 61
 testRunner.Then("The CreateCustomerEvent Details Are Stored In VSS DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 62
 testRunner.And("The Processed CustomerServiceCreate Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_CreateValidDealerAccountCode_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        public virtual void CustomerService_CreateValidDealerAccountCode_NULL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerService_CreateValidDealerAccountCode_NULL", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "CustomerService",
                        "US8587"});
#line 66
this.ScenarioSetup(scenarioInfo);
#line 67
 testRunner.Given("CustomerService Is Ready To Verify \'CustomerService_CreateValidDealerAccountCode_" +
                    "NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 68
 testRunner.And("CustomerServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 69
 testRunner.When("I Set CustomerServiceCreate DealerAccountCode To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 70
 testRunner.And("I Post Valid CustomerServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 71
 testRunner.Then("The CreateCustomerEvent Details Are Stored In VSS DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 72
 testRunner.And("The Processed CustomerServiceCreate Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void CustomerService_CreateValidPrimaryContactEmail(string description, string primaryContactEmail, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Positive",
                    "CustomerService",
                    "US33087"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerService_CreateValidPrimaryContactEmail", @__tags);
#line 76
this.ScenarioSetup(scenarioInfo);
#line 77
 testRunner.Given(string.Format("CustomerService Is Ready To Verify \'{0}\'", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 78
    testRunner.And("CustomerServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
 testRunner.When(string.Format("I Set CustomerServiceCreate PrimaryContactEmail To \'{0}\'", primaryContactEmail), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 80
 testRunner.And("I Post Valid CustomerServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 81
 testRunner.Then("The CreateCustomerEvent Details Are Stored In VSS DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 82
 testRunner.And("The Processed CustomerServiceCreate Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_CreateValidPrimaryContactEmail")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US33087")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PrimaryContactEmail", "NULL_NULL")]
        public virtual void CustomerService_CreateValidPrimaryContactEmail_NULL()
        {
            this.CustomerService_CreateValidPrimaryContactEmail("NULL", "NULL_NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_CreateValidPrimaryContactEmail")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US33087")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PrimaryContactEmail", "EMPTY_EMPTY")]
        public virtual void CustomerService_CreateValidPrimaryContactEmail_EMPTY()
        {
            this.CustomerService_CreateValidPrimaryContactEmail("EMPTY", "EMPTY_EMPTY", ((string[])(null)));
        }
        
        public virtual void CustomerService_CreateValidFirstName(string description, string firstName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Positive",
                    "CustomerService",
                    "US33087"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerService_CreateValidFirstName", @__tags);
#line 90
this.ScenarioSetup(scenarioInfo);
#line 91
 testRunner.Given(string.Format("CustomerService Is Ready To Verify \'{0}\'", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 92
    testRunner.And("CustomerServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 93
 testRunner.When(string.Format("I Set CustomerServiceCreate FirstName To \'{0}\'", firstName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 94
 testRunner.And("I Post Valid CustomerServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 95
 testRunner.Then("The CreateCustomerEvent Details Are Stored In VSS DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 96
 testRunner.And("The Processed CustomerServiceCreate Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_CreateValidFirstName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US33087")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FirstName", "NULL_NULL")]
        public virtual void CustomerService_CreateValidFirstName_NULL()
        {
            this.CustomerService_CreateValidFirstName("NULL", "NULL_NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_CreateValidFirstName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US33087")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FirstName", "EMPTY_EMPTY")]
        public virtual void CustomerService_CreateValidFirstName_EMPTY()
        {
            this.CustomerService_CreateValidFirstName("EMPTY", "EMPTY_EMPTY", ((string[])(null)));
        }
        
        public virtual void CustomerService_CreateValidLastName(string description, string lastName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Positive",
                    "CustomerService",
                    "US33087"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerService_CreateValidLastName", @__tags);
#line 104
this.ScenarioSetup(scenarioInfo);
#line 105
 testRunner.Given(string.Format("CustomerService Is Ready To Verify \'{0}\'", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 106
    testRunner.And("CustomerServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 107
 testRunner.When(string.Format("I Set CustomerServiceCreate LastName To \'{0}\'", lastName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 108
 testRunner.And("I Post Valid CustomerServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 109
 testRunner.Then("The CreateCustomerEvent Details Are Stored In VSS DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 110
 testRunner.And("The Processed CustomerServiceCreate Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_CreateValidLastName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US33087")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LastName", "NULL_NULL")]
        public virtual void CustomerService_CreateValidLastName_NULL()
        {
            this.CustomerService_CreateValidLastName("NULL", "NULL_NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_CreateValidLastName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US33087")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LastName", "EMPTY_EMPTY")]
        public virtual void CustomerService_CreateValidLastName_EMPTY()
        {
            this.CustomerService_CreateValidLastName("EMPTY", "EMPTY_EMPTY", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_CreateValidAllOptionalAttributes_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        public virtual void CustomerService_CreateValidAllOptionalAttributes_NULL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerService_CreateValidAllOptionalAttributes_NULL", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "CustomerService",
                        "US8587"});
#line 118
this.ScenarioSetup(scenarioInfo);
#line 119
 testRunner.Given("CustomerService Is Ready To Verify \'CustomerService_CreateValidAllOptionalAttribu" +
                    "tes_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 120
 testRunner.And("CustomerServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 121
   testRunner.When("I Set CustomerServiceCreate NetworkDealerCode To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 122
 testRunner.And("I Set CustomerServiceCreate BSSID To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 123
 testRunner.And("I Set CustomerServiceCreate NetworkCustomerCode To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 124
  testRunner.And("I Set CustomerServiceCreate DealerAccountCode To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 125
 testRunner.And("I Set CustomerServiceCreate PrimaryContactEmail To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 126
 testRunner.And("I Set CustomerServiceCreate FirstName To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 127
 testRunner.And("I Set CustomerServiceCreate LastName To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 128
 testRunner.And("I Post Valid CustomerServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 129
 testRunner.Then("The CreateCustomerEvent Details Are Stored In VSS DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 130
 testRunner.And("The Processed CustomerServiceCreate Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void CustomerService_CreateValidCustomerType(string description, string customerType, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Positive",
                    "CustomerService",
                    "US8587"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerService_CreateValidCustomerType", @__tags);
#line 134
this.ScenarioSetup(scenarioInfo);
#line 135
 testRunner.Given("CustomerService Is Ready To Verify \'CustomerService_CreateValidCustomerType\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 136
 testRunner.And("CustomerServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 137
 testRunner.When(string.Format("I Set CustomerServiceCreate CustomerType To \'{0}\'", customerType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 138
 testRunner.And("I Post Valid CustomerServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 139
 testRunner.Then("The CreateCustomerEvent Details Are Stored In VSS DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 140
 testRunner.And("The Processed CustomerServiceCreate Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_CreateValidCustomerType")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Dealer")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Dealer")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerType", "Dealer")]
        public virtual void CustomerService_CreateValidCustomerType_Dealer()
        {
            this.CustomerService_CreateValidCustomerType("Dealer", "Dealer", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_CreateValidCustomerType")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Customer")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Customer")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerType", "Customer")]
        public virtual void CustomerService_CreateValidCustomerType_Customer()
        {
            this.CustomerService_CreateValidCustomerType("Customer", "Customer", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_CreateValidCustomerType")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Operations")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Operations")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerType", "Operations")]
        public virtual void CustomerService_CreateValidCustomerType_Operations()
        {
            this.CustomerService_CreateValidCustomerType("Operations", "Operations", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_CreateValidCustomerType")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Corporate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Corporate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerType", "Corporate")]
        public virtual void CustomerService_CreateValidCustomerType_Corporate()
        {
            this.CustomerService_CreateValidCustomerType("Corporate", "Corporate", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_UpdateValidCustomerName_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        public virtual void CustomerService_UpdateValidCustomerName_NULL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerService_UpdateValidCustomerName_NULL", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "CustomerService",
                        "US8587"});
#line 150
this.ScenarioSetup(scenarioInfo);
#line 151
 testRunner.Given("CustomerService Is Ready To Verify \'CustomerService_UpdateValidCustomerName_NULL\'" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 152
 testRunner.And("CustomerServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 153
 testRunner.When("I Set CustomerServiceUpdate CustomerName To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 154
 testRunner.And("I Post Valid CustomerServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 155
    testRunner.Then("The UpdateCustomerEvent Details Are Stored In VSS DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 156
 testRunner.And("The Processed CustomerServiceUpdate Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_UpdateValidBSSID_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        public virtual void CustomerService_UpdateValidBSSID_NULL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerService_UpdateValidBSSID_NULL", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "CustomerService",
                        "US8587"});
#line 160
this.ScenarioSetup(scenarioInfo);
#line 161
 testRunner.Given("CustomerService Is Ready To Verify \'CustomerService_UpdateValidBSSID_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 162
 testRunner.And("CustomerServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 163
 testRunner.When("I Set CustomerServiceUpdate BSSID To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 164
 testRunner.And("I Post Valid CustomerServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 165
    testRunner.Then("The UpdateCustomerEvent Details Are Stored In VSS DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 166
 testRunner.And("The Processed CustomerServiceUpdate Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_UpdateValidDealerNetwork_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        public virtual void CustomerService_UpdateValidDealerNetwork_NULL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerService_UpdateValidDealerNetwork_NULL", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "CustomerService",
                        "US8587"});
#line 170
this.ScenarioSetup(scenarioInfo);
#line 171
 testRunner.Given("CustomerService Is Ready To Verify \'CustomerService_UpdateValidDealerNetwork_NULL" +
                    "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 172
 testRunner.And("CustomerServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 173
 testRunner.When("I Set CustomerServiceUpdate DealerNetwork To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 174
 testRunner.And("I Post Valid CustomerServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 175
    testRunner.Then("The UpdateCustomerEvent Details Are Stored In VSS DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 176
 testRunner.And("The Processed CustomerServiceUpdate Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_UpdateValidNetworkDealerCode_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        public virtual void CustomerService_UpdateValidNetworkDealerCode_NULL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerService_UpdateValidNetworkDealerCode_NULL", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "CustomerService",
                        "US8587"});
#line 180
this.ScenarioSetup(scenarioInfo);
#line 181
 testRunner.Given("CustomerService Is Ready To Verify \'CustomerService_UpdateValidNetworkDealerCode_" +
                    "NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 182
 testRunner.And("CustomerServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 183
 testRunner.When("I Set CustomerServiceUpdate NetworkDealerCode To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 184
 testRunner.And("I Post Valid CustomerServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 185
    testRunner.Then("The UpdateCustomerEvent Details Are Stored In VSS DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 186
 testRunner.And("The Processed CustomerServiceUpdate Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_UpdateValidNetworkCustomerCode_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        public virtual void CustomerService_UpdateValidNetworkCustomerCode_NULL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerService_UpdateValidNetworkCustomerCode_NULL", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "CustomerService",
                        "US8587"});
#line 190
this.ScenarioSetup(scenarioInfo);
#line 191
 testRunner.Given("CustomerService Is Ready To Verify \'CustomerService_UpdateValidNetworkCustomerCod" +
                    "e_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 192
 testRunner.And("CustomerServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 193
 testRunner.When("I Set CustomerServiceUpdate NetworkCustomerCode To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 194
 testRunner.And("I Post Valid CustomerServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 195
    testRunner.Then("The UpdateCustomerEvent Details Are Stored In VSS DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 196
 testRunner.And("The Processed CustomerServiceUpdate Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_UpdateValidDealerAccountCode_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        public virtual void CustomerService_UpdateValidDealerAccountCode_NULL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerService_UpdateValidDealerAccountCode_NULL", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "CustomerService",
                        "US8587"});
#line 200
this.ScenarioSetup(scenarioInfo);
#line 201
 testRunner.Given("CustomerService Is Ready To Verify \'CustomerService_UpdateValidDealerAccountCode_" +
                    "NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 202
 testRunner.And("CustomerServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 203
 testRunner.When("I Set CustomerServiceUpdate DealerAccountCode To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 204
 testRunner.And("I Post Valid CustomerServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 205
    testRunner.Then("The UpdateCustomerEvent Details Are Stored In VSS DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 206
 testRunner.And("The Processed CustomerServiceUpdate Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void CustomerService_UpdateValidPrimaryContactEmail(string description, string primaryContactEmail, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Positive",
                    "CustomerService",
                    "US33087"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerService_UpdateValidPrimaryContactEmail", @__tags);
#line 210
this.ScenarioSetup(scenarioInfo);
#line 211
 testRunner.Given(string.Format("CustomerService Is Ready To Verify \'{0}\'", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 212
 testRunner.And("CustomerServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 213
 testRunner.When(string.Format("I Set CustomerServiceUpdate PrimaryContactEmail To \'{0}\'", primaryContactEmail), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 214
 testRunner.And("I Post Valid CustomerServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 215
    testRunner.Then("The UpdateCustomerEvent Details Are Stored In VSS DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 216
 testRunner.And("The Processed CustomerServiceUpdate Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_UpdateValidPrimaryContactEmail")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US33087")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PrimaryContactEmail", "NULL_NULL")]
        public virtual void CustomerService_UpdateValidPrimaryContactEmail_NULL()
        {
            this.CustomerService_UpdateValidPrimaryContactEmail("NULL", "NULL_NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_UpdateValidPrimaryContactEmail")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US33087")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PrimaryContactEmail", "EMPTY_EMPTY")]
        public virtual void CustomerService_UpdateValidPrimaryContactEmail_EMPTY()
        {
            this.CustomerService_UpdateValidPrimaryContactEmail("EMPTY", "EMPTY_EMPTY", ((string[])(null)));
        }
        
        public virtual void CustomerService_UpdateValidFirstName(string description, string firstName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Positive",
                    "CustomerService",
                    "US33087"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerService_UpdateValidFirstName", @__tags);
#line 224
this.ScenarioSetup(scenarioInfo);
#line 225
 testRunner.Given(string.Format("CustomerService Is Ready To Verify \'{0}\'", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 226
 testRunner.And("CustomerServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 227
 testRunner.When(string.Format("I Set CustomerServiceUpdate FirstName To \'{0}\'", firstName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 228
 testRunner.And("I Post Valid CustomerServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 229
    testRunner.Then("The UpdateCustomerEvent Details Are Stored In VSS DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 230
 testRunner.And("The Processed CustomerServiceUpdate Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_UpdateValidFirstName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US33087")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FirstName", "NULL_NULL")]
        public virtual void CustomerService_UpdateValidFirstName_NULL()
        {
            this.CustomerService_UpdateValidFirstName("NULL", "NULL_NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_UpdateValidFirstName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US33087")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FirstName", "EMPTY_EMPTY")]
        public virtual void CustomerService_UpdateValidFirstName_EMPTY()
        {
            this.CustomerService_UpdateValidFirstName("EMPTY", "EMPTY_EMPTY", ((string[])(null)));
        }
        
        public virtual void CustomerService_UpdateValidLastName(string description, string lastName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Positive",
                    "CustomerService",
                    "US33087"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerService_UpdateValidLastName", @__tags);
#line 238
this.ScenarioSetup(scenarioInfo);
#line 239
 testRunner.Given(string.Format("CustomerService Is Ready To Verify \'{0}\'", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 240
 testRunner.And("CustomerServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 241
 testRunner.When(string.Format("I Set CustomerServiceUpdate LastName To \'{0}\'", lastName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 242
 testRunner.And("I Post Valid CustomerServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 243
    testRunner.Then("The UpdateCustomerEvent Details Are Stored In VSS DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 244
 testRunner.And("The Processed CustomerServiceUpdate Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_UpdateValidLastName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US33087")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LastName", "NULL_NULL")]
        public virtual void CustomerService_UpdateValidLastName_NULL()
        {
            this.CustomerService_UpdateValidLastName("NULL", "NULL_NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_UpdateValidLastName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US33087")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LastName", "EMPTY_EMPTY")]
        public virtual void CustomerService_UpdateValidLastName_EMPTY()
        {
            this.CustomerService_UpdateValidLastName("EMPTY", "EMPTY_EMPTY", ((string[])(null)));
        }
        
        public virtual void CustomerService_UpdateValidOptionalAttributes(string description, string customerName, string bSSID, string dealerNetwork, string networkDealerCode, string networkCustomerCode, string dealerAccountCode, string primaryContactEmail, string firstName, string lastName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Positive",
                    "CustomerService",
                    "US8587"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerService_UpdateValidOptionalAttributes", @__tags);
#line 252
this.ScenarioSetup(scenarioInfo);
#line 253
 testRunner.Given("CustomerService Is Ready To Verify \'CustomerService_UpdateValidOptionalAttributes" +
                    "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 254
 testRunner.And("CustomerServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 255
 testRunner.When(string.Format("I Set CustomerServiceUpdate CustomerName To \'{0}\'", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 256
 testRunner.And(string.Format("I Set CustomerServiceUpdate BSSID To \'{0}\'", bSSID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 257
 testRunner.And(string.Format("I Set CustomerServiceUpdate DealerNetwork To \'{0}\'", dealerNetwork), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 258
 testRunner.And(string.Format("I Set CustomerServiceUpdate NetworkDealerCode To \'{0}\'", networkDealerCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 259
 testRunner.And(string.Format("I Set CustomerServiceUpdate NetworkCustomerCode To \'{0}\'", networkCustomerCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 260
 testRunner.And(string.Format("I Set CustomerServiceUpdate DealerAccountCode To \'{0}\'", dealerAccountCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 261
 testRunner.And(string.Format("I Set CustomerServiceUpdate PrimaryContactEmail To \'{0}\'", primaryContactEmail), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 262
 testRunner.And(string.Format("I Set CustomerServiceUpdate FirstName To \'{0}\'", firstName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 263
 testRunner.And(string.Format("I Set CustomerServiceUpdate LastName To \'{0}\'", lastName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 264
 testRunner.And("I Post Valid CustomerServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 265
    testRunner.Then("The UpdateCustomerEvent Details Are Stored In VSS DB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 266
 testRunner.And("The Processed CustomerServiceUpdate Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_UpdateValidOptionalAttributes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "BSSID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "BSSID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:BSSID", "-8002120150629121003")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DealerNetwork", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NetworkDealerCode", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NetworkCustomerCode", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DealerAccountCode", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PrimaryContactEmail", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FirstName", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LastName", "NULL_NULL")]
        public virtual void CustomerService_UpdateValidOptionalAttributes_BSSID()
        {
            this.CustomerService_UpdateValidOptionalAttributes("BSSID", "NULL_NULL", "-8002120150629121003", "NULL_NULL", "NULL_NULL", "NULL_NULL", "NULL_NULL", "NULL_NULL", "NULL_NULL", "NULL_NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_UpdateValidOptionalAttributes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "DealerNetwork")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "DealerNetwork")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:BSSID", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DealerNetwork", "SITECH")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NetworkDealerCode", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NetworkCustomerCode", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DealerAccountCode", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PrimaryContactEmail", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FirstName", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LastName", "NULL_NULL")]
        public virtual void CustomerService_UpdateValidOptionalAttributes_DealerNetwork()
        {
            this.CustomerService_UpdateValidOptionalAttributes("DealerNetwork", "NULL_NULL", "NULL_NULL", "SITECH", "NULL_NULL", "NULL_NULL", "NULL_NULL", "NULL_NULL", "NULL_NULL", "NULL_NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_UpdateValidOptionalAttributes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NetworkDealerCode")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NetworkDealerCode")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:BSSID", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DealerNetwork", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NetworkDealerCode", "NDTest")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NetworkCustomerCode", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DealerAccountCode", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PrimaryContactEmail", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FirstName", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LastName", "NULL_NULL")]
        public virtual void CustomerService_UpdateValidOptionalAttributes_NetworkDealerCode()
        {
            this.CustomerService_UpdateValidOptionalAttributes("NetworkDealerCode", "NULL_NULL", "NULL_NULL", "NULL_NULL", "NDTest", "NULL_NULL", "NULL_NULL", "NULL_NULL", "NULL_NULL", "NULL_NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_UpdateValidOptionalAttributes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NetworkCustomerCode")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NetworkCustomerCode")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:BSSID", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DealerNetwork", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NetworkDealerCode", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NetworkCustomerCode", "NC50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DealerAccountCode", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PrimaryContactEmail", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FirstName", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LastName", "NULL_NULL")]
        public virtual void CustomerService_UpdateValidOptionalAttributes_NetworkCustomerCode()
        {
            this.CustomerService_UpdateValidOptionalAttributes("NetworkCustomerCode", "NULL_NULL", "NULL_NULL", "NULL_NULL", "NULL_NULL", "NC50", "NULL_NULL", "NULL_NULL", "NULL_NULL", "NULL_NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_UpdateValidOptionalAttributes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "DealerAccountCode")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "DealerAccountCode")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:BSSID", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DealerNetwork", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NetworkDealerCode", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NetworkCustomerCode", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DealerAccountCode", "DA50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PrimaryContactEmail", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FirstName", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LastName", "NULL_NULL")]
        public virtual void CustomerService_UpdateValidOptionalAttributes_DealerAccountCode()
        {
            this.CustomerService_UpdateValidOptionalAttributes("DealerAccountCode", "NULL_NULL", "NULL_NULL", "NULL_NULL", "NULL_NULL", "NULL_NULL", "DA50", "NULL_NULL", "NULL_NULL", "NULL_NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_UpdateValidOptionalAttributes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "PrimaryContactEmail")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "PrimaryContactEmail")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "NewAutoCustomer")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:BSSID", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DealerNetwork", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NetworkDealerCode", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NetworkCustomerCode", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DealerAccountCode", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PrimaryContactEmail", "AutoTest123@trimble.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FirstName", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LastName", "NULL_NULL")]
        public virtual void CustomerService_UpdateValidOptionalAttributes_PrimaryContactEmail()
        {
            this.CustomerService_UpdateValidOptionalAttributes("PrimaryContactEmail", "NewAutoCustomer", "NULL_NULL", "NULL_NULL", "NULL_NULL", "NULL_NULL", "NULL_NULL", "AutoTest123@trimble.com", "NULL_NULL", "NULL_NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_UpdateValidOptionalAttributes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "FirstName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "FirstName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "NewAutoCustomer")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:BSSID", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DealerNetwork", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NetworkDealerCode", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NetworkCustomerCode", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DealerAccountCode", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PrimaryContactEmail", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FirstName", "AutoTestFirstName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LastName", "NULL_NULL")]
        public virtual void CustomerService_UpdateValidOptionalAttributes_FirstName()
        {
            this.CustomerService_UpdateValidOptionalAttributes("FirstName", "NewAutoCustomer", "NULL_NULL", "NULL_NULL", "NULL_NULL", "NULL_NULL", "NULL_NULL", "NULL_NULL", "AutoTestFirstName", "NULL_NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_UpdateValidOptionalAttributes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "LastName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "LastName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "NewAutoCustomer")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:BSSID", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DealerNetwork", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NetworkDealerCode", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NetworkCustomerCode", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DealerAccountCode", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PrimaryContactEmail", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FirstName", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LastName", "AutoTestLastName")]
        public virtual void CustomerService_UpdateValidOptionalAttributes_LastName()
        {
            this.CustomerService_UpdateValidOptionalAttributes("LastName", "NewAutoCustomer", "NULL_NULL", "NULL_NULL", "NULL_NULL", "NULL_NULL", "NULL_NULL", "NULL_NULL", "NULL_NULL", "AutoTestLastName", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_CreateInvalid_Duplicate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        public virtual void CustomerService_CreateInvalid_Duplicate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerService_CreateInvalid_Duplicate", new string[] {
                        "Automated",
                        "Regression",
                        "Negative",
                        "CustomerService",
                        "US8587"});
#line 280
this.ScenarioSetup(scenarioInfo);
#line 281
 testRunner.Given("CustomerService Is Ready To Verify \'CustomerService_CreateInvalid_Duplicate\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 282
 testRunner.And("CustomerServiceCreate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 283
 testRunner.When("I Set Duplicate CustomerUID Value To \'<CustomerUID>\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 284
 testRunner.And("I Post Invalid CustomerServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 285
    testRunner.Then("CustomerServiceCreate Response With \'ERR_Duplicate\' Should Be Returned", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_UpdateInvalid_NonExistingCustomer")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        public virtual void CustomerService_UpdateInvalid_NonExistingCustomer()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerService_UpdateInvalid_NonExistingCustomer", new string[] {
                        "Automated",
                        "Regression",
                        "Negative",
                        "CustomerService",
                        "US8587"});
#line 289
this.ScenarioSetup(scenarioInfo);
#line 290
 testRunner.Given("CustomerService Is Ready To Verify \'CustomerService_UpdateInvalid_NonExistingCust" +
                    "omer\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 291
 testRunner.And("CustomerServiceUpdate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 292
 testRunner.When("I Post Invalid CustomerServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 293
    testRunner.Then("CustomerServiceCreate Response With \'ERR_NonExistingCustomer\' Should Be Returned", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_DeleteInvalid_NonExistingCustomer")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        public virtual void CustomerService_DeleteInvalid_NonExistingCustomer()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerService_DeleteInvalid_NonExistingCustomer", new string[] {
                        "Automated",
                        "Regression",
                        "Negative",
                        "CustomerService",
                        "US8587"});
#line 297
this.ScenarioSetup(scenarioInfo);
#line 298
 testRunner.Given("CustomerService Is Ready To Verify \'CustomerService_DeleteInvalid_NonExistingCust" +
                    "omer\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 299
 testRunner.And("CustomerServiceDelete Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 300
 testRunner.When("I Post Invalid CustomerServiceDelete Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 301
 testRunner.Then("CustomerServiceCreate Response With \'ERR_NonExistingCustomer\' Should Be Returned", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void CustomerService_CreateInvalidCustomerName(string description, string customerName, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "CustomerService",
                    "US8587"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerService_CreateInvalidCustomerName", @__tags);
#line 305
this.ScenarioSetup(scenarioInfo);
#line 306
 testRunner.Given("CustomerService Is Ready To Verify \'CustomerService_CreateInvalidCustomerName_Emp" +
                    "ty\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 307
 testRunner.And("CustomerServiceCreate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 308
 testRunner.When(string.Format("I Set Invalid CustomerServiceCreate CustomerName To \'{0}\'", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 309
 testRunner.And("I Post Invalid CustomerServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 310
    testRunner.Then(string.Format("CustomerServiceCreate Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_CreateInvalidCustomerName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_CustomerNameInvalid")]
        public virtual void CustomerService_CreateInvalidCustomerName_NULL()
        {
            this.CustomerService_CreateInvalidCustomerName("NULL", "NULL_NULL", "ERR_CustomerNameInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_CreateInvalidCustomerName")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerName", "EMPTY_EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_CustomerNameInvalid")]
        public virtual void CustomerService_CreateInvalidCustomerName_EMPTY()
        {
            this.CustomerService_CreateInvalidCustomerName("EMPTY", "EMPTY_EMPTY", "ERR_CustomerNameInvalid", ((string[])(null)));
        }
        
        public virtual void CustomerService_CreateInvalidCustomerType(string description, string customerType, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "CustomerService",
                    "US8587"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerService_CreateInvalidCustomerType", @__tags);
#line 318
this.ScenarioSetup(scenarioInfo);
#line 319
 testRunner.Given("CustomerService Is Ready To Verify \'CustomerService_CreateInvalidCustomerType\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 320
 testRunner.And("CustomerServiceCreate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 321
 testRunner.When(string.Format("I Set Invalid CustomerServiceCreate CustomerType To \'{0}\'", customerType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 322
 testRunner.And("I Post Invalid CustomerServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 323
    testRunner.Then(string.Format("CustomerServiceCreate Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_CreateInvalidCustomerType")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "string")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "string")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerType", "abcd")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_CustomerTypeInvalid")]
        public virtual void CustomerService_CreateInvalidCustomerType_String()
        {
            this.CustomerService_CreateInvalidCustomerType("string", "abcd", "ERR_CustomerTypeInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_CreateInvalidCustomerType")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerType", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_CustomerTypeRequired")]
        public virtual void CustomerService_CreateInvalidCustomerType_NULL()
        {
            this.CustomerService_CreateInvalidCustomerType("NULL", "NULL_NULL", "ERR_CustomerTypeRequired", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_CreateInvalidCustomerType")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerType", "EMPTY_EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_CustomerTypeRequired")]
        public virtual void CustomerService_CreateInvalidCustomerType_EMPTY()
        {
            this.CustomerService_CreateInvalidCustomerType("EMPTY", "EMPTY_EMPTY", "ERR_CustomerTypeRequired", ((string[])(null)));
        }
        
        public virtual void CustomerService_CreateInvalidDealerNetwork(string description, string dealerNetwork, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "CustomerService",
                    "US8587"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerService_CreateInvalidDealerNetwork", @__tags);
#line 332
this.ScenarioSetup(scenarioInfo);
#line 333
 testRunner.Given("CustomerService Is Ready To Verify \'CustomerService_CreateInvalidDealerNetwork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 334
 testRunner.And("CustomerServiceCreate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 335
 testRunner.When(string.Format("I Set Invalid CustomerServiceCreate DealerNetwork To \'{0}\'", dealerNetwork), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 336
 testRunner.And("I Post Invalid CustomerServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 337
    testRunner.Then(string.Format("CustomerServiceCreate Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_CreateInvalidDealerNetwork")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DealerNetwork", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_DealerNetworkInvalid")]
        public virtual void CustomerService_CreateInvalidDealerNetwork_NULL()
        {
            this.CustomerService_CreateInvalidDealerNetwork("NULL", "NULL_NULL", "ERR_DealerNetworkInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_CreateInvalidDealerNetwork")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DealerNetwork", "EMPTY_EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_DealerNetworkInvalid")]
        public virtual void CustomerService_CreateInvalidDealerNetwork_EMPTY()
        {
            this.CustomerService_CreateInvalidDealerNetwork("EMPTY", "EMPTY_EMPTY", "ERR_DealerNetworkInvalid", ((string[])(null)));
        }
        
        public virtual void CustomerService_CreateInvalidCustomerUID(string description, string customerUID, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "CustomerService",
                    "US8587"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerService_CreateInvalidCustomerUID", @__tags);
#line 345
this.ScenarioSetup(scenarioInfo);
#line 346
 testRunner.Given(string.Format("CustomerService Is Ready To Verify \'{0}\'", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 347
 testRunner.And("CustomerServiceCreate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 348
 testRunner.When(string.Format("I Set Invalid CustomerServiceCreate CustomerUID To \'{0}\'", customerUID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 349
  testRunner.And("I Post Invalid CustomerServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 350
    testRunner.Then(string.Format("CustomerServiceCreate Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_CreateInvalidCustomerUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidLength")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidLength")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "c9ead99b-eea3-4605-92e2-1e6497b773")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_CustomerUIDInvalid")]
        public virtual void CustomerService_CreateInvalidCustomerUID_InvalidLength()
        {
            this.CustomerService_CreateInvalidCustomerUID("InvalidLength", "c9ead99b-eea3-4605-92e2-1e6497b773", "ERR_CustomerUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_CreateInvalidCustomerUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "c9ead99b-eea3 4605-92e2-1e6497b77369")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_CustomerUIDInvalid")]
        public virtual void CustomerService_CreateInvalidCustomerUID_ContainsSpace()
        {
            this.CustomerService_CreateInvalidCustomerUID("ContainsSpace", "c9ead99b-eea3 4605-92e2-1e6497b77369", "ERR_CustomerUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_CreateInvalidCustomerUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsUnderScore")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsUnderScore")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "9AB056CA_3514_E411_8AFE_24FD5231FB1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_CustomerUIDInvalid")]
        public virtual void CustomerService_CreateInvalidCustomerUID_ContainsUnderScore()
        {
            this.CustomerService_CreateInvalidCustomerUID("ContainsUnderScore", "9AB056CA_3514_E411_8AFE_24FD5231FB1F", "ERR_CustomerUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_CreateInvalidCustomerUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NotInGUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NotInGUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "9AB056CA3-514-E411-8AFE-24FD5231FB1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_CustomerUIDInvalid")]
        public virtual void CustomerService_CreateInvalidCustomerUID_NotInGUID()
        {
            this.CustomerService_CreateInvalidCustomerUID("NotInGUID", "9AB056CA3-514-E411-8AFE-24FD5231FB1F", "ERR_CustomerUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_CreateInvalidCustomerUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SplChar")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SplChar")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "9AB056CA3-514-E411-8AFE-24FD5231*B1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_CustomerUIDInvalid")]
        public virtual void CustomerService_CreateInvalidCustomerUID_SplChar()
        {
            this.CustomerService_CreateInvalidCustomerUID("SplChar", "9AB056CA3-514-E411-8AFE-24FD5231*B1F", "ERR_CustomerUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_CreateInvalidCustomerUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "EMPTY_EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_CustomerUIDInvalid")]
        public virtual void CustomerService_CreateInvalidCustomerUID_EMPTY()
        {
            this.CustomerService_CreateInvalidCustomerUID("EMPTY", "EMPTY_EMPTY", "ERR_CustomerUIDInvalid", ((string[])(null)));
        }
        
        public virtual void CustomerService_CreateInvalidActionUTC(string description, string actionUTC, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "CustomerService",
                    "US8587"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerService_CreateInvalidActionUTC", @__tags);
#line 362
this.ScenarioSetup(scenarioInfo);
#line 363
 testRunner.Given(string.Format("CustomerService Is Ready To Verify \'{0}\'", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 364
 testRunner.And("CustomerServiceCreate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 365
 testRunner.When(string.Format("I Set Invalid CustomerServiceCreate ActionUTC To \'{0}\'", actionUTC), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 366
  testRunner.And("I Post Invalid CustomerServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 367
    testRunner.Then(string.Format("CustomerServiceCreate Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_CreateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsColon")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsColon")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:09:28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void CustomerService_CreateInvalidActionUTC_ContainsColon()
        {
            this.CustomerService_CreateInvalidActionUTC("ContainsColon", "2015:09:28T07:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_CreateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsBackSlash")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsBackSlash")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015//09/28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void CustomerService_CreateInvalidActionUTC_ContainsBackSlash()
        {
            this.CustomerService_CreateInvalidActionUTC("ContainsBackSlash", "2015//09/28T07:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_CreateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidYear")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidYear")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "20155:09:28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void CustomerService_CreateInvalidActionUTC_InvalidYear()
        {
            this.CustomerService_CreateInvalidActionUTC("InvalidYear", "20155:09:28T07:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_CreateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidMonth")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidMonth")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:099:28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void CustomerService_CreateInvalidActionUTC_InvalidMonth()
        {
            this.CustomerService_CreateInvalidActionUTC("InvalidMonth", "2015:099:28T07:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_CreateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:09:288T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void CustomerService_CreateInvalidActionUTC_InvalidDate()
        {
            this.CustomerService_CreateInvalidActionUTC("InvalidDate", "2015:09:288T07:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_CreateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidHour")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidHour")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:09:28T070:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void CustomerService_CreateInvalidActionUTC_InvalidHour()
        {
            this.CustomerService_CreateInvalidActionUTC("InvalidHour", "2015:09:28T070:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_CreateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidMinutes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidMinutes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:09:288T07:144:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void CustomerService_CreateInvalidActionUTC_InvalidMinutes()
        {
            this.CustomerService_CreateInvalidActionUTC("InvalidMinutes", "2015:09:288T07:144:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_CreateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidSeconds")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidSeconds")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:09:288T07:14:499")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void CustomerService_CreateInvalidActionUTC_InvalidSeconds()
        {
            this.CustomerService_CreateInvalidActionUTC("InvalidSeconds", "2015:09:288T07:14:499", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_CreateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "EMPTY_EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void CustomerService_CreateInvalidActionUTC_EMPTY()
        {
            this.CustomerService_CreateInvalidActionUTC("EMPTY", "EMPTY_EMPTY", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        public virtual void CustomerService_UpdateInvalidCustomerUID(string description, string customerUID, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "CustomerService",
                    "US8587"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerService_UpdateInvalidCustomerUID", @__tags);
#line 382
this.ScenarioSetup(scenarioInfo);
#line 383
 testRunner.Given(string.Format("CustomerService Is Ready To Verify \'{0}\'", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 384
 testRunner.And("CustomerServiceUpdate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 385
 testRunner.When(string.Format("I Set Invalid CustomerServiceUpdate CustomerUID To \'{0}\'", customerUID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 386
  testRunner.And("I Post Invalid CustomerServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 387
    testRunner.Then(string.Format("CustomerServiceUpdate Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_UpdateInvalidCustomerUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidLength")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidLength")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "c9ead99b-eea3-4605-92e2-1e6497b773")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_CustomerUIDInvalid")]
        public virtual void CustomerService_UpdateInvalidCustomerUID_InvalidLength()
        {
            this.CustomerService_UpdateInvalidCustomerUID("InvalidLength", "c9ead99b-eea3-4605-92e2-1e6497b773", "ERR_CustomerUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_UpdateInvalidCustomerUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "c9ead99b-eea3 4605-92e2-1e6497b77369")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_CustomerUIDInvalid")]
        public virtual void CustomerService_UpdateInvalidCustomerUID_ContainsSpace()
        {
            this.CustomerService_UpdateInvalidCustomerUID("ContainsSpace", "c9ead99b-eea3 4605-92e2-1e6497b77369", "ERR_CustomerUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_UpdateInvalidCustomerUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsUnderScore")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsUnderScore")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "9AB056CA_3514_E411_8AFE_24FD5231FB1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_CustomerUIDInvalid")]
        public virtual void CustomerService_UpdateInvalidCustomerUID_ContainsUnderScore()
        {
            this.CustomerService_UpdateInvalidCustomerUID("ContainsUnderScore", "9AB056CA_3514_E411_8AFE_24FD5231FB1F", "ERR_CustomerUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_UpdateInvalidCustomerUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NotInGUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NotInGUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "9AB056CA3-514-E411-8AFE-24FD5231FB1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_CustomerUIDInvalid")]
        public virtual void CustomerService_UpdateInvalidCustomerUID_NotInGUID()
        {
            this.CustomerService_UpdateInvalidCustomerUID("NotInGUID", "9AB056CA3-514-E411-8AFE-24FD5231FB1F", "ERR_CustomerUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_UpdateInvalidCustomerUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SplChar")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SplChar")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "9AB056CA3-514-E411-8AFE-24FD5231*B1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_CustomerUIDInvalid")]
        public virtual void CustomerService_UpdateInvalidCustomerUID_SplChar()
        {
            this.CustomerService_UpdateInvalidCustomerUID("SplChar", "9AB056CA3-514-E411-8AFE-24FD5231*B1F", "ERR_CustomerUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_UpdateInvalidCustomerUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "EMPTY_EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_CustomerUIDInvalid")]
        public virtual void CustomerService_UpdateInvalidCustomerUID_EMPTY()
        {
            this.CustomerService_UpdateInvalidCustomerUID("EMPTY", "EMPTY_EMPTY", "ERR_CustomerUIDInvalid", ((string[])(null)));
        }
        
        public virtual void CustomerService_UpdateInvalidActionUTC(string description, string actionUTC, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "CustomerService",
                    "US8587"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerService_UpdateInvalidActionUTC", @__tags);
#line 399
this.ScenarioSetup(scenarioInfo);
#line 400
 testRunner.Given(string.Format("CustomerService Is Ready To Verify \'{0}\'", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 401
 testRunner.And("CustomerServiceUpdate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 402
 testRunner.When(string.Format("I Set Invalid CustomerServiceUpdate ActionUTC To \'{0}\'", actionUTC), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 403
  testRunner.And("I Post Invalid CustomerServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 404
    testRunner.Then(string.Format("CustomerServiceUpdate Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_UpdateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsColon")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsColon")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:09:28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void CustomerService_UpdateInvalidActionUTC_ContainsColon()
        {
            this.CustomerService_UpdateInvalidActionUTC("ContainsColon", "2015:09:28T07:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_UpdateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsBackSlash")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsBackSlash")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015//09/28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void CustomerService_UpdateInvalidActionUTC_ContainsBackSlash()
        {
            this.CustomerService_UpdateInvalidActionUTC("ContainsBackSlash", "2015//09/28T07:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_UpdateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidYear")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidYear")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "20155:09:28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void CustomerService_UpdateInvalidActionUTC_InvalidYear()
        {
            this.CustomerService_UpdateInvalidActionUTC("InvalidYear", "20155:09:28T07:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_UpdateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidMonth")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidMonth")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:099:28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void CustomerService_UpdateInvalidActionUTC_InvalidMonth()
        {
            this.CustomerService_UpdateInvalidActionUTC("InvalidMonth", "2015:099:28T07:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_UpdateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:09:288T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void CustomerService_UpdateInvalidActionUTC_InvalidDate()
        {
            this.CustomerService_UpdateInvalidActionUTC("InvalidDate", "2015:09:288T07:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_UpdateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidHour")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidHour")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:09:28T070:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void CustomerService_UpdateInvalidActionUTC_InvalidHour()
        {
            this.CustomerService_UpdateInvalidActionUTC("InvalidHour", "2015:09:28T070:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_UpdateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidMinutes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidMinutes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:09:288T07:144:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void CustomerService_UpdateInvalidActionUTC_InvalidMinutes()
        {
            this.CustomerService_UpdateInvalidActionUTC("InvalidMinutes", "2015:09:288T07:144:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_UpdateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidSeconds")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidSeconds")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:09:288T07:14:499")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void CustomerService_UpdateInvalidActionUTC_InvalidSeconds()
        {
            this.CustomerService_UpdateInvalidActionUTC("InvalidSeconds", "2015:09:288T07:14:499", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_UpdateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "EMPTY_EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void CustomerService_UpdateInvalidActionUTC_EMPTY()
        {
            this.CustomerService_UpdateInvalidActionUTC("EMPTY", "EMPTY_EMPTY", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_UpdateInvalidAllOptionalAttributes_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        public virtual void CustomerService_UpdateInvalidAllOptionalAttributes_Empty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerService_UpdateInvalidAllOptionalAttributes_Empty", new string[] {
                        "Automated",
                        "Regression",
                        "Negative",
                        "CustomerService",
                        "US8587"});
#line 419
this.ScenarioSetup(scenarioInfo);
#line 420
 testRunner.Given("CustomerService Is Ready To Verify \'CustomerService_UpdateInvalidAllOptionalAttri" +
                    "butes_Empty\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 421
 testRunner.And("CustomerServiceUpdate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 422
 testRunner.When("I Set Invalid CustomerServiceUpdate CustomerName To \'EMPTY_EMPTY\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 423
 testRunner.And("I Set Invalid CustomerServiceUpdate BSSID To \'EMPTY_EMPTY\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 424
 testRunner.And("I Set Invalid CustomerServiceUpdate DealerNetwork To \'EMPTY_EMPTY\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 425
 testRunner.And("I Set Invalid CustomerServiceUpdate NetworkDealerCode To \'EMPTY_EMPTY\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 426
 testRunner.And("I Set Invalid CustomerServiceUpdate NetworkCustomerCode To \'EMPTY_EMPTY\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 427
 testRunner.And("I Set Invalid CustomerServiceUpdate DealerAccountCode To \'EMPTY_EMPTY\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 428
 testRunner.And("I Set Invalid CustomerServiceUpdate PrimaryContactEmail To \'EMPTY_EMPTY\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 429
 testRunner.And("I Set Invalid CustomerServiceUpdate FirstName To \'EMPTY_EMPTY\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 430
 testRunner.And("I Set Invalid CustomerServiceUpdate LastName To \'EMPTY_EMPTY\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 431
 testRunner.And("I Post Invalid CustomerServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 432
    testRunner.Then("CustomerServiceUpdate Response With \'ERR_UpdateInvalid\' Should Be Returned", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void CustomerService_DeleteInvalidCustomerUID(string description, string customerUID, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "CustomerService",
                    "US8587"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerService_DeleteInvalidCustomerUID", @__tags);
#line 436
this.ScenarioSetup(scenarioInfo);
#line 437
 testRunner.Given(string.Format("CustomerService Is Ready To Verify \'{0}\'", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 438
 testRunner.And("CustomerServiceDelete Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 439
 testRunner.When(string.Format("I Set Invalid CustomerServiceDelete CustomerUID To \'{0}\'", customerUID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 440
  testRunner.And("I Post Invalid CustomerServiceDelete Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 441
    testRunner.Then(string.Format("CustomerServiceDelete Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_DeleteInvalidCustomerUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidLength")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidLength")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "c9ead99b-eea3-4605-92e2-1e6497b773")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_CustomerUIDInvalid")]
        public virtual void CustomerService_DeleteInvalidCustomerUID_InvalidLength()
        {
            this.CustomerService_DeleteInvalidCustomerUID("InvalidLength", "c9ead99b-eea3-4605-92e2-1e6497b773", "ERR_CustomerUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_DeleteInvalidCustomerUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "c9ead99b-eea3 4605-92e2-1e6497b77369")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_CustomerUIDInvalid")]
        public virtual void CustomerService_DeleteInvalidCustomerUID_ContainsSpace()
        {
            this.CustomerService_DeleteInvalidCustomerUID("ContainsSpace", "c9ead99b-eea3 4605-92e2-1e6497b77369", "ERR_CustomerUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_DeleteInvalidCustomerUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsUnderScore")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsUnderScore")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "9AB056CA_3514_E411_8AFE_24FD5231FB1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_CustomerUIDInvalid")]
        public virtual void CustomerService_DeleteInvalidCustomerUID_ContainsUnderScore()
        {
            this.CustomerService_DeleteInvalidCustomerUID("ContainsUnderScore", "9AB056CA_3514_E411_8AFE_24FD5231FB1F", "ERR_CustomerUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_DeleteInvalidCustomerUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NotInGUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NotInGUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "9AB056CA3-514-E411-8AFE-24FD5231FB1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_CustomerUIDInvalid")]
        public virtual void CustomerService_DeleteInvalidCustomerUID_NotInGUID()
        {
            this.CustomerService_DeleteInvalidCustomerUID("NotInGUID", "9AB056CA3-514-E411-8AFE-24FD5231FB1F", "ERR_CustomerUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_DeleteInvalidCustomerUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SplChar")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SplChar")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "9AB056CA3-514-E411-8AFE-24FD5231*B1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_CustomerUIDInvalid")]
        public virtual void CustomerService_DeleteInvalidCustomerUID_SplChar()
        {
            this.CustomerService_DeleteInvalidCustomerUID("SplChar", "9AB056CA3-514-E411-8AFE-24FD5231*B1F", "ERR_CustomerUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_DeleteInvalidCustomerUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "EMPTY_EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_CustomerUIDInvalid")]
        public virtual void CustomerService_DeleteInvalidCustomerUID_EMPTY()
        {
            this.CustomerService_DeleteInvalidCustomerUID("EMPTY", "EMPTY_EMPTY", "ERR_CustomerUIDInvalid", ((string[])(null)));
        }
        
        public virtual void CustomerService_DeleteInvalidActionUTC(string description, string actionUTC, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "CustomerService",
                    "US8587"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CustomerService_DeleteInvalidActionUTC", @__tags);
#line 453
this.ScenarioSetup(scenarioInfo);
#line 454
 testRunner.Given(string.Format("CustomerService Is Ready To Verify \'{0}\'", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 455
 testRunner.And("CustomerServiceDelete Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 456
 testRunner.When(string.Format("I Set Invalid CustomerServiceDelete ActionUTC To \'{0}\'", actionUTC), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 457
  testRunner.And("I Post Invalid CustomerServiceDelete Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 458
    testRunner.Then(string.Format("CustomerServiceDelete Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_DeleteInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsColon")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsColon")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:09:28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void CustomerService_DeleteInvalidActionUTC_ContainsColon()
        {
            this.CustomerService_DeleteInvalidActionUTC("ContainsColon", "2015:09:28T07:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_DeleteInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsBackSlash")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsBackSlash")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015//09/28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void CustomerService_DeleteInvalidActionUTC_ContainsBackSlash()
        {
            this.CustomerService_DeleteInvalidActionUTC("ContainsBackSlash", "2015//09/28T07:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_DeleteInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidYear")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidYear")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "20155:09:28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void CustomerService_DeleteInvalidActionUTC_InvalidYear()
        {
            this.CustomerService_DeleteInvalidActionUTC("InvalidYear", "20155:09:28T07:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_DeleteInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidMonth")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidMonth")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:099:28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void CustomerService_DeleteInvalidActionUTC_InvalidMonth()
        {
            this.CustomerService_DeleteInvalidActionUTC("InvalidMonth", "2015:099:28T07:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_DeleteInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:09:288T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void CustomerService_DeleteInvalidActionUTC_InvalidDate()
        {
            this.CustomerService_DeleteInvalidActionUTC("InvalidDate", "2015:09:288T07:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_DeleteInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidHour")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidHour")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:09:28T070:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void CustomerService_DeleteInvalidActionUTC_InvalidHour()
        {
            this.CustomerService_DeleteInvalidActionUTC("InvalidHour", "2015:09:28T070:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_DeleteInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidMinutes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidMinutes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:09:288T07:144:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void CustomerService_DeleteInvalidActionUTC_InvalidMinutes()
        {
            this.CustomerService_DeleteInvalidActionUTC("InvalidMinutes", "2015:09:288T07:144:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_DeleteInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidSeconds")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidSeconds")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:09:288T07:14:499")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void CustomerService_DeleteInvalidActionUTC_InvalidSeconds()
        {
            this.CustomerService_DeleteInvalidActionUTC("InvalidSeconds", "2015:09:288T07:14:499", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("CustomerService_DeleteInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CustomerService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8587")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "EMPTY_EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void CustomerService_DeleteInvalidActionUTC_EMPTY()
        {
            this.CustomerService_DeleteInvalidActionUTC("EMPTY", "EMPTY_EMPTY", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
    }
}
#pragma warning restore
#endregion
