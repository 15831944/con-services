//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace VSS.Hosted.VLCommon
{
    public partial class PMIntervalAsset
    {
        #region Primitive Properties
    
        public virtual long fk_AssetID
        {
            get;
            set;
        }
    
        public virtual long fk_PMIntervalID
        {
            get { return _fk_PMIntervalID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_fk_PMIntervalID != value)
                    {
                        if (CustomPMInterval != null && CustomPMInterval.ID != value)
                        {
                            CustomPMInterval = null;
                        }
                        _fk_PMIntervalID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private long _fk_PMIntervalID;
    
        public virtual Nullable<long> fk_DefaultPMIntervalID
        {
            get { return _fk_DefaultPMIntervalID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_fk_DefaultPMIntervalID != value)
                    {
                        if (DefaultPMInterval != null && DefaultPMInterval.ID != value)
                        {
                            DefaultPMInterval = null;
                        }
                        _fk_DefaultPMIntervalID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<long> _fk_DefaultPMIntervalID;

        #endregion

        #region Navigation Properties
    
        public virtual PMInterval DefaultPMInterval
        {
            get { return _defaultPMInterval; }
            set
            {
                if (!ReferenceEquals(_defaultPMInterval, value))
                {
                    var previousValue = _defaultPMInterval;
                    _defaultPMInterval = value;
                    FixupDefaultPMInterval(previousValue);
                }
            }
        }
        private PMInterval _defaultPMInterval;
    
        public virtual PMInterval CustomPMInterval
        {
            get { return _customPMInterval; }
            set
            {
                if (!ReferenceEquals(_customPMInterval, value))
                {
                    var previousValue = _customPMInterval;
                    _customPMInterval = value;
                    FixupCustomPMInterval(previousValue);
                }
            }
        }
        private PMInterval _customPMInterval;

        #endregion

        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupDefaultPMInterval(PMInterval previousValue)
        {
            if (previousValue != null && previousValue.DefaultPMIntervalAsset.Contains(this))
            {
                previousValue.DefaultPMIntervalAsset.Remove(this);
            }
    
            if (DefaultPMInterval != null)
            {
                if (!DefaultPMInterval.DefaultPMIntervalAsset.Contains(this))
                {
                    DefaultPMInterval.DefaultPMIntervalAsset.Add(this);
                }
                if (fk_DefaultPMIntervalID != DefaultPMInterval.ID)
                {
                    fk_DefaultPMIntervalID = DefaultPMInterval.ID;
                }
            }
            else if (!_settingFK)
            {
                fk_DefaultPMIntervalID = null;
            }
        }
    
        private void FixupCustomPMInterval(PMInterval previousValue)
        {
            if (previousValue != null && previousValue.CustomPMIntervalAsset.Contains(this))
            {
                previousValue.CustomPMIntervalAsset.Remove(this);
            }
    
            if (CustomPMInterval != null)
            {
                if (!CustomPMInterval.CustomPMIntervalAsset.Contains(this))
                {
                    CustomPMInterval.CustomPMIntervalAsset.Add(this);
                }
                if (fk_PMIntervalID != CustomPMInterval.ID)
                {
                    fk_PMIntervalID = CustomPMInterval.ID;
                }
            }
        }

        #endregion

    }
}
