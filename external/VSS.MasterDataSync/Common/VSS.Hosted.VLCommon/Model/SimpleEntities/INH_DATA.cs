//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// Architectural overview and usage guide: 
// http://blogofrab.blogspot.com/2010/08/maintenance-free-mocking-for-unit.html
//------------------------------------------------------------------------------
using System;
using System.Linq;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Objects;

namespace VSS.Hosted.VLCommon
{
    /// <summary>
    /// The interface for the specialised object context. This contains all of
    /// the <code>ObjectSet</code> properties that are implemented in both the
    /// functional context class and the mock context class.
    /// </summary>
    public interface INH_DATA : System.IDisposable
    {
        IObjectSet<AntiData> AntiData { get; }
        IObjectSet<AntiData> AntiDataReadOnly { get; }
        IObjectSet<DataEngineParameters> DataEngineParameters { get; }
        IObjectSet<DataEngineParameters> DataEngineParametersReadOnly { get; }
        IObjectSet<DataEngineStartStop> DataEngineStartStop { get; }
        IObjectSet<DataEngineStartStop> DataEngineStartStopReadOnly { get; }
        IObjectSet<DataFaultDiagnostic> DataFaultDiagnostic { get; }
        IObjectSet<DataFaultDiagnostic> DataFaultDiagnosticReadOnly { get; }
        IObjectSet<DataFaultEvent> DataFaultEvent { get; }
        IObjectSet<DataFaultEvent> DataFaultEventReadOnly { get; }
        IObjectSet<DataFenceAlarm> DataFenceAlarm { get; }
        IObjectSet<DataFenceAlarm> DataFenceAlarmReadOnly { get; }
        IObjectSet<DataHoursLocation> DataHoursLocation { get; }
        IObjectSet<DataHoursLocation> DataHoursLocationReadOnly { get; }
        IObjectSet<DataIgnOnOff> DataIgnOnOff { get; }
        IObjectSet<DataIgnOnOff> DataIgnOnOffReadOnly { get; }
        IObjectSet<DataMoving> DataMoving { get; }
        IObjectSet<DataMoving> DataMovingReadOnly { get; }
        IObjectSet<DataMSSKeyID> DataMSSKeyID { get; }
        IObjectSet<DataMSSKeyID> DataMSSKeyIDReadOnly { get; }
        IObjectSet<DataServiceMeterAdjustment> DataServiceMeterAdjustment { get; }
        IObjectSet<DataServiceMeterAdjustment> DataServiceMeterAdjustmentReadOnly { get; }
        IObjectSet<DataSiteState> DataSiteState { get; }
        IObjectSet<DataSiteState> DataSiteStateReadOnly { get; }
        IObjectSet<DataSpeeding> DataSpeeding { get; }
        IObjectSet<DataSpeeding> DataSpeedingReadOnly { get; }
        IObjectSet<DimSeverityLevel> DimSeverityLevel { get; }
        IObjectSet<DimSeverityLevel> DimSeverityLevelReadOnly { get; }
        IObjectSet<DimSource> DimSource { get; }
        IObjectSet<DimSource> DimSourceReadOnly { get; }
        IObjectSet<DimDatalink> DimDatalink { get; }
        IObjectSet<DimDatalink> DimDatalinkReadOnly { get; }
        IObjectSet<DataFluidAnalysis> DataFluidAnalysis { get; }
        IObjectSet<DataFluidAnalysis> DataFluidAnalysisReadOnly { get; }
        IObjectSet<DataPassThroughPortData> DataPassThroughPortDatas { get; }
        IObjectSet<DataPassThroughPortData> DataPassThroughPortDatasReadOnly { get; }
        IObjectSet<DataTamperSecurityStatus> DataTamperSecurityStatus { get; }
        IObjectSet<DataTamperSecurityStatus> DataTamperSecurityStatusReadOnly { get; }
        IObjectSet<DataRawCANMessage> DataRawCANMessage { get; }
        IObjectSet<DataRawCANMessage> DataRawCANMessageReadOnly { get; }
        IObjectSet<DimUnitType> DimUnitType { get; }
        IObjectSet<DimUnitType> DimUnitTypeReadOnly { get; }
        IObjectSet<DataParametersReport> DataParametersReport { get; }
        IObjectSet<DataParametersReport> DataParametersReportReadOnly { get; }
        IObjectSet<DataStatisticsReport> DataStatisticsReport { get; }
        IObjectSet<DataStatisticsReport> DataStatisticsReportReadOnly { get; }
        IObjectSet<DimEngineState> DimEngineState { get; }
        IObjectSet<DimEngineState> DimEngineStateReadOnly { get; }
        IObjectSet<DataGensetOperationalState> DataGensetOperationalState { get; }
        IObjectSet<DataGensetOperationalState> DataGensetOperationalStateReadOnly { get; }
        IObjectSet<DataProjectTagFileError> DataProjectTagFileError { get; }
        IObjectSet<DataProjectTagFileError> DataProjectTagFileErrorReadOnly { get; }
        IObjectSet<DataPowerState> DataPowerState { get; }
        IObjectSet<DataPowerState> DataPowerStateReadOnly { get; }
        IObjectSet<DataIdleTimeOut> DataIdleTimeOut { get; }
        IObjectSet<DataIdleTimeOut> DataIdleTimeOutReadOnly { get; }
        IObjectSet<SensorAspects> SensorAspects { get; }
        IObjectSet<SensorAspects> SensorAspectsReadOnly { get; }
        IObjectSet<SensorType> SensorType { get; }
        IObjectSet<SensorType> SensorTypeReadOnly { get; }
        IObjectSet<DataTirePressureMonitorSystem> DataTirePressureMonitorSystem { get; }
        IObjectSet<DataTirePressureMonitorSystem> DataTirePressureMonitorSystemReadOnly { get; }
        IObjectSet<DataCustomUtilizationEvent> DataCustomUtilizationEvent { get; }
        IObjectSet<DataCustomUtilizationEvent> DataCustomUtilizationEventReadOnly { get; }
        IObjectSet<DimCustomUtilizationEventType> DimCustomUtilizationEventType { get; }
        IObjectSet<DimCustomUtilizationEventType> DimCustomUtilizationEventTypeReadOnly { get; }
        IObjectSet<DataEngineTempSensorSample> DataEngineTempSensorSample { get; }
        IObjectSet<DataEngineTempSensorSample> DataEngineTempSensorSampleReadOnly { get; }
        IObjectSet<OEMDataSourceType> OEMDataSourceType { get; }
        IObjectSet<OEMDataSourceType> OEMDataSourceTypeReadOnly { get; }
        IObjectSet<DataCNHCANAlarmCode> DataCNHCANAlarmCode { get; }
        IObjectSet<DataCNHCANAlarmCode> DataCNHCANAlarmCodeReadOnly { get; }
        IObjectSet<DimCNHSeverityLevel> DimCNHSeverityLevel { get; }
        IObjectSet<DimCNHSeverityLevel> DimCNHSeverityLevelReadOnly { get; }
        IObjectSet<DataCatInspection> DataCatInspection { get; }
        IObjectSet<DataCatInspection> DataCatInspectionReadOnly { get; }
        IObjectSet<DataTirePressureMonitorInfo> DataTirePressureMonitorInfo { get; }
        IObjectSet<DataTirePressureMonitorInfo> DataTirePressureMonitorInfoReadOnly { get; }
        IObjectSet<DataTamperLevel> DataTamperLevel { get; }
        IObjectSet<DataTamperLevel> DataTamperLevelReadOnly { get; }
        IObjectSet<DataDeviceBatteryRemaining> DataDeviceBatteryRemaining { get; }
        IObjectSet<DataDeviceBatteryRemaining> DataDeviceBatteryRemainingReadOnly { get; }
        IObjectSet<DataSecurityPendingStartMode> DataSecurityPendingStartMode { get; }
        IObjectSet<DataSecurityPendingStartMode> DataSecurityPendingStartModeReadOnly { get; }
        IObjectSet<DataSwitchState> DataSwitchState { get; }
        IObjectSet<DataSwitchState> DataSwitchStateReadOnly { get; }
        IObjectSet<DataFeedDigitalSwitchStatus> DataFeedDigitalSwitchStatus { get; }
        IObjectSet<DataFeedDigitalSwitchStatus> DataFeedDigitalSwitchStatusReadOnly { get; }
        IObjectSet<DataEngineLubeOilTemperatureSensorSample> DataEngineLubeOilTemperatureSensorSample { get; }
        IObjectSet<DataEngineLubeOilTemperatureSensorSample> DataEngineLubeOilTemperatureSensorSampleReadOnly { get; }
        IObjectSet<DataEngineRPMSensorSample> DataEngineRPMSensorSample { get; }
        IObjectSet<DataEngineRPMSensorSample> DataEngineRPMSensorSampleReadOnly { get; }
        IObjectSet<DataHydraulicOilTemperatureSensorSample> DataHydraulicOilTemperatureSensorSample { get; }
        IObjectSet<DataHydraulicOilTemperatureSensorSample> DataHydraulicOilTemperatureSensorSampleReadOnly { get; }
        IObjectSet<DataEngineOilPressureSensorSample> DataEngineOilPressureSensorSample { get; }
        IObjectSet<DataEngineOilPressureSensorSample> DataEngineOilPressureSensorSampleReadOnly { get; }
        IObjectSet<CustomDataEngineParameters> CustomDataEngineParameters { get; }
        IObjectSet<CustomDataEngineParameters> CustomDataEngineParametersReadOnly { get; }
        IObjectSet<DimFuelTankCapacity> DimFuelTankCapacity { get; }
        IObjectSet<DimFuelTankCapacity> DimFuelTankCapacityReadOnly { get; }
        IObjectSet<DataBatteryChargingVoltage> DataBatteryChargingVoltage { get; }
        IObjectSet<DataBatteryChargingVoltage> DataBatteryChargingVoltageReadOnly { get; }
        IObjectSet<DataTamperState> DataTamperState { get; }
        IObjectSet<DataTamperState> DataTamperStateReadOnly { get; }
        IObjectSet<DataRemoteSecurityState> DataRemoteSecurityState { get; }
        IObjectSet<DataRemoteSecurityState> DataRemoteSecurityStateReadOnly { get; }
        IObjectSet<DataBoostPressure> DataBoostPressure { get; }
        IObjectSet<DataBoostPressure> DataBoostPressureReadOnly { get; }
        IObjectSet<DataBoostTemperature> DataBoostTemperature { get; }
        IObjectSet<DataBoostTemperature> DataBoostTemperatureReadOnly { get; }
        IObjectSet<DataEngineOilLevel> DataEngineOilLevel { get; }
        IObjectSet<DataEngineOilLevel> DataEngineOilLevelReadOnly { get; }
        IObjectSet<DataTransmissionOilTemperatureSensorSample> DataTransmissionOilTemperatureSensorSample { get; }
        IObjectSet<DataTransmissionOilTemperatureSensorSample> DataTransmissionOilTemperatureSensorSampleReadOnly { get; }
        IObjectSet<DataPowerMode> DataPowerMode { get; }
        IObjectSet<DataPowerMode> DataPowerModeReadOnly { get; }
        IObjectSet<DimPowerMode> DimPowerMode { get; }
        IObjectSet<DimPowerMode> DimPowerModeReadOnly { get; }
        IObjectSet<ExternalCustomerKeyType> ExternalCustomerKeyType { get; }
        IObjectSet<ExternalCustomerKeyType> ExternalCustomerKeyTypeReadOnly { get; }
        IObjectSet<DataOperator> DataOperator { get; }
        IObjectSet<DataOperator> DataOperatorReadOnly { get; }
        IObjectSet<DataDieselExhaustFluid> DataDieselExhaustFluid { get; }
        IObjectSet<DataDieselExhaustFluid> DataDieselExhaustFluidReadOnly { get; }
      System.Data.Common.DbConnection Connection { get; }
    	int SaveChanges();
    }
}
