//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace VSS.Hosted.VLCommon
{
    public partial class AssetExpectedRuntimeHoursProjected
    {
        #region Primitive Properties
    
        public virtual long fk_AssetID
        {
            get { return _fk_AssetID; }
            set
            {
                if (_fk_AssetID != value)
                {
                    if (Asset != null && Asset.AssetID != value)
                    {
                        Asset = null;
                    }
                    _fk_AssetID = value;
                }
            }
        }
        private long _fk_AssetID;
    
        public virtual double HoursSun
        {
            get;
            set;
        }
    
        public virtual double HoursMon
        {
            get;
            set;
        }
    
        public virtual double HoursTue
        {
            get;
            set;
        }
    
        public virtual double HoursWed
        {
            get;
            set;
        }
    
        public virtual double HoursThu
        {
            get;
            set;
        }
    
        public virtual double HoursFri
        {
            get;
            set;
        }
    
        public virtual double HoursSat
        {
            get;
            set;
        }
    
        public virtual System.DateTime UpdateUTC
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual Asset Asset
        {
            get { return _asset; }
            set
            {
                if (!ReferenceEquals(_asset, value))
                {
                    var previousValue = _asset;
                    _asset = value;
                    FixupAsset(previousValue);
                }
            }
        }
        private Asset _asset;

        #endregion

        #region Association Fixup
    
        private void FixupAsset(Asset previousValue)
        {
            if (previousValue != null && ReferenceEquals(previousValue.AssetExpectedRuntimeHoursProjected, this))
            {
                previousValue.AssetExpectedRuntimeHoursProjected = null;
            }
    
            if (Asset != null)
            {
                Asset.AssetExpectedRuntimeHoursProjected = this;
                if (fk_AssetID != Asset.AssetID)
                {
                    fk_AssetID = Asset.AssetID;
                }
            }
        }

        #endregion

    }
}
