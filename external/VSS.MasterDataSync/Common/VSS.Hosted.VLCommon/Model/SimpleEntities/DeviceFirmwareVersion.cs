//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace VSS.Hosted.VLCommon
{
    public partial class DeviceFirmwareVersion
    {
        #region Primitive Properties
    
        public virtual long ID
        {
            get;
            set;
        }
    
        public virtual long fk_DeviceID
        {
            get;
            set;
        }
    
        public virtual int fk_FirmwareUpdateStatusID
        {
            get;
            set;
        }
    
        public virtual long fk_MTS500FirmwareVersionIDPending
        {
            get { return _fk_MTS500FirmwareVersionIDPending; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_fk_MTS500FirmwareVersionIDPending != value)
                    {
                        if (MTS500FirmwareVersionPending != null && MTS500FirmwareVersionPending.ID != value)
                        {
                            MTS500FirmwareVersionPending = null;
                        }
                        _fk_MTS500FirmwareVersionIDPending = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private long _fk_MTS500FirmwareVersionIDPending;
    
        public virtual Nullable<long> fk_MTS500FirmwareVersionIDInstalled
        {
            get { return _fk_MTS500FirmwareVersionIDInstalled; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_fk_MTS500FirmwareVersionIDInstalled != value)
                    {
                        if (MTS500FirmwareVersionInstalled != null && MTS500FirmwareVersionInstalled.ID != value)
                        {
                            MTS500FirmwareVersionInstalled = null;
                        }
                        _fk_MTS500FirmwareVersionIDInstalled = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<long> _fk_MTS500FirmwareVersionIDInstalled;
    
        public virtual string CurrentFirmwareReport
        {
            get;
            set;
        }
    
        public virtual System.DateTime UpdateStatusUTC
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual MTS500FirmwareVersion MTS500FirmwareVersionInstalled
        {
            get { return _mTS500FirmwareVersionInstalled; }
            set
            {
                if (!ReferenceEquals(_mTS500FirmwareVersionInstalled, value))
                {
                    var previousValue = _mTS500FirmwareVersionInstalled;
                    _mTS500FirmwareVersionInstalled = value;
                    FixupMTS500FirmwareVersionInstalled(previousValue);
                }
            }
        }
        private MTS500FirmwareVersion _mTS500FirmwareVersionInstalled;
    
        public virtual MTS500FirmwareVersion MTS500FirmwareVersionPending
        {
            get { return _mTS500FirmwareVersionPending; }
            set
            {
                if (!ReferenceEquals(_mTS500FirmwareVersionPending, value))
                {
                    var previousValue = _mTS500FirmwareVersionPending;
                    _mTS500FirmwareVersionPending = value;
                    FixupMTS500FirmwareVersionPending(previousValue);
                }
            }
        }
        private MTS500FirmwareVersion _mTS500FirmwareVersionPending;

        #endregion

        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupMTS500FirmwareVersionInstalled(MTS500FirmwareVersion previousValue)
        {
            if (previousValue != null && previousValue.DeviceFirmwareVersionInstalled.Contains(this))
            {
                previousValue.DeviceFirmwareVersionInstalled.Remove(this);
            }
    
            if (MTS500FirmwareVersionInstalled != null)
            {
                if (!MTS500FirmwareVersionInstalled.DeviceFirmwareVersionInstalled.Contains(this))
                {
                    MTS500FirmwareVersionInstalled.DeviceFirmwareVersionInstalled.Add(this);
                }
                if (fk_MTS500FirmwareVersionIDInstalled != MTS500FirmwareVersionInstalled.ID)
                {
                    fk_MTS500FirmwareVersionIDInstalled = MTS500FirmwareVersionInstalled.ID;
                }
            }
            else if (!_settingFK)
            {
                fk_MTS500FirmwareVersionIDInstalled = null;
            }
        }
    
        private void FixupMTS500FirmwareVersionPending(MTS500FirmwareVersion previousValue)
        {
            if (previousValue != null && previousValue.DeviceFirmwareVersionPending.Contains(this))
            {
                previousValue.DeviceFirmwareVersionPending.Remove(this);
            }
    
            if (MTS500FirmwareVersionPending != null)
            {
                if (!MTS500FirmwareVersionPending.DeviceFirmwareVersionPending.Contains(this))
                {
                    MTS500FirmwareVersionPending.DeviceFirmwareVersionPending.Add(this);
                }
                if (fk_MTS500FirmwareVersionIDPending != MTS500FirmwareVersionPending.ID)
                {
                    fk_MTS500FirmwareVersionIDPending = MTS500FirmwareVersionPending.ID;
                }
            }
        }

        #endregion

    }
}
