<#@ template language="C#" debug="false" hostspecific="true"#>
<#@ include file="EnumCommon.tt"#>
<#@ output extension=".cs"#>
<#
string inputFile = @"..\NHRawModel.edmx";
string dbName = "NH_RAW";
var enumTypes = new[] { 
        new {ValueField="ID", NameField="Name", TypeName="UnitType"},
  }; 
#>
<#
EntityFrameworkTemplateFileManager fileManager = EntityFrameworkTemplateFileManager.Create(this);
EdmItemCollection itemCollection =  new MetadataLoader(this).CreateEdmItemCollection(inputFile);
EntityContainer container = (from containers in itemCollection.GetItems<EntityContainer>() where containers.Name == dbName select containers).FirstOrDefault();
if (container == null)
{
  return "// No EntityContainer exists in the model, so no code was generated";
}
WriteHeader(fileManager);
WriteNamespace();
BeginScope();
CodeGenerationTools code = new CodeGenerationTools(this);
foreach (EntityType entity in itemCollection.GetItems<EntityType>().OrderBy(e => e.Name))
{
  var enumInfo = (from types in enumTypes where types.TypeName == entity.Name select types).SingleOrDefault();
	if ( enumInfo == null )
	  continue;

   // fileManager.StartNewFile(entity.Name + "Enum.cs");
	#>
<#=Accessibility.ForType(entity)#> enum <#=code.Escape(entity)#>Enum
<#
  BeginScope();
  string enumTokenLine=WriteEnum(container.Name, entity, enumInfo.ValueField, enumInfo.NameField);
#>
<#=enumTokenLine #>
<#
  EndScope();
}
EndScope();
fileManager.Process();
#>