//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VSS.Nighthawk.NHOPSvc.ConfigStatus {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "11.0.0.0")]
    internal sealed partial class ConfigStatusSettings : global::System.Configuration.ApplicationSettingsBase {
        
        private static ConfigStatusSettings defaultInstance = ((ConfigStatusSettings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new ConfigStatusSettings())));
        
        public static ConfigStatusSettings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("00:15:00")]
        public global::System.TimeSpan DailyReportRunTimeout {
            get {
                return ((global::System.TimeSpan)(this["DailyReportRunTimeout"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("02:00:00")]
        public global::System.TimeSpan AllowableTimeBeforeDailyReportUpdate {
            get {
                return ((global::System.TimeSpan)(this["AllowableTimeBeforeDailyReportUpdate"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("23:00:00")]
        public global::System.TimeSpan DefaultDailyReportUTCTime {
            get {
                return ((global::System.TimeSpan)(this["DefaultDailyReportUTCTime"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("10.00:00:00")]
        public global::System.TimeSpan NextDailyReportCheck {
            get {
                return ((global::System.TimeSpan)(this["NextDailyReportCheck"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("00:00:01")]
        public global::System.TimeSpan GetDataIntervalTimeout {
            get {
                return ((global::System.TimeSpan)(this["GetDataIntervalTimeout"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("MTSConfigPending")]
        public string MTSConfigPending {
            get {
                return ((string)(this["MTSConfigPending"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("MTSConfigAck")]
        public string MTSConfigAck {
            get {
                return ((string)(this["MTSConfigAck"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("MTSConfigOther")]
        public string MTSConfigOther {
            get {
                return ((string)(this["MTSConfigOther"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("MTSConfigFirmware")]
        public string MTSConfigFirmware {
            get {
                return ((string)(this["MTSConfigFirmware"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("00:05:00")]
        public global::System.TimeSpan ProcessStuckInterval {
            get {
                return ((global::System.TimeSpan)(this["ProcessStuckInterval"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("10000")]
        public int MaxNumberToTake {
            get {
                return ((int)(this["MaxNumberToTake"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1.00:00:00")]
        public global::System.TimeSpan ConfigStalePendingCleanupTimeout {
            get {
                return ((global::System.TimeSpan)(this["ConfigStalePendingCleanupTimeout"]));
            }
        }
    }
}
