//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace VSS.Hosted.VLCommon
{
    public partial class Customer
    {
        #region Primitive Properties
    
        public virtual long ID
        {
            get;
            set;
        }
    
        public virtual string Name
        {
            get;
            set;
        }
    
        public virtual System.DateTime UpdateUTC
        {
            get;
            set;
        }
    
        public virtual int fk_CustomerTypeID
        {
            get;
            set;
        }
    
        public virtual string BSSID
        {
            get;
            set;
        }
    
        public virtual int fk_DealerNetworkID
        {
            get;
            set;
        }
    
        public virtual string NetworkDealerCode
        {
            get;
            set;
        }
    
        public virtual string NetworkCustomerCode
        {
            get;
            set;
        }
    
        public virtual string DealerAccountCode
        {
            get;
            set;
        }
    
        public virtual bool IsActivated
        {
            get;
            set;
        }
    
        public virtual Nullable<System.Guid> CustomerUID
        {
            get;
            set;
        }
    
        public virtual string MapAPIProvider
        {
            get;
            set;
        }
    
        public virtual string TCCOrgID
        {
            get;
            set;
        }
    
        public virtual string TCCOrgId
        {
            get;
            set;
        }
    
        public virtual string PrimaryEmailContact
        {
            get;
            set;
        }
    
        public virtual string FirstName
        {
            get;
            set;
        }
    
        public virtual string LastName
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual ICollection<UnifyCustomerToken> UnifyCustomerToken
        {
            get
            {
                if (_unifyCustomerToken == null)
                {
                    var newCollection = new FixupCollection<UnifyCustomerToken>();
                    newCollection.CollectionChanged += FixupUnifyCustomerToken;
                    _unifyCustomerToken = newCollection;
                }
                return _unifyCustomerToken;
            }
            set
            {
                if (!ReferenceEquals(_unifyCustomerToken, value))
                {
                    var previousValue = _unifyCustomerToken as FixupCollection<UnifyCustomerToken>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupUnifyCustomerToken;
                    }
                    _unifyCustomerToken = value;
                    var newValue = value as FixupCollection<UnifyCustomerToken>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupUnifyCustomerToken;
                    }
                }
            }
        }
        private ICollection<UnifyCustomerToken> _unifyCustomerToken;
    
        public virtual ICollection<CustomerRelationshipAudit> CustomerRelationshipAudit
        {
            get
            {
                if (_customerRelationshipAudit == null)
                {
                    var newCollection = new FixupCollection<CustomerRelationshipAudit>();
                    newCollection.CollectionChanged += FixupCustomerRelationshipAudit;
                    _customerRelationshipAudit = newCollection;
                }
                return _customerRelationshipAudit;
            }
            set
            {
                if (!ReferenceEquals(_customerRelationshipAudit, value))
                {
                    var previousValue = _customerRelationshipAudit as FixupCollection<CustomerRelationshipAudit>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCustomerRelationshipAudit;
                    }
                    _customerRelationshipAudit = value;
                    var newValue = value as FixupCollection<CustomerRelationshipAudit>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCustomerRelationshipAudit;
                    }
                }
            }
        }
        private ICollection<CustomerRelationshipAudit> _customerRelationshipAudit;
    
        public virtual ICollection<CustomerRelationshipAudit> CustomerRelationshipAudit1
        {
            get
            {
                if (_customerRelationshipAudit1 == null)
                {
                    var newCollection = new FixupCollection<CustomerRelationshipAudit>();
                    newCollection.CollectionChanged += FixupCustomerRelationshipAudit1;
                    _customerRelationshipAudit1 = newCollection;
                }
                return _customerRelationshipAudit1;
            }
            set
            {
                if (!ReferenceEquals(_customerRelationshipAudit1, value))
                {
                    var previousValue = _customerRelationshipAudit1 as FixupCollection<CustomerRelationshipAudit>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCustomerRelationshipAudit1;
                    }
                    _customerRelationshipAudit1 = value;
                    var newValue = value as FixupCollection<CustomerRelationshipAudit>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCustomerRelationshipAudit1;
                    }
                }
            }
        }
        private ICollection<CustomerRelationshipAudit> _customerRelationshipAudit1;

        #endregion

        #region Association Fixup
    
        private void FixupUnifyCustomerToken(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (UnifyCustomerToken item in e.NewItems)
                {
                    item.Customer = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (UnifyCustomerToken item in e.OldItems)
                {
                    if (ReferenceEquals(item.Customer, this))
                    {
                        item.Customer = null;
                    }
                }
            }
        }
    
        private void FixupCustomerRelationshipAudit(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (CustomerRelationshipAudit item in e.NewItems)
                {
                    item.Customer = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CustomerRelationshipAudit item in e.OldItems)
                {
                    if (ReferenceEquals(item.Customer, this))
                    {
                        item.Customer = null;
                    }
                }
            }
        }
    
        private void FixupCustomerRelationshipAudit1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (CustomerRelationshipAudit item in e.NewItems)
                {
                    item.Customer1 = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CustomerRelationshipAudit item in e.OldItems)
                {
                    if (ReferenceEquals(item.Customer1, this))
                    {
                        item.Customer1 = null;
                    }
                }
            }
        }

        #endregion

    }
}
