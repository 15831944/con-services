//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace VSS.Hosted.VLCommon
{
    public partial class MTS500FirmwareVersion
    {
        #region Primitive Properties
    
        public virtual long ID
        {
            get;
            set;
        }
    
        public virtual long fk_ServiceProviderID
        {
            get;
            set;
        }
    
        public virtual string Name
        {
            get;
            set;
        }
    
        public virtual string SourceFolder
        {
            get;
            set;
        }
    
        public virtual bool IsActive
        {
            get;
            set;
        }
    
        public virtual string Notes
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual ICollection<DeviceFirmwareVersion> DeviceFirmwareVersionInstalled
        {
            get
            {
                if (_deviceFirmwareVersionInstalled == null)
                {
                    var newCollection = new FixupCollection<DeviceFirmwareVersion>();
                    newCollection.CollectionChanged += FixupDeviceFirmwareVersionInstalled;
                    _deviceFirmwareVersionInstalled = newCollection;
                }
                return _deviceFirmwareVersionInstalled;
            }
            set
            {
                if (!ReferenceEquals(_deviceFirmwareVersionInstalled, value))
                {
                    var previousValue = _deviceFirmwareVersionInstalled as FixupCollection<DeviceFirmwareVersion>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupDeviceFirmwareVersionInstalled;
                    }
                    _deviceFirmwareVersionInstalled = value;
                    var newValue = value as FixupCollection<DeviceFirmwareVersion>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupDeviceFirmwareVersionInstalled;
                    }
                }
            }
        }
        private ICollection<DeviceFirmwareVersion> _deviceFirmwareVersionInstalled;
    
        public virtual ICollection<DeviceFirmwareVersion> DeviceFirmwareVersionPending
        {
            get
            {
                if (_deviceFirmwareVersionPending == null)
                {
                    var newCollection = new FixupCollection<DeviceFirmwareVersion>();
                    newCollection.CollectionChanged += FixupDeviceFirmwareVersionPending;
                    _deviceFirmwareVersionPending = newCollection;
                }
                return _deviceFirmwareVersionPending;
            }
            set
            {
                if (!ReferenceEquals(_deviceFirmwareVersionPending, value))
                {
                    var previousValue = _deviceFirmwareVersionPending as FixupCollection<DeviceFirmwareVersion>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupDeviceFirmwareVersionPending;
                    }
                    _deviceFirmwareVersionPending = value;
                    var newValue = value as FixupCollection<DeviceFirmwareVersion>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupDeviceFirmwareVersionPending;
                    }
                }
            }
        }
        private ICollection<DeviceFirmwareVersion> _deviceFirmwareVersionPending;

        #endregion

        #region Association Fixup
    
        private void FixupDeviceFirmwareVersionInstalled(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (DeviceFirmwareVersion item in e.NewItems)
                {
                    item.MTS500FirmwareVersionInstalled = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (DeviceFirmwareVersion item in e.OldItems)
                {
                    if (ReferenceEquals(item.MTS500FirmwareVersionInstalled, this))
                    {
                        item.MTS500FirmwareVersionInstalled = null;
                    }
                }
            }
        }
    
        private void FixupDeviceFirmwareVersionPending(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (DeviceFirmwareVersion item in e.NewItems)
                {
                    item.MTS500FirmwareVersionPending = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (DeviceFirmwareVersion item in e.OldItems)
                {
                    if (ReferenceEquals(item.MTS500FirmwareVersionPending, this))
                    {
                        item.MTS500FirmwareVersionPending = null;
                    }
                }
            }
        }

        #endregion

    }
}
