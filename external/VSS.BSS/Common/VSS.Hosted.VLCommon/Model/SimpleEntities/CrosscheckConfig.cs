//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace VSS.Hosted.VLCommon
{
    public partial class CrosscheckConfig
    {
        #region Primitive Properties
    
        public virtual long ID
        {
            get;
            set;
        }
    
        public virtual long fk_DeviceID
        {
            get { return _fk_DeviceID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_fk_DeviceID != value)
                    {
                        if (Device != null && Device.ID != value)
                        {
                            Device = null;
                        }
                        _fk_DeviceID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private long _fk_DeviceID;
    
        public virtual int fk_ConfigTypeID
        {
            get;
            set;
        }
    
        public virtual int Status
        {
            get;
            set;
        }
    
        public virtual long MessageSequence
        {
            get;
            set;
        }
    
        public virtual Nullable<long> RuntimeOrDuration
        {
            get;
            set;
        }
    
        public virtual Nullable<double> MileageOrSpeed
        {
            get;
            set;
        }
    
        public virtual Nullable<bool> Enabled
        {
            get;
            set;
        }
    
        public virtual Nullable<byte> HomeSiteEntrySpeed
        {
            get;
            set;
        }
    
        public virtual Nullable<byte> HomeSiteExitSpeed
        {
            get;
            set;
        }
    
        public virtual Nullable<byte> HomeSiteHysteresisSeconds
        {
            get;
            set;
        }
    
        public virtual Nullable<bool> IsConstruction
        {
            get;
            set;
        }
    
        public virtual Nullable<int> DeviceShutdownDelaySeconds
        {
            get;
            set;
        }
    
        public virtual Nullable<int> MDTShutdownDelaySeconds
        {
            get;
            set;
        }
    
        public virtual Nullable<bool> AlwaysOnDevice
        {
            get;
            set;
        }
    
        public virtual string PrimaryIPAddress
        {
            get;
            set;
        }
    
        public virtual Nullable<int> MovingRadius
        {
            get;
            set;
        }
    
        public virtual Nullable<int> HomeSiteRadius
        {
            get;
            set;
        }
    
        public virtual Nullable<byte> DurationThresholdSeconds
        {
            get;
            set;
        }
    
        public virtual Nullable<long> fk_SiteID
        {
            get { return _fk_SiteID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_fk_SiteID != value)
                    {
                        if (Site != null && Site.ID != value)
                        {
                            Site = null;
                        }
                        _fk_SiteID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<long> _fk_SiteID;
    
        public virtual System.DateTime UpdateUTC
        {
            get;
            set;
        }
    
        public virtual string PortNumberDescription
        {
            get;
            set;
        }
    
        public virtual string ServiceTypeDescription
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual Device Device
        {
            get { return _device; }
            set
            {
                if (!ReferenceEquals(_device, value))
                {
                    var previousValue = _device;
                    _device = value;
                    FixupDevice(previousValue);
                }
            }
        }
        private Device _device;
    
        public virtual Site Site
        {
            get { return _site; }
            set
            {
                if (!ReferenceEquals(_site, value))
                {
                    var previousValue = _site;
                    _site = value;
                    FixupSite(previousValue);
                }
            }
        }
        private Site _site;

        #endregion

        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupDevice(Device previousValue)
        {
            if (previousValue != null && previousValue.CrosscheckConfig.Contains(this))
            {
                previousValue.CrosscheckConfig.Remove(this);
            }
    
            if (Device != null)
            {
                if (!Device.CrosscheckConfig.Contains(this))
                {
                    Device.CrosscheckConfig.Add(this);
                }
                if (fk_DeviceID != Device.ID)
                {
                    fk_DeviceID = Device.ID;
                }
            }
        }
    
        private void FixupSite(Site previousValue)
        {
            if (Site != null)
            {
                if (fk_SiteID != Site.ID)
                {
                    fk_SiteID = Site.ID;
                }
            }
            else if (!_settingFK)
            {
                fk_SiteID = null;
            }
        }

        #endregion

    }
}
