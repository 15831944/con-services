//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace VSS.Hosted.VLCommon
{
    public partial class PMInterval
    {
        #region Primitive Properties
    
        public virtual long ID
        {
            get;
            set;
        }
    
        public virtual string Description
        {
            get;
            set;
        }
    
        public virtual int ifk_PMTrackingTypeID
        {
            get;
            set;
        }
    
        public virtual Nullable<long> ExternalID
        {
            get;
            set;
        }
    
        public virtual double TrackingValueHoursFirst
        {
            get;
            set;
        }
    
        public virtual double TrackingValueHoursNext
        {
            get;
            set;
        }
    
        public virtual bool IsCustom
        {
            get;
            set;
        }
    
        public virtual bool IsDeleted
        {
            get;
            set;
        }
    
        public virtual System.DateTime UpdateUTC
        {
            get;
            set;
        }
    
        public virtual bool IsMetric
        {
            get;
            set;
        }
    
        public virtual string Title
        {
            get;
            set;
        }
    
        public virtual bool IsCumulative
        {
            get;
            set;
        }
    
        public virtual short Rank
        {
            get;
            set;
        }
    
        public virtual double TrackingValueMilesFirst
        {
            get;
            set;
        }
    
        public virtual double TrackingValueMilesNext
        {
            get;
            set;
        }
    
        public virtual long fk_PMSalesModelID
        {
            get { return _fk_PMSalesModelID; }
            set
            {
                if (_fk_PMSalesModelID != value)
                {
                    if (PMSalesModel != null && PMSalesModel.ID != value)
                    {
                        PMSalesModel = null;
                    }
                    _fk_PMSalesModelID = value;
                }
            }
        }
        private long _fk_PMSalesModelID;
    
        public virtual string CompCode
        {
            get;
            set;
        }
    
        public virtual Nullable<short> JobCode
        {
            get;
            set;
        }
    
        public virtual string QuantityCode
        {
            get;
            set;
        }
    
        public virtual bool IsMajorComponent
        {
            get;
            set;
        }
    
        public virtual bool IsTrackingEnabled
        {
            get;
            set;
        }
    
        public virtual string ModCode
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual ICollection<PMCompletedService> PMCompletedService
        {
            get
            {
                if (_pMCompletedService == null)
                {
                    var newCollection = new FixupCollection<PMCompletedService>();
                    newCollection.CollectionChanged += FixupPMCompletedService;
                    _pMCompletedService = newCollection;
                }
                return _pMCompletedService;
            }
            set
            {
                if (!ReferenceEquals(_pMCompletedService, value))
                {
                    var previousValue = _pMCompletedService as FixupCollection<PMCompletedService>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupPMCompletedService;
                    }
                    _pMCompletedService = value;
                    var newValue = value as FixupCollection<PMCompletedService>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupPMCompletedService;
                    }
                }
            }
        }
        private ICollection<PMCompletedService> _pMCompletedService;
    
        public virtual ICollection<PMIntervalAsset> DefaultPMIntervalAsset
        {
            get
            {
                if (_defaultPMIntervalAsset == null)
                {
                    var newCollection = new FixupCollection<PMIntervalAsset>();
                    newCollection.CollectionChanged += FixupDefaultPMIntervalAsset;
                    _defaultPMIntervalAsset = newCollection;
                }
                return _defaultPMIntervalAsset;
            }
            set
            {
                if (!ReferenceEquals(_defaultPMIntervalAsset, value))
                {
                    var previousValue = _defaultPMIntervalAsset as FixupCollection<PMIntervalAsset>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupDefaultPMIntervalAsset;
                    }
                    _defaultPMIntervalAsset = value;
                    var newValue = value as FixupCollection<PMIntervalAsset>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupDefaultPMIntervalAsset;
                    }
                }
            }
        }
        private ICollection<PMIntervalAsset> _defaultPMIntervalAsset;
    
        public virtual ICollection<PMIntervalAsset> CustomPMIntervalAsset
        {
            get
            {
                if (_customPMIntervalAsset == null)
                {
                    var newCollection = new FixupCollection<PMIntervalAsset>();
                    newCollection.CollectionChanged += FixupCustomPMIntervalAsset;
                    _customPMIntervalAsset = newCollection;
                }
                return _customPMIntervalAsset;
            }
            set
            {
                if (!ReferenceEquals(_customPMIntervalAsset, value))
                {
                    var previousValue = _customPMIntervalAsset as FixupCollection<PMIntervalAsset>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCustomPMIntervalAsset;
                    }
                    _customPMIntervalAsset = value;
                    var newValue = value as FixupCollection<PMIntervalAsset>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCustomPMIntervalAsset;
                    }
                }
            }
        }
        private ICollection<PMIntervalAsset> _customPMIntervalAsset;
    
        public virtual PMSalesModel PMSalesModel
        {
            get { return _pMSalesModel; }
            set
            {
                if (!ReferenceEquals(_pMSalesModel, value))
                {
                    var previousValue = _pMSalesModel;
                    _pMSalesModel = value;
                    FixupPMSalesModel(previousValue);
                }
            }
        }
        private PMSalesModel _pMSalesModel;

        #endregion

        #region Association Fixup
    
        private void FixupPMSalesModel(PMSalesModel previousValue)
        {
            if (previousValue != null && previousValue.PMInterval.Contains(this))
            {
                previousValue.PMInterval.Remove(this);
            }
    
            if (PMSalesModel != null)
            {
                if (!PMSalesModel.PMInterval.Contains(this))
                {
                    PMSalesModel.PMInterval.Add(this);
                }
                if (fk_PMSalesModelID != PMSalesModel.ID)
                {
                    fk_PMSalesModelID = PMSalesModel.ID;
                }
            }
        }
    
        private void FixupPMCompletedService(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (PMCompletedService item in e.NewItems)
                {
                    item.PMInterval = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PMCompletedService item in e.OldItems)
                {
                    if (ReferenceEquals(item.PMInterval, this))
                    {
                        item.PMInterval = null;
                    }
                }
            }
        }
    
        private void FixupDefaultPMIntervalAsset(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (PMIntervalAsset item in e.NewItems)
                {
                    item.DefaultPMInterval = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PMIntervalAsset item in e.OldItems)
                {
                    if (ReferenceEquals(item.DefaultPMInterval, this))
                    {
                        item.DefaultPMInterval = null;
                    }
                }
            }
        }
    
        private void FixupCustomPMIntervalAsset(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (PMIntervalAsset item in e.NewItems)
                {
                    item.CustomPMInterval = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PMIntervalAsset item in e.OldItems)
                {
                    if (ReferenceEquals(item.CustomPMInterval, this))
                    {
                        item.CustomPMInterval = null;
                    }
                }
            }
        }

        #endregion

    }
}
