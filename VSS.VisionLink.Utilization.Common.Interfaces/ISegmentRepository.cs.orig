using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Threading.Tasks;
using VSS.VisionLink.Utilization.Common.Models;

namespace VSS.VisionLink.Utilization.Common.Interfaces
{
  public interface ISegmentRepository
  {
    Task<int> StoreSegments(IEnumerable<WorkSegment> segments);
<<<<<<< HEAD
    List<WorkSegment> GetSegments(string assetUid, int keyDate, WorkDefinitionTypeEnum workDefinitionType);
    WorkSegment GetSegmentPriorTo(string assetUid, int keyDate, WorkDefinitionTypeEnum workDefinitionType);
    Task<int> DeleteSegments(string assetUid, int startKeyDate, int endKeyDate, WorkDefinitionTypeEnum workDefinitionType);
=======
    List<WorkSegment> GetSegments(string assetUid, int keyDate);
    WorkSegment GetSegmentPriorTo(string assetUid, int keyDate);
    Task<int> DeleteSegments(string assetUid, DateTime startUtc, DateTime endUtc);
>>>>>>> Dev
  }
}