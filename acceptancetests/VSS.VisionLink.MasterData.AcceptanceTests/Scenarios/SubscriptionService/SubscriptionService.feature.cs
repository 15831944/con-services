// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace VSS.VisionLink.MasterData.AcceptanceTests.Scenarios.SubscriptionService
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class SubscriptionServiceFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "SubscriptionService.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "SubscriptionService", "\r\n References : A. Contract Document - None\r\n                         \r\n Dependen" +
                    "cies:  Internal -  Kafka Topic\r\n\r\n User Story 8346:Group Service (Master Data Ma" +
                    "nagement)", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "SubscriptionService")))
            {
                VSS.VisionLink.MasterData.AcceptanceTests.Scenarios.SubscriptionService.SubscriptionServiceFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sanity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        public virtual void SubscriptionService_CreateHappyPath()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SubscriptionService_CreateHappyPath", new string[] {
                        "Automated",
                        "Sanity",
                        "Positive",
                        "SubscriptionService",
                        "US9655"});
#line 12
this.ScenarioSetup(scenarioInfo);
#line 13
   testRunner.Given("SubscriptionService Is Ready To Verify \'SubscriptionService_CreateHappyPath\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 14
  testRunner.And("SubscriptionServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
   testRunner.When("I Post Valid SubscriptionServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 16
   testRunner.Then("The Processed SubscriptionServiceCreate Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sanity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        public virtual void SubscriptionService_UpdateHappyPath()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SubscriptionService_UpdateHappyPath", new string[] {
                        "Automated",
                        "Sanity",
                        "Positive",
                        "SubscriptionService",
                        "US9655"});
#line 20
this.ScenarioSetup(scenarioInfo);
#line 21
   testRunner.Given("SubscriptionService Is Ready To Verify \'SubscriptionService_UpdateHappyPath\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 22
  testRunner.And("SubscriptionServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
   testRunner.When("I Post Valid SubscriptionServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
      testRunner.Then("The Processed SubscriptionServiceUpdate Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateValidAssetUID_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        public virtual void SubscriptionService_CreateValidAssetUID_Empty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SubscriptionService_CreateValidAssetUID_Empty", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "SubscriptionService",
                        "US9655"});
#line 28
this.ScenarioSetup(scenarioInfo);
#line 29
   testRunner.Given("SubscriptionService Is Ready To Verify \'SubscriptionService_CreateValidAssetUID_E" +
                    "mpty\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 30
  testRunner.And("SubscriptionServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
   testRunner.When("I Set SubscriptionServiceCreate AssetUID To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 32
     testRunner.And("I Post Valid SubscriptionServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
      testRunner.Then("The Processed SubscriptionServiceCreate Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void SubscriptionService_CreateValidSubscriptionTypeID(string description, string subscriptionTypeID, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Positive",
                    "SubscriptionService",
                    "US9655"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SubscriptionService_CreateValidSubscriptionTypeID", @__tags);
#line 37
this.ScenarioSetup(scenarioInfo);
#line 38
   testRunner.Given("SubscriptionService Is Ready To Verify \'SubscriptionService_CreateValidSubscripti" +
                    "onTypeID\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 39
  testRunner.And("SubscriptionServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
   testRunner.When(string.Format("I Set SubscriptionServiceCreate SubscriptionTypeID To \'{0}\'", subscriptionTypeID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 41
     testRunner.And("I Post Valid SubscriptionServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
      testRunner.Then("The Processed SubscriptionServiceCreate Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Unknown")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Unknown")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "Unknown")]
        public virtual void SubscriptionService_CreateValidSubscriptionTypeID_Unknown()
        {
            this.SubscriptionService_CreateValidSubscriptionTypeID("Unknown", "Unknown", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Essentials")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Essentials")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "Essentials")]
        public virtual void SubscriptionService_CreateValidSubscriptionTypeID_Essentials()
        {
            this.SubscriptionService_CreateValidSubscriptionTypeID("Essentials", "Essentials", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ManualMaintenanceLog")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ManualMaintenanceLog")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "ManualMaintenanceLog")]
        public virtual void SubscriptionService_CreateValidSubscriptionTypeID_ManualMaintenanceLog()
        {
            this.SubscriptionService_CreateValidSubscriptionTypeID("ManualMaintenanceLog", "ManualMaintenanceLog", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "CATHealth")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "CATHealth")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "CATHealth")]
        public virtual void SubscriptionService_CreateValidSubscriptionTypeID_CATHealth()
        {
            this.SubscriptionService_CreateValidSubscriptionTypeID("CATHealth", "CATHealth", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "StandardHealth")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "StandardHealth")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "StandardHealth")]
        public virtual void SubscriptionService_CreateValidSubscriptionTypeID_StandardHealth()
        {
            this.SubscriptionService_CreateValidSubscriptionTypeID("StandardHealth", "StandardHealth", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "CATUtilization")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "CATUtilization")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "CATUtilization")]
        public virtual void SubscriptionService_CreateValidSubscriptionTypeID_CATUtilization()
        {
            this.SubscriptionService_CreateValidSubscriptionTypeID("CATUtilization", "CATUtilization", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "StandardUtilization")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "StandardUtilization")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "StandardUtilization")]
        public virtual void SubscriptionService_CreateValidSubscriptionTypeID_StandardUtilization()
        {
            this.SubscriptionService_CreateValidSubscriptionTypeID("StandardUtilization", "StandardUtilization", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "CATMAINT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "CATMAINT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "CATMAINT")]
        public virtual void SubscriptionService_CreateValidSubscriptionTypeID_CATMAINT()
        {
            this.SubscriptionService_CreateValidSubscriptionTypeID("CATMAINT", "CATMAINT", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "VLMAINT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "VLMAINT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "VLMAINT")]
        public virtual void SubscriptionService_CreateValidSubscriptionTypeID_VLMAINT()
        {
            this.SubscriptionService_CreateValidSubscriptionTypeID("VLMAINT", "VLMAINT", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "RealTimeDigitalSwitchAlerts")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "RealTimeDigitalSwitchAlerts")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "RealTimeDigitalSwitchAlerts")]
        public virtual void SubscriptionService_CreateValidSubscriptionTypeID_RealTimeDigitalSwitchAlerts()
        {
            this.SubscriptionService_CreateValidSubscriptionTypeID("RealTimeDigitalSwitchAlerts", "RealTimeDigitalSwitchAlerts", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "e1minuteUpdateRateUpgrade")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "e1minuteUpdateRateUpgrade")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "e1minuteUpdateRateUpgrade")]
        public virtual void SubscriptionService_CreateValidSubscriptionTypeID_E1MinuteUpdateRateUpgrade()
        {
            this.SubscriptionService_CreateValidSubscriptionTypeID("e1minuteUpdateRateUpgrade", "e1minuteUpdateRateUpgrade", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ConnectedSiteGateway")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ConnectedSiteGateway")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "ConnectedSiteGateway")]
        public virtual void SubscriptionService_CreateValidSubscriptionTypeID_ConnectedSiteGateway()
        {
            this.SubscriptionService_CreateValidSubscriptionTypeID("ConnectedSiteGateway", "ConnectedSiteGateway", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "e2DProjectMonitoring")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "e2DProjectMonitoring")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "e2DProjectMonitoring")]
        public virtual void SubscriptionService_CreateValidSubscriptionTypeID_E2DProjectMonitoring()
        {
            this.SubscriptionService_CreateValidSubscriptionTypeID("e2DProjectMonitoring", "e2DProjectMonitoring", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "e3DProjectMonitoring")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "e3DProjectMonitoring")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "e3DProjectMonitoring")]
        public virtual void SubscriptionService_CreateValidSubscriptionTypeID_E3DProjectMonitoring()
        {
            this.SubscriptionService_CreateValidSubscriptionTypeID("e3DProjectMonitoring", "e3DProjectMonitoring", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "VisionLinkRFID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "VisionLinkRFID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "VisionLinkRFID")]
        public virtual void SubscriptionService_CreateValidSubscriptionTypeID_VisionLinkRFID()
        {
            this.SubscriptionService_CreateValidSubscriptionTypeID("VisionLinkRFID", "VisionLinkRFID", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Manual3DProjectMonitoring")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Manual3DProjectMonitoring")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "Manual3DProjectMonitoring")]
        public virtual void SubscriptionService_CreateValidSubscriptionTypeID_Manual3DProjectMonitoring()
        {
            this.SubscriptionService_CreateValidSubscriptionTypeID("Manual3DProjectMonitoring", "Manual3DProjectMonitoring", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "VehicleConnect")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "VehicleConnect")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "VehicleConnect")]
        public virtual void SubscriptionService_CreateValidSubscriptionTypeID_VehicleConnect()
        {
            this.SubscriptionService_CreateValidSubscriptionTypeID("VehicleConnect", "VehicleConnect", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "UnifiedFleet")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "UnifiedFleet")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "UnifiedFleet")]
        public virtual void SubscriptionService_CreateValidSubscriptionTypeID_UnifiedFleet()
        {
            this.SubscriptionService_CreateValidSubscriptionTypeID("UnifiedFleet", "UnifiedFleet", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "AdvancedProductivity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "AdvancedProductivity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "AdvancedProductivity")]
        public virtual void SubscriptionService_CreateValidSubscriptionTypeID_AdvancedProductivity()
        {
            this.SubscriptionService_CreateValidSubscriptionTypeID("AdvancedProductivity", "AdvancedProductivity", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Landfill")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Landfill")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "Landfill")]
        public virtual void SubscriptionService_CreateValidSubscriptionTypeID_Landfill()
        {
            this.SubscriptionService_CreateValidSubscriptionTypeID("Landfill", "Landfill", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ProjectMonitoring")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ProjectMonitoring")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "ProjectMonitoring")]
        public virtual void SubscriptionService_CreateValidSubscriptionTypeID_ProjectMonitoring()
        {
            this.SubscriptionService_CreateValidSubscriptionTypeID("ProjectMonitoring", "ProjectMonitoring", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateValidAssetUID_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        public virtual void SubscriptionService_UpdateValidAssetUID_Empty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SubscriptionService_UpdateValidAssetUID_Empty", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "SubscriptionService",
                        "US9655"});
#line 69
this.ScenarioSetup(scenarioInfo);
#line 70
   testRunner.Given("SubscriptionService Is Ready To Verify \'SubscriptionService_UpdateValidAssetUID_E" +
                    "mpty\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 71
  testRunner.And("SubscriptionServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 72
   testRunner.When("I Set SubscriptionServiceUpdate AssetUID To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 73
     testRunner.And("I Post Valid SubscriptionServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 74
      testRunner.Then("The Processed SubscriptionServiceUpdate Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void SubscriptionService_UpdateValidSubscriptionTypeID(string description, string subscriptionTypeID, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Positive",
                    "SubscriptionService",
                    "US9655"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SubscriptionService_UpdateValidSubscriptionTypeID", @__tags);
#line 78
this.ScenarioSetup(scenarioInfo);
#line 79
   testRunner.Given("SubscriptionService Is Ready To Verify \'SubscriptionService_UpdateValidSubscripti" +
                    "onTypeID\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 80
  testRunner.And("SubscriptionServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 81
   testRunner.When(string.Format("I Set SubscriptionServiceUpdate SubscriptionTypeID To \'{0}\'", subscriptionTypeID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 82
     testRunner.And("I Post Valid SubscriptionServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 83
      testRunner.Then("The Processed SubscriptionServiceUpdate Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Unknown")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Unknown")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "Unknown")]
        public virtual void SubscriptionService_UpdateValidSubscriptionTypeID_Unknown()
        {
            this.SubscriptionService_UpdateValidSubscriptionTypeID("Unknown", "Unknown", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Essentials")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Essentials")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "Essentials")]
        public virtual void SubscriptionService_UpdateValidSubscriptionTypeID_Essentials()
        {
            this.SubscriptionService_UpdateValidSubscriptionTypeID("Essentials", "Essentials", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ManualMaintenanceLog")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ManualMaintenanceLog")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "ManualMaintenanceLog")]
        public virtual void SubscriptionService_UpdateValidSubscriptionTypeID_ManualMaintenanceLog()
        {
            this.SubscriptionService_UpdateValidSubscriptionTypeID("ManualMaintenanceLog", "ManualMaintenanceLog", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "CATHealth")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "CATHealth")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "CATHealth")]
        public virtual void SubscriptionService_UpdateValidSubscriptionTypeID_CATHealth()
        {
            this.SubscriptionService_UpdateValidSubscriptionTypeID("CATHealth", "CATHealth", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "StandardHealth")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "StandardHealth")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "StandardHealth")]
        public virtual void SubscriptionService_UpdateValidSubscriptionTypeID_StandardHealth()
        {
            this.SubscriptionService_UpdateValidSubscriptionTypeID("StandardHealth", "StandardHealth", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "CATUtilization")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "CATUtilization")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "CATUtilization")]
        public virtual void SubscriptionService_UpdateValidSubscriptionTypeID_CATUtilization()
        {
            this.SubscriptionService_UpdateValidSubscriptionTypeID("CATUtilization", "CATUtilization", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "StandardUtilization")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "StandardUtilization")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "StandardUtilization")]
        public virtual void SubscriptionService_UpdateValidSubscriptionTypeID_StandardUtilization()
        {
            this.SubscriptionService_UpdateValidSubscriptionTypeID("StandardUtilization", "StandardUtilization", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "CATMAINT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "CATMAINT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "CATMAINT")]
        public virtual void SubscriptionService_UpdateValidSubscriptionTypeID_CATMAINT()
        {
            this.SubscriptionService_UpdateValidSubscriptionTypeID("CATMAINT", "CATMAINT", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "VLMAINT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "VLMAINT")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "VLMAINT")]
        public virtual void SubscriptionService_UpdateValidSubscriptionTypeID_VLMAINT()
        {
            this.SubscriptionService_UpdateValidSubscriptionTypeID("VLMAINT", "VLMAINT", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "RealTimeDigitalSwitchAlerts")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "RealTimeDigitalSwitchAlerts")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "RealTimeDigitalSwitchAlerts")]
        public virtual void SubscriptionService_UpdateValidSubscriptionTypeID_RealTimeDigitalSwitchAlerts()
        {
            this.SubscriptionService_UpdateValidSubscriptionTypeID("RealTimeDigitalSwitchAlerts", "RealTimeDigitalSwitchAlerts", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "e1minuteUpdateRateUpgrade")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "e1minuteUpdateRateUpgrade")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "e1minuteUpdateRateUpgrade")]
        public virtual void SubscriptionService_UpdateValidSubscriptionTypeID_E1MinuteUpdateRateUpgrade()
        {
            this.SubscriptionService_UpdateValidSubscriptionTypeID("e1minuteUpdateRateUpgrade", "e1minuteUpdateRateUpgrade", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ConnectedSiteGateway")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ConnectedSiteGateway")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "ConnectedSiteGateway")]
        public virtual void SubscriptionService_UpdateValidSubscriptionTypeID_ConnectedSiteGateway()
        {
            this.SubscriptionService_UpdateValidSubscriptionTypeID("ConnectedSiteGateway", "ConnectedSiteGateway", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "e2DProjectMonitoring")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "e2DProjectMonitoring")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "e2DProjectMonitoring")]
        public virtual void SubscriptionService_UpdateValidSubscriptionTypeID_E2DProjectMonitoring()
        {
            this.SubscriptionService_UpdateValidSubscriptionTypeID("e2DProjectMonitoring", "e2DProjectMonitoring", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "e3DProjectMonitoring")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "e3DProjectMonitoring")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "e3DProjectMonitoring")]
        public virtual void SubscriptionService_UpdateValidSubscriptionTypeID_E3DProjectMonitoring()
        {
            this.SubscriptionService_UpdateValidSubscriptionTypeID("e3DProjectMonitoring", "e3DProjectMonitoring", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "VisionLinkRFID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "VisionLinkRFID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "VisionLinkRFID")]
        public virtual void SubscriptionService_UpdateValidSubscriptionTypeID_VisionLinkRFID()
        {
            this.SubscriptionService_UpdateValidSubscriptionTypeID("VisionLinkRFID", "VisionLinkRFID", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Manual3DProjectMonitoring")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Manual3DProjectMonitoring")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "Manual3DProjectMonitoring")]
        public virtual void SubscriptionService_UpdateValidSubscriptionTypeID_Manual3DProjectMonitoring()
        {
            this.SubscriptionService_UpdateValidSubscriptionTypeID("Manual3DProjectMonitoring", "Manual3DProjectMonitoring", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "VehicleConnect")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "VehicleConnect")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "VehicleConnect")]
        public virtual void SubscriptionService_UpdateValidSubscriptionTypeID_VehicleConnect()
        {
            this.SubscriptionService_UpdateValidSubscriptionTypeID("VehicleConnect", "VehicleConnect", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "UnifiedFleet")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "UnifiedFleet")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "UnifiedFleet")]
        public virtual void SubscriptionService_UpdateValidSubscriptionTypeID_UnifiedFleet()
        {
            this.SubscriptionService_UpdateValidSubscriptionTypeID("UnifiedFleet", "UnifiedFleet", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "AdvancedProductivity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "AdvancedProductivity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "AdvancedProductivity")]
        public virtual void SubscriptionService_UpdateValidSubscriptionTypeID_AdvancedProductivity()
        {
            this.SubscriptionService_UpdateValidSubscriptionTypeID("AdvancedProductivity", "AdvancedProductivity", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Landfill")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Landfill")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "Landfill")]
        public virtual void SubscriptionService_UpdateValidSubscriptionTypeID_Landfill()
        {
            this.SubscriptionService_UpdateValidSubscriptionTypeID("Landfill", "Landfill", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ProjectMonitoring")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ProjectMonitoring")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "ProjectMonitoring")]
        public virtual void SubscriptionService_UpdateValidSubscriptionTypeID_ProjectMonitoring()
        {
            this.SubscriptionService_UpdateValidSubscriptionTypeID("ProjectMonitoring", "ProjectMonitoring", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateValidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "NULL_NULL")]
        public virtual void SubscriptionService_UpdateValidSubscriptionTypeID_NULL()
        {
            this.SubscriptionService_UpdateValidSubscriptionTypeID("NULL", "NULL_NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateValidStartDate_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        public virtual void SubscriptionService_UpdateValidStartDate_Empty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SubscriptionService_UpdateValidStartDate_Empty", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "SubscriptionService",
                        "US9655"});
#line 111
this.ScenarioSetup(scenarioInfo);
#line 112
   testRunner.Given("SubscriptionService Is Ready To Verify \'SubscriptionService_UpdateValidStartDate_" +
                    "Empty\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 113
  testRunner.And("SubscriptionServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 114
   testRunner.When("I Set SubscriptionServiceUpdate StartDate  To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 115
     testRunner.And("I Post Valid SubscriptionServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 116
      testRunner.Then("The Processed SubscriptionServiceUpdate Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateValidEndDate_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        public virtual void SubscriptionService_UpdateValidEndDate_Empty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SubscriptionService_UpdateValidEndDate_Empty", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "SubscriptionService",
                        "US9655"});
#line 120
this.ScenarioSetup(scenarioInfo);
#line 121
   testRunner.Given("SubscriptionService Is Ready To Verify \'SubscriptionService_UpdateValidEndDate_Em" +
                    "pty\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 122
  testRunner.And("SubscriptionServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 123
   testRunner.When("I Set SubscriptionServiceUpdate EndDate To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 124
     testRunner.And("I Post Valid SubscriptionServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 125
      testRunner.Then("The Processed SubscriptionServiceUpdate Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void SubscriptionService_UpdateValidOptionalFields(string description, string assetUID, string subscriptionTypeID, string startDate, string endDate, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Positive",
                    "SubscriptionService",
                    "US9655"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SubscriptionService_UpdateValidOptionalFields", @__tags);
#line 129
this.ScenarioSetup(scenarioInfo);
#line 130
   testRunner.Given("SubscriptionService Is Ready To Verify \'SubscriptionService_UpdateValidOptionalFi" +
                    "elds\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 131
  testRunner.And("SubscriptionServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 132
   testRunner.When(string.Format("I Set SubscriptionServiceUpdate AssetUID To \'{0}\'", assetUID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 133
  testRunner.And(string.Format("I Set SubscriptionServiceUpdate SubscriptionTypeID To \'{0}\'", subscriptionTypeID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 134
  testRunner.And(string.Format("I Set SubscriptionServiceUpdate StartDate  To \'{0}\'", startDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 135
  testRunner.And(string.Format("I Set SubscriptionServiceUpdate EndDate To \'{0}\'", endDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 136
     testRunner.And("I Post Valid SubscriptionServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 137
      testRunner.Then("The Processed SubscriptionServiceUpdate Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateValidOptionalFields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "AssetUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "AssetUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetUID", "6CEC6135-89C8-11E5-9797-005056886D0D")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StartDate", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EndDate", "NULL_NULL")]
        public virtual void SubscriptionService_UpdateValidOptionalFields_AssetUID()
        {
            this.SubscriptionService_UpdateValidOptionalFields("AssetUID", "6CEC6135-89C8-11E5-9797-005056886D0D", "NULL_NULL", "NULL_NULL", "NULL_NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateValidOptionalFields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetUID", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "AdvancedProductivity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StartDate", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EndDate", "NULL_NULL")]
        public virtual void SubscriptionService_UpdateValidOptionalFields_SubscriptionTypeID()
        {
            this.SubscriptionService_UpdateValidOptionalFields("SubscriptionTypeID", "NULL_NULL", "AdvancedProductivity", "NULL_NULL", "NULL_NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateValidOptionalFields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "StartDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "StartDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetUID", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StartDate", "2015:09:28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EndDate", "NULL_NULL")]
        public virtual void SubscriptionService_UpdateValidOptionalFields_StartDate()
        {
            this.SubscriptionService_UpdateValidOptionalFields("StartDate", "NULL_NULL", "NULL_NULL", "2015:09:28T07:14:49", "NULL_NULL", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateValidOptionalFields")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "EndDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "EndDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AssetUID", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StartDate", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EndDate", "2015:09:28T07:14:49")]
        public virtual void SubscriptionService_UpdateValidOptionalFields_EndDate()
        {
            this.SubscriptionService_UpdateValidOptionalFields("EndDate", "NULL_NULL", "NULL_NULL", "NULL_NULL", "2015:09:28T07:14:49", ((string[])(null)));
        }
        
        public virtual void SubscriptionService_CreateInvalidSubscriptionUID(string description, string subscriptionUID, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "SubscriptionService",
                    "US9655"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SubscriptionService_CreateInvalidSubscriptionUID", @__tags);
#line 147
this.ScenarioSetup(scenarioInfo);
#line 148
   testRunner.Given("SubscriptionService Is Ready To Verify \'SubscriptionService_CreateInvalidSubscrip" +
                    "tionUID\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 149
  testRunner.And("SubscriptionServiceCreate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 150
   testRunner.When(string.Format("I Set Invalid SubscriptionServiceCreate SubscriptionUID  To \'{0}\'", subscriptionUID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 151
     testRunner.And("I Post Invalid SubscriptionServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 152
      testRunner.Then(string.Format("SubscriptionServiceCreate Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidSubscriptionUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidLength")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidLength")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionUID", "c9ead99b-eea3-4605-92e2-1e6497b773")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_SubscriptionUIDInvalid")]
        public virtual void SubscriptionService_CreateInvalidSubscriptionUID_InvalidLength()
        {
            this.SubscriptionService_CreateInvalidSubscriptionUID("InvalidLength", "c9ead99b-eea3-4605-92e2-1e6497b773", "ERR_SubscriptionUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidSubscriptionUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionUID", "c9ead99b-eea3 4605-92e2-1e6497b77369")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_SubscriptionUIDInvalid")]
        public virtual void SubscriptionService_CreateInvalidSubscriptionUID_ContainsSpace()
        {
            this.SubscriptionService_CreateInvalidSubscriptionUID("ContainsSpace", "c9ead99b-eea3 4605-92e2-1e6497b77369", "ERR_SubscriptionUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidSubscriptionUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsUnderScore")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsUnderScore")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionUID", "9AB056CA_3514_E411_8AFE_24FD5231FB1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_SubscriptionUIDInvalid")]
        public virtual void SubscriptionService_CreateInvalidSubscriptionUID_ContainsUnderScore()
        {
            this.SubscriptionService_CreateInvalidSubscriptionUID("ContainsUnderScore", "9AB056CA_3514_E411_8AFE_24FD5231FB1F", "ERR_SubscriptionUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidSubscriptionUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NotInGUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NotInGUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionUID", "9AB056CA3-514-E411-8AFE-24FD5231FB1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_SubscriptionUIDInvalid")]
        public virtual void SubscriptionService_CreateInvalidSubscriptionUID_NotInGUID()
        {
            this.SubscriptionService_CreateInvalidSubscriptionUID("NotInGUID", "9AB056CA3-514-E411-8AFE-24FD5231FB1F", "ERR_SubscriptionUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidSubscriptionUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SplChar")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SplChar")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionUID", "9AB056CA3-514-E411-8AFE-24FD5231*B1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_SubscriptionUIDInvalid")]
        public virtual void SubscriptionService_CreateInvalidSubscriptionUID_SplChar()
        {
            this.SubscriptionService_CreateInvalidSubscriptionUID("SplChar", "9AB056CA3-514-E411-8AFE-24FD5231*B1F", "ERR_SubscriptionUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidSubscriptionUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionUID", "EMPTY_EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_SubscriptionUIDInvalid")]
        public virtual void SubscriptionService_CreateInvalidSubscriptionUID_EMPTY()
        {
            this.SubscriptionService_CreateInvalidSubscriptionUID("EMPTY", "EMPTY_EMPTY", "ERR_SubscriptionUIDInvalid", ((string[])(null)));
        }
        
        public virtual void SubscriptionService_CreateInvalidCustomerUID(string description, string customerUID, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "SubscriptionService",
                    "US9655"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SubscriptionService_CreateInvalidCustomerUID", @__tags);
#line 164
this.ScenarioSetup(scenarioInfo);
#line 165
   testRunner.Given("SubscriptionService Is Ready To Verify \'SubscriptionService_CreateInvalidCustomer" +
                    "UID\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 166
  testRunner.And("SubscriptionServiceCreate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 167
   testRunner.When(string.Format("I Set Invalid SubscriptionServiceCreate CustomerUID To \'{0}\'", customerUID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 168
     testRunner.And("I Post Invalid SubscriptionServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 169
      testRunner.Then(string.Format("SubscriptionServiceCreate Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidCustomerUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidLength")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidLength")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "c9ead99b-eea3-4605-92e2-1e6497b773")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_CustomerUIDInvalid")]
        public virtual void SubscriptionService_CreateInvalidCustomerUID_InvalidLength()
        {
            this.SubscriptionService_CreateInvalidCustomerUID("InvalidLength", "c9ead99b-eea3-4605-92e2-1e6497b773", "ERR_CustomerUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidCustomerUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "c9ead99b-eea3 4605-92e2-1e6497b77369")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_CustomerUIDInvalid")]
        public virtual void SubscriptionService_CreateInvalidCustomerUID_ContainsSpace()
        {
            this.SubscriptionService_CreateInvalidCustomerUID("ContainsSpace", "c9ead99b-eea3 4605-92e2-1e6497b77369", "ERR_CustomerUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidCustomerUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsUnderScore")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsUnderScore")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "9AB056CA_3514_E411_8AFE_24FD5231FB1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_CustomerUIDInvalid")]
        public virtual void SubscriptionService_CreateInvalidCustomerUID_ContainsUnderScore()
        {
            this.SubscriptionService_CreateInvalidCustomerUID("ContainsUnderScore", "9AB056CA_3514_E411_8AFE_24FD5231FB1F", "ERR_CustomerUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidCustomerUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NotInGUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NotInGUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "9AB056CA3-514-E411-8AFE-24FD5231FB1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_CustomerUIDInvalid")]
        public virtual void SubscriptionService_CreateInvalidCustomerUID_NotInGUID()
        {
            this.SubscriptionService_CreateInvalidCustomerUID("NotInGUID", "9AB056CA3-514-E411-8AFE-24FD5231FB1F", "ERR_CustomerUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidCustomerUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SplChar")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SplChar")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "9AB056CA3-514-E411-8AFE-24FD5231*B1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_CustomerUIDInvalid")]
        public virtual void SubscriptionService_CreateInvalidCustomerUID_SplChar()
        {
            this.SubscriptionService_CreateInvalidCustomerUID("SplChar", "9AB056CA3-514-E411-8AFE-24FD5231*B1F", "ERR_CustomerUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidCustomerUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "EMPTY_EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_CustomerUIDInvalid")]
        public virtual void SubscriptionService_CreateInvalidCustomerUID_EMPTY()
        {
            this.SubscriptionService_CreateInvalidCustomerUID("EMPTY", "EMPTY_EMPTY", "ERR_CustomerUIDInvalid", ((string[])(null)));
        }
        
        public virtual void SubscriptionService_CreateInvalidAssetUID(string description, string customerUID, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "SubscriptionService",
                    "US9655"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SubscriptionService_CreateInvalidAssetUID", @__tags);
#line 181
this.ScenarioSetup(scenarioInfo);
#line 182
   testRunner.Given("SubscriptionService Is Ready To Verify \'SubscriptionService_CreateInvalidAssetUID" +
                    "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 183
  testRunner.And("SubscriptionServiceCreate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 184
   testRunner.When("I Set Invalid SubscriptionServiceCreate AssetUID To \'<AssetUID>\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 185
     testRunner.And("I Post Invalid SubscriptionServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 186
      testRunner.Then(string.Format("SubscriptionServiceCreate Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidAssetUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidLength")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidLength")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "c9ead99b-eea3-4605-92e2-1e6497b773")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_AssetUIDInvalid")]
        public virtual void SubscriptionService_CreateInvalidAssetUID_InvalidLength()
        {
            this.SubscriptionService_CreateInvalidAssetUID("InvalidLength", "c9ead99b-eea3-4605-92e2-1e6497b773", "ERR_AssetUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidAssetUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "c9ead99b-eea3 4605-92e2-1e6497b77369")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_AssetUIDInvalid")]
        public virtual void SubscriptionService_CreateInvalidAssetUID_ContainsSpace()
        {
            this.SubscriptionService_CreateInvalidAssetUID("ContainsSpace", "c9ead99b-eea3 4605-92e2-1e6497b77369", "ERR_AssetUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidAssetUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsUnderScore")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsUnderScore")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "9AB056CA_3514_E411_8AFE_24FD5231FB1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_AssetUIDInvalid")]
        public virtual void SubscriptionService_CreateInvalidAssetUID_ContainsUnderScore()
        {
            this.SubscriptionService_CreateInvalidAssetUID("ContainsUnderScore", "9AB056CA_3514_E411_8AFE_24FD5231FB1F", "ERR_AssetUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidAssetUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NotInGUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NotInGUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "9AB056CA3-514-E411-8AFE-24FD5231FB1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_AssetUIDInvalid")]
        public virtual void SubscriptionService_CreateInvalidAssetUID_NotInGUID()
        {
            this.SubscriptionService_CreateInvalidAssetUID("NotInGUID", "9AB056CA3-514-E411-8AFE-24FD5231FB1F", "ERR_AssetUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidAssetUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SplChar")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SplChar")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "9AB056CA3-514-E411-8AFE-24FD5231*B1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_AssetUIDInvalid")]
        public virtual void SubscriptionService_CreateInvalidAssetUID_SplChar()
        {
            this.SubscriptionService_CreateInvalidAssetUID("SplChar", "9AB056CA3-514-E411-8AFE-24FD5231*B1F", "ERR_AssetUIDInvalid", ((string[])(null)));
        }
        
        public virtual void SubscriptionService_CreateInvalidSubscriptionTypeID(string description, string subscriptionTypeID, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "SubscriptionService",
                    "US9655"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SubscriptionService_CreateInvalidSubscriptionTypeID", @__tags);
#line 197
this.ScenarioSetup(scenarioInfo);
#line 198
   testRunner.Given("SubscriptionService Is Ready To Verify \'SubscriptionService_CreateInvalidSubscrip" +
                    "tionTypeID\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 199
  testRunner.And("SubscriptionServiceCreate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 200
   testRunner.When(string.Format("I Set Invalid SubscriptionServiceCreate SubscriptionTypeID To \'{0}\'", subscriptionTypeID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 201
     testRunner.And("I Post Invalid SubscriptionServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 202
      testRunner.Then(string.Format("SubscriptionServiceCreate Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidSubscription")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidSubscription")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "abcd")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_SubscriptionTypeIDInvalid")]
        public virtual void SubscriptionService_CreateInvalidSubscriptionTypeID_InvalidSubscription()
        {
            this.SubscriptionService_CreateInvalidSubscriptionTypeID("InvalidSubscription", "abcd", "ERR_SubscriptionTypeIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "EMPTY_EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_SubscriptionTypeIDInvalid")]
        public virtual void SubscriptionService_CreateInvalidSubscriptionTypeID_EMPTY()
        {
            this.SubscriptionService_CreateInvalidSubscriptionTypeID("EMPTY", "EMPTY_EMPTY", "ERR_SubscriptionTypeIDInvalid", ((string[])(null)));
        }
        
        public virtual void SubscriptionService_CreateInvalidStartDate(string description, string startDate, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "SubscriptionService",
                    "US9655"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SubscriptionService_CreateInvalidStartDate", @__tags);
#line 210
this.ScenarioSetup(scenarioInfo);
#line 211
   testRunner.Given("SubscriptionService Is Ready To Verify \'SubscriptionService_CreateInvalidStartDat" +
                    "e\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 212
  testRunner.And("SubscriptionServiceCreate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 213
   testRunner.When(string.Format("I Set Invalid SubscriptionServiceCreate StartDate To \'{0}\'", startDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 214
     testRunner.And("I Post Invalid SubscriptionServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 215
      testRunner.Then(string.Format("SubscriptionServiceCreate Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidStartDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsColon")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsColon")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StartDate", "2015:09::28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_StartDateInvalid")]
        public virtual void SubscriptionService_CreateInvalidStartDate_ContainsColon()
        {
            this.SubscriptionService_CreateInvalidStartDate("ContainsColon", "2015:09::28T07:14:49", "ERR_StartDateInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidStartDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsBackSlash")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsBackSlash")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StartDate", "2015/09/28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_StartDateInvalid")]
        public virtual void SubscriptionService_CreateInvalidStartDate_ContainsBackSlash()
        {
            this.SubscriptionService_CreateInvalidStartDate("ContainsBackSlash", "2015/09/28T07:14:49", "ERR_StartDateInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidStartDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidYear")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidYear")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StartDate", "20155:09:28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_StartDateInvalid")]
        public virtual void SubscriptionService_CreateInvalidStartDate_InvalidYear()
        {
            this.SubscriptionService_CreateInvalidStartDate("InvalidYear", "20155:09:28T07:14:49", "ERR_StartDateInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidStartDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidMonth")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidMonth")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StartDate", "2015:099:28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_StartDateInvalid")]
        public virtual void SubscriptionService_CreateInvalidStartDate_InvalidMonth()
        {
            this.SubscriptionService_CreateInvalidStartDate("InvalidMonth", "2015:099:28T07:14:49", "ERR_StartDateInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidStartDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StartDate", "2015:09:288T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_StartDateInvalid")]
        public virtual void SubscriptionService_CreateInvalidStartDate_InvalidDate()
        {
            this.SubscriptionService_CreateInvalidStartDate("InvalidDate", "2015:09:288T07:14:49", "ERR_StartDateInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidStartDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidHour")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidHour")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StartDate", "2015:09:28T070:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_StartDateInvalid")]
        public virtual void SubscriptionService_CreateInvalidStartDate_InvalidHour()
        {
            this.SubscriptionService_CreateInvalidStartDate("InvalidHour", "2015:09:28T070:14:49", "ERR_StartDateInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidStartDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidMinutes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidMinutes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StartDate", "2015:09:288T07:144:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_StartDateInvalid")]
        public virtual void SubscriptionService_CreateInvalidStartDate_InvalidMinutes()
        {
            this.SubscriptionService_CreateInvalidStartDate("InvalidMinutes", "2015:09:288T07:144:49", "ERR_StartDateInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidStartDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidSeconds")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidSeconds")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StartDate", "2015:09:288T07:14:499")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_StartDateInvalid")]
        public virtual void SubscriptionService_CreateInvalidStartDate_InvalidSeconds()
        {
            this.SubscriptionService_CreateInvalidStartDate("InvalidSeconds", "2015:09:288T07:14:499", "ERR_StartDateInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidStartDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StartDate", "EMPTY_EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_StartDateInvalid")]
        public virtual void SubscriptionService_CreateInvalidStartDate_NULL()
        {
            this.SubscriptionService_CreateInvalidStartDate("NULL", "EMPTY_EMPTY", "ERR_StartDateInvalid", ((string[])(null)));
        }
        
        public virtual void SubscriptionService_CreateInvalidEndDate_Empty(string description, string endDate, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "SubscriptionService",
                    "US9655"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SubscriptionService_CreateInvalidEndDate_Empty", @__tags);
#line 230
this.ScenarioSetup(scenarioInfo);
#line 231
   testRunner.Given("SubscriptionService Is Ready To Verify \'SubscriptionService_CreateInvalidEndDate\'" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 232
  testRunner.And("SubscriptionServiceCreate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 233
   testRunner.When(string.Format("I Set Invalid SubscriptionServiceCreate EndDate To \'{0}\'", endDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 234
     testRunner.And("I Post Invalid SubscriptionServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 235
      testRunner.Then(string.Format("SubscriptionServiceCreate Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidEndDate_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsColon")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsColon")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EndDate", "2015:09::28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_EndDateInvalid")]
        public virtual void SubscriptionService_CreateInvalidEndDate_Empty_ContainsColon()
        {
            this.SubscriptionService_CreateInvalidEndDate_Empty("ContainsColon", "2015:09::28T07:14:49", "ERR_EndDateInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidEndDate_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsBackSlash")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsBackSlash")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EndDate", "2015/09/28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_EndDateInvalid")]
        public virtual void SubscriptionService_CreateInvalidEndDate_Empty_ContainsBackSlash()
        {
            this.SubscriptionService_CreateInvalidEndDate_Empty("ContainsBackSlash", "2015/09/28T07:14:49", "ERR_EndDateInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidEndDate_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidYear")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidYear")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EndDate", "20155:09:28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_EndDateInvalid")]
        public virtual void SubscriptionService_CreateInvalidEndDate_Empty_InvalidYear()
        {
            this.SubscriptionService_CreateInvalidEndDate_Empty("InvalidYear", "20155:09:28T07:14:49", "ERR_EndDateInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidEndDate_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidMonth")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidMonth")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EndDate", "2015:099:28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_EndDateInvalid")]
        public virtual void SubscriptionService_CreateInvalidEndDate_Empty_InvalidMonth()
        {
            this.SubscriptionService_CreateInvalidEndDate_Empty("InvalidMonth", "2015:099:28T07:14:49", "ERR_EndDateInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidEndDate_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EndDate", "2015:09:288T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_EndDateInvalid")]
        public virtual void SubscriptionService_CreateInvalidEndDate_Empty_InvalidDate()
        {
            this.SubscriptionService_CreateInvalidEndDate_Empty("InvalidDate", "2015:09:288T07:14:49", "ERR_EndDateInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidEndDate_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidHour")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidHour")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EndDate", "2015:09:28T070:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_EndDateInvalid")]
        public virtual void SubscriptionService_CreateInvalidEndDate_Empty_InvalidHour()
        {
            this.SubscriptionService_CreateInvalidEndDate_Empty("InvalidHour", "2015:09:28T070:14:49", "ERR_EndDateInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidEndDate_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidMinutes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidMinutes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EndDate", "2015:09:288T07:144:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_EndDateInvalid")]
        public virtual void SubscriptionService_CreateInvalidEndDate_Empty_InvalidMinutes()
        {
            this.SubscriptionService_CreateInvalidEndDate_Empty("InvalidMinutes", "2015:09:288T07:144:49", "ERR_EndDateInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidEndDate_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidSeconds")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidSeconds")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EndDate", "2015:09:288T07:14:499")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_EndDateInvalid")]
        public virtual void SubscriptionService_CreateInvalidEndDate_Empty_InvalidSeconds()
        {
            this.SubscriptionService_CreateInvalidEndDate_Empty("InvalidSeconds", "2015:09:288T07:14:499", "ERR_EndDateInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidEndDate_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EndDate", "EMPTY_EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_EndDateInvalid")]
        public virtual void SubscriptionService_CreateInvalidEndDate_Empty_NULL()
        {
            this.SubscriptionService_CreateInvalidEndDate_Empty("NULL", "EMPTY_EMPTY", "ERR_EndDateInvalid", ((string[])(null)));
        }
        
        public virtual void SubscriptionService_CreateInvalidActionUTC(string description, string actionUTC, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "SubscriptionService",
                    "US9655"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SubscriptionService_CreateInvalidActionUTC", @__tags);
#line 250
this.ScenarioSetup(scenarioInfo);
#line 251
   testRunner.Given(string.Format("SubscriptionService Is Ready To Verify \'{0}\'", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 252
  testRunner.And("SubscriptionServiceCreate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 253
   testRunner.When(string.Format("I Set Invalid SubscriptionServiceCreate ActionUTC To \'{0}\'", actionUTC), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 254
      testRunner.And("I Post Invalid SubscriptionServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 255
      testRunner.Then(string.Format("SubscriptionServiceCreate Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsColon")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsColon")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:09:28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void SubscriptionService_CreateInvalidActionUTC_ContainsColon()
        {
            this.SubscriptionService_CreateInvalidActionUTC("ContainsColon", "2015:09:28T07:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsBackSlash")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsBackSlash")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015/09/28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void SubscriptionService_CreateInvalidActionUTC_ContainsBackSlash()
        {
            this.SubscriptionService_CreateInvalidActionUTC("ContainsBackSlash", "2015/09/28T07:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidYear")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidYear")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "20155:09:28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void SubscriptionService_CreateInvalidActionUTC_InvalidYear()
        {
            this.SubscriptionService_CreateInvalidActionUTC("InvalidYear", "20155:09:28T07:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidMonth")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidMonth")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:099:28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void SubscriptionService_CreateInvalidActionUTC_InvalidMonth()
        {
            this.SubscriptionService_CreateInvalidActionUTC("InvalidMonth", "2015:099:28T07:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:09:288T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void SubscriptionService_CreateInvalidActionUTC_InvalidDate()
        {
            this.SubscriptionService_CreateInvalidActionUTC("InvalidDate", "2015:09:288T07:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidHour")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidHour")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:09:28T070:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void SubscriptionService_CreateInvalidActionUTC_InvalidHour()
        {
            this.SubscriptionService_CreateInvalidActionUTC("InvalidHour", "2015:09:28T070:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidMinutes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidMinutes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:09:288T07:144:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void SubscriptionService_CreateInvalidActionUTC_InvalidMinutes()
        {
            this.SubscriptionService_CreateInvalidActionUTC("InvalidMinutes", "2015:09:288T07:144:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidSeconds")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidSeconds")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:09:288T07:14:499")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void SubscriptionService_CreateInvalidActionUTC_InvalidSeconds()
        {
            this.SubscriptionService_CreateInvalidActionUTC("InvalidSeconds", "2015:09:288T07:14:499", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_CreateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "EMPTY_EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void SubscriptionService_CreateInvalidActionUTC_NULL()
        {
            this.SubscriptionService_CreateInvalidActionUTC("NULL", "EMPTY_EMPTY", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        public virtual void SubscriptionService_UpdateInvalidSubscriptionUID(string description, string subscriptionUID, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "SubscriptionService",
                    "US9655"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SubscriptionService_UpdateInvalidSubscriptionUID", @__tags);
#line 270
this.ScenarioSetup(scenarioInfo);
#line 271
   testRunner.Given("SubscriptionService Is Ready To Verify \'SubscriptionService_UpdateInvalidSubscrip" +
                    "tionUID\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 272
  testRunner.And("SubscriptionServiceUpdate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 273
   testRunner.When(string.Format("I Set Invalid SubscriptionServiceUpdate SubscriptionUID  To \'{0}\'", subscriptionUID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 274
     testRunner.And("I Post Invalid SubscriptionServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 275
      testRunner.Then(string.Format("SubscriptionServiceUpdate Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidSubscriptionUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidLength")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidLength")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionUID", "c9ead99b-eea3-4605-92e2-1e6497b773")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_SubscriptionUIDInvalid")]
        public virtual void SubscriptionService_UpdateInvalidSubscriptionUID_InvalidLength()
        {
            this.SubscriptionService_UpdateInvalidSubscriptionUID("InvalidLength", "c9ead99b-eea3-4605-92e2-1e6497b773", "ERR_SubscriptionUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidSubscriptionUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionUID", "c9ead99b-eea3 4605-92e2-1e6497b77369")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_SubscriptionUIDInvalid")]
        public virtual void SubscriptionService_UpdateInvalidSubscriptionUID_ContainsSpace()
        {
            this.SubscriptionService_UpdateInvalidSubscriptionUID("ContainsSpace", "c9ead99b-eea3 4605-92e2-1e6497b77369", "ERR_SubscriptionUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidSubscriptionUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsUnderScore")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsUnderScore")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionUID", "9AB056CA_3514_E411_8AFE_24FD5231FB1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_SubscriptionUIDInvalid")]
        public virtual void SubscriptionService_UpdateInvalidSubscriptionUID_ContainsUnderScore()
        {
            this.SubscriptionService_UpdateInvalidSubscriptionUID("ContainsUnderScore", "9AB056CA_3514_E411_8AFE_24FD5231FB1F", "ERR_SubscriptionUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidSubscriptionUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NotInGUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NotInGUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionUID", "9AB056CA3-514-E411-8AFE-24FD5231FB1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_SubscriptionUIDInvalid")]
        public virtual void SubscriptionService_UpdateInvalidSubscriptionUID_NotInGUID()
        {
            this.SubscriptionService_UpdateInvalidSubscriptionUID("NotInGUID", "9AB056CA3-514-E411-8AFE-24FD5231FB1F", "ERR_SubscriptionUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidSubscriptionUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SplChar")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SplChar")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionUID", "9AB056CA3-514-E411-8AFE-24FD5231*B1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_SubscriptionUIDInvalid")]
        public virtual void SubscriptionService_UpdateInvalidSubscriptionUID_SplChar()
        {
            this.SubscriptionService_UpdateInvalidSubscriptionUID("SplChar", "9AB056CA3-514-E411-8AFE-24FD5231*B1F", "ERR_SubscriptionUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidSubscriptionUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionUID", "EMPTY_EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_SubscriptionUIDInvalid")]
        public virtual void SubscriptionService_UpdateInvalidSubscriptionUID_EMPTY()
        {
            this.SubscriptionService_UpdateInvalidSubscriptionUID("EMPTY", "EMPTY_EMPTY", "ERR_SubscriptionUIDInvalid", ((string[])(null)));
        }
        
        public virtual void SubscriptionService_UpdateInvalidCustomerUID(string description, string customerUID, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "SubscriptionService",
                    "US9655"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SubscriptionService_UpdateInvalidCustomerUID", @__tags);
#line 287
this.ScenarioSetup(scenarioInfo);
#line 288
   testRunner.Given("SubscriptionService Is Ready To Verify \'SubscriptionService_UpdateInvalidCustomer" +
                    "UID\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 289
  testRunner.And("SubscriptionServiceUpdate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 290
   testRunner.When(string.Format("I Set Invalid SubscriptionServiceUpdate CustomerUID To \'{0}\'", customerUID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 291
     testRunner.And("I Post Invalid SubscriptionServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 292
      testRunner.Then(string.Format("SubscriptionServiceUpdate Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidCustomerUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidLength")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidLength")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "c9ead99b-eea3-4605-92e2-1e6497b773")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_CustomerUIDInvalid")]
        public virtual void SubscriptionService_UpdateInvalidCustomerUID_InvalidLength()
        {
            this.SubscriptionService_UpdateInvalidCustomerUID("InvalidLength", "c9ead99b-eea3-4605-92e2-1e6497b773", "ERR_CustomerUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidCustomerUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "c9ead99b-eea3 4605-92e2-1e6497b77369")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_CustomerUIDInvalid")]
        public virtual void SubscriptionService_UpdateInvalidCustomerUID_ContainsSpace()
        {
            this.SubscriptionService_UpdateInvalidCustomerUID("ContainsSpace", "c9ead99b-eea3 4605-92e2-1e6497b77369", "ERR_CustomerUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidCustomerUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsUnderScore")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsUnderScore")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "9AB056CA_3514_E411_8AFE_24FD5231FB1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_CustomerUIDInvalid")]
        public virtual void SubscriptionService_UpdateInvalidCustomerUID_ContainsUnderScore()
        {
            this.SubscriptionService_UpdateInvalidCustomerUID("ContainsUnderScore", "9AB056CA_3514_E411_8AFE_24FD5231FB1F", "ERR_CustomerUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidCustomerUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NotInGUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NotInGUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "9AB056CA3-514-E411-8AFE-24FD5231FB1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_CustomerUIDInvalid")]
        public virtual void SubscriptionService_UpdateInvalidCustomerUID_NotInGUID()
        {
            this.SubscriptionService_UpdateInvalidCustomerUID("NotInGUID", "9AB056CA3-514-E411-8AFE-24FD5231FB1F", "ERR_CustomerUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidCustomerUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SplChar")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SplChar")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "9AB056CA3-514-E411-8AFE-24FD5231*B1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_CustomerUIDInvalid")]
        public virtual void SubscriptionService_UpdateInvalidCustomerUID_SplChar()
        {
            this.SubscriptionService_UpdateInvalidCustomerUID("SplChar", "9AB056CA3-514-E411-8AFE-24FD5231*B1F", "ERR_CustomerUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidCustomerUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "EMPTY_EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_CustomerUIDInvalid")]
        public virtual void SubscriptionService_UpdateInvalidCustomerUID_EMPTY()
        {
            this.SubscriptionService_UpdateInvalidCustomerUID("EMPTY", "EMPTY_EMPTY", "ERR_CustomerUIDInvalid", ((string[])(null)));
        }
        
        public virtual void SubscriptionService_UpdateInvalidAssetUID(string description, string customerUID, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "SubscriptionService",
                    "US9655"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SubscriptionService_UpdateInvalidAssetUID", @__tags);
#line 304
this.ScenarioSetup(scenarioInfo);
#line 305
   testRunner.Given("SubscriptionService Is Ready To Verify \'SubscriptionService_UpdateInvalidAssetUID" +
                    "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 306
  testRunner.And("SubscriptionServiceUpdate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 307
   testRunner.When("I Set Invalid SubscriptionServiceUpdate AssetUID To \'<AssetUID>\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 308
     testRunner.And("I Post Invalid SubscriptionServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 309
      testRunner.Then(string.Format("SubscriptionServiceUpdate Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidAssetUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidLength")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidLength")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "c9ead99b-eea3-4605-92e2-1e6497b773")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_AssetUIDInvalid")]
        public virtual void SubscriptionService_UpdateInvalidAssetUID_InvalidLength()
        {
            this.SubscriptionService_UpdateInvalidAssetUID("InvalidLength", "c9ead99b-eea3-4605-92e2-1e6497b773", "ERR_AssetUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidAssetUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "c9ead99b-eea3 4605-92e2-1e6497b77369")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_AssetUIDInvalid")]
        public virtual void SubscriptionService_UpdateInvalidAssetUID_ContainsSpace()
        {
            this.SubscriptionService_UpdateInvalidAssetUID("ContainsSpace", "c9ead99b-eea3 4605-92e2-1e6497b77369", "ERR_AssetUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidAssetUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsUnderScore")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsUnderScore")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "9AB056CA_3514_E411_8AFE_24FD5231FB1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_AssetUIDInvalid")]
        public virtual void SubscriptionService_UpdateInvalidAssetUID_ContainsUnderScore()
        {
            this.SubscriptionService_UpdateInvalidAssetUID("ContainsUnderScore", "9AB056CA_3514_E411_8AFE_24FD5231FB1F", "ERR_AssetUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidAssetUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NotInGUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NotInGUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "9AB056CA3-514-E411-8AFE-24FD5231FB1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_AssetUIDInvalid")]
        public virtual void SubscriptionService_UpdateInvalidAssetUID_NotInGUID()
        {
            this.SubscriptionService_UpdateInvalidAssetUID("NotInGUID", "9AB056CA3-514-E411-8AFE-24FD5231FB1F", "ERR_AssetUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidAssetUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SplChar")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SplChar")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "9AB056CA3-514-E411-8AFE-24FD5231*B1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_AssetUIDInvalid")]
        public virtual void SubscriptionService_UpdateInvalidAssetUID_SplChar()
        {
            this.SubscriptionService_UpdateInvalidAssetUID("SplChar", "9AB056CA3-514-E411-8AFE-24FD5231*B1F", "ERR_AssetUIDInvalid", ((string[])(null)));
        }
        
        public virtual void SubscriptionService_UpdateInvalidSubscriptionTypeID(string description, string subscriptionTypeID, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "SubscriptionService",
                    "US9655"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SubscriptionService_UpdateInvalidSubscriptionTypeID", @__tags);
#line 320
this.ScenarioSetup(scenarioInfo);
#line 321
   testRunner.Given("SubscriptionService Is Ready To Verify \'SubscriptionService_UpdateInvalidSubscrip" +
                    "tionTypeID\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 322
  testRunner.And("SubscriptionServiceUpdate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 323
   testRunner.When(string.Format("I Set Invalid SubscriptionServiceUpdate SubscriptionTypeID To \'{0}\'", subscriptionTypeID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 324
     testRunner.And("I Post Invalid SubscriptionServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 325
      testRunner.Then(string.Format("SubscriptionServiceUpdate Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidSubscriptionTypeID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidSubscription")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidSubscription")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubscriptionTypeID", "abcd")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_SubscriptionTypeIDInvalid")]
        public virtual void SubscriptionService_UpdateInvalidSubscriptionTypeID_InvalidSubscription()
        {
            this.SubscriptionService_UpdateInvalidSubscriptionTypeID("InvalidSubscription", "abcd", "ERR_SubscriptionTypeIDInvalid", ((string[])(null)));
        }
        
        public virtual void SubscriptionService_UpdateInvalidStartDate(string description, string startDate, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "SubscriptionService",
                    "US9655"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SubscriptionService_UpdateInvalidStartDate", @__tags);
#line 332
this.ScenarioSetup(scenarioInfo);
#line 333
   testRunner.Given("SubscriptionService Is Ready To Verify \'SubscriptionService_UpdateInvalidStartDat" +
                    "e\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 334
  testRunner.And("SubscriptionServiceUpdate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 335
   testRunner.When(string.Format("I Set Invalid SubscriptionServiceUpdate StartDate To \'{0}\'", startDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 336
     testRunner.And("I Post Invalid SubscriptionServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 337
      testRunner.Then(string.Format("SubscriptionServiceUpdate Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidStartDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsColon")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsColon")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StartDate", "2015:09::28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_StartDateInvalid")]
        public virtual void SubscriptionService_UpdateInvalidStartDate_ContainsColon()
        {
            this.SubscriptionService_UpdateInvalidStartDate("ContainsColon", "2015:09::28T07:14:49", "ERR_StartDateInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidStartDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsBackSlash")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsBackSlash")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StartDate", "2015/09/28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_StartDateInvalid")]
        public virtual void SubscriptionService_UpdateInvalidStartDate_ContainsBackSlash()
        {
            this.SubscriptionService_UpdateInvalidStartDate("ContainsBackSlash", "2015/09/28T07:14:49", "ERR_StartDateInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidStartDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidYear")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidYear")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StartDate", "20155:09:28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_StartDateInvalid")]
        public virtual void SubscriptionService_UpdateInvalidStartDate_InvalidYear()
        {
            this.SubscriptionService_UpdateInvalidStartDate("InvalidYear", "20155:09:28T07:14:49", "ERR_StartDateInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidStartDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidMonth")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidMonth")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StartDate", "2015:099:28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_StartDateInvalid")]
        public virtual void SubscriptionService_UpdateInvalidStartDate_InvalidMonth()
        {
            this.SubscriptionService_UpdateInvalidStartDate("InvalidMonth", "2015:099:28T07:14:49", "ERR_StartDateInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidStartDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StartDate", "2015:09:288T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_StartDateInvalid")]
        public virtual void SubscriptionService_UpdateInvalidStartDate_InvalidDate()
        {
            this.SubscriptionService_UpdateInvalidStartDate("InvalidDate", "2015:09:288T07:14:49", "ERR_StartDateInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidStartDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidHour")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidHour")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StartDate", "2015:09:28T070:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_StartDateInvalid")]
        public virtual void SubscriptionService_UpdateInvalidStartDate_InvalidHour()
        {
            this.SubscriptionService_UpdateInvalidStartDate("InvalidHour", "2015:09:28T070:14:49", "ERR_StartDateInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidStartDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidMinutes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidMinutes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StartDate", "2015:09:288T07:144:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_StartDateInvalid")]
        public virtual void SubscriptionService_UpdateInvalidStartDate_InvalidMinutes()
        {
            this.SubscriptionService_UpdateInvalidStartDate("InvalidMinutes", "2015:09:288T07:144:49", "ERR_StartDateInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidStartDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidSeconds")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidSeconds")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StartDate", "2015:09:288T07:14:499")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_StartDateInvalid")]
        public virtual void SubscriptionService_UpdateInvalidStartDate_InvalidSeconds()
        {
            this.SubscriptionService_UpdateInvalidStartDate("InvalidSeconds", "2015:09:288T07:14:499", "ERR_StartDateInvalid", ((string[])(null)));
        }
        
        public virtual void SubscriptionService_UpdateInvalidEndDate_Empty(string description, string endDate, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "SubscriptionService",
                    "US9655"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SubscriptionService_UpdateInvalidEndDate_Empty", @__tags);
#line 351
this.ScenarioSetup(scenarioInfo);
#line 352
   testRunner.Given("SubscriptionService Is Ready To Verify \'SubscriptionService_UpdateInvalidEndDate\'" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 353
  testRunner.And("SubscriptionServiceUpdate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 354
   testRunner.When(string.Format("I Set Invalid SubscriptionServiceUpdate EndDate To \'{0}\'", endDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 355
     testRunner.And("I Post Invalid SubscriptionServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 356
      testRunner.Then(string.Format("SubscriptionServiceUpdate Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidEndDate_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsColon")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsColon")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EndDate", "2015:09::28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_EndDateInvalid")]
        public virtual void SubscriptionService_UpdateInvalidEndDate_Empty_ContainsColon()
        {
            this.SubscriptionService_UpdateInvalidEndDate_Empty("ContainsColon", "2015:09::28T07:14:49", "ERR_EndDateInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidEndDate_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsBackSlash")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsBackSlash")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EndDate", "2015/09/28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_EndDateInvalid")]
        public virtual void SubscriptionService_UpdateInvalidEndDate_Empty_ContainsBackSlash()
        {
            this.SubscriptionService_UpdateInvalidEndDate_Empty("ContainsBackSlash", "2015/09/28T07:14:49", "ERR_EndDateInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidEndDate_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidYear")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidYear")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EndDate", "20155:09:28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_EndDateInvalid")]
        public virtual void SubscriptionService_UpdateInvalidEndDate_Empty_InvalidYear()
        {
            this.SubscriptionService_UpdateInvalidEndDate_Empty("InvalidYear", "20155:09:28T07:14:49", "ERR_EndDateInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidEndDate_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidMonth")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidMonth")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EndDate", "2015:099:28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_EndDateInvalid")]
        public virtual void SubscriptionService_UpdateInvalidEndDate_Empty_InvalidMonth()
        {
            this.SubscriptionService_UpdateInvalidEndDate_Empty("InvalidMonth", "2015:099:28T07:14:49", "ERR_EndDateInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidEndDate_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EndDate", "2015:09:288T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_EndDateInvalid")]
        public virtual void SubscriptionService_UpdateInvalidEndDate_Empty_InvalidDate()
        {
            this.SubscriptionService_UpdateInvalidEndDate_Empty("InvalidDate", "2015:09:288T07:14:49", "ERR_EndDateInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidEndDate_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidHour")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidHour")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EndDate", "2015:09:28T070:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_EndDateInvalid")]
        public virtual void SubscriptionService_UpdateInvalidEndDate_Empty_InvalidHour()
        {
            this.SubscriptionService_UpdateInvalidEndDate_Empty("InvalidHour", "2015:09:28T070:14:49", "ERR_EndDateInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidEndDate_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidMinutes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidMinutes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EndDate", "2015:09:288T07:144:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_EndDateInvalid")]
        public virtual void SubscriptionService_UpdateInvalidEndDate_Empty_InvalidMinutes()
        {
            this.SubscriptionService_UpdateInvalidEndDate_Empty("InvalidMinutes", "2015:09:288T07:144:49", "ERR_EndDateInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidEndDate_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidSeconds")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidSeconds")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EndDate", "2015:09:288T07:14:499")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_EndDateInvalid")]
        public virtual void SubscriptionService_UpdateInvalidEndDate_Empty_InvalidSeconds()
        {
            this.SubscriptionService_UpdateInvalidEndDate_Empty("InvalidSeconds", "2015:09:288T07:14:499", "ERR_EndDateInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidAllOptionalFields_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        public virtual void SubscriptionService_UpdateInvalidAllOptionalFields_Empty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SubscriptionService_UpdateInvalidAllOptionalFields_Empty", new string[] {
                        "Automated",
                        "Regression",
                        "Negative",
                        "SubscriptionService",
                        "US9655"});
#line 370
this.ScenarioSetup(scenarioInfo);
#line 371
   testRunner.Given("SubscriptionService Is Ready To Verify \'SubscriptionService_UpdateInvalidAllOptio" +
                    "nalFields_Empty\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 372
  testRunner.And("SubscriptionServiceUpdate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 373
   testRunner.When("I Set Invalid SubscriptionServiceUpdate AssetUID To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 374
  testRunner.And("I Set Invalid SubscriptionServiceUpdate SubscriptionTypeID To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 375
  testRunner.And("I Set Invalid SubscriptionServiceUpdate StartDate To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 376
  testRunner.And("I Set Invalid SubscriptionServiceUpdate EndDate To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 377
     testRunner.And("I Post Invalid SubscriptionServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 378
      testRunner.Then("SubscriptionServiceUpdate Response With \'<ERR_SubscriptionUpdateInvalid>\' Should " +
                    "Be Returned", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void SubscriptionService_UpdateInvalidActionUTC(string description, string actionUTC, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "SubscriptionService",
                    "US9655"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SubscriptionService_UpdateInvalidActionUTC", @__tags);
#line 383
this.ScenarioSetup(scenarioInfo);
#line 384
   testRunner.Given(string.Format("SubscriptionService Is Ready To Verify \'{0}\'", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 385
  testRunner.And("SubscriptionServiceUpdate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 386
   testRunner.When(string.Format("I Set Invalid SubscriptionServiceUpdate ActionUTC To \'{0}\'", actionUTC), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 387
      testRunner.And("I Post Invalid SubscriptionServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 388
      testRunner.Then(string.Format("SubscriptionServiceUpdate Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsColon")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsColon")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:09:28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void SubscriptionService_UpdateInvalidActionUTC_ContainsColon()
        {
            this.SubscriptionService_UpdateInvalidActionUTC("ContainsColon", "2015:09:28T07:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsBackSlash")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsBackSlash")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015/09/28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void SubscriptionService_UpdateInvalidActionUTC_ContainsBackSlash()
        {
            this.SubscriptionService_UpdateInvalidActionUTC("ContainsBackSlash", "2015/09/28T07:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidYear")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidYear")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "20155:09:28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void SubscriptionService_UpdateInvalidActionUTC_InvalidYear()
        {
            this.SubscriptionService_UpdateInvalidActionUTC("InvalidYear", "20155:09:28T07:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidMonth")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidMonth")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:099:28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void SubscriptionService_UpdateInvalidActionUTC_InvalidMonth()
        {
            this.SubscriptionService_UpdateInvalidActionUTC("InvalidMonth", "2015:099:28T07:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:09:288T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void SubscriptionService_UpdateInvalidActionUTC_InvalidDate()
        {
            this.SubscriptionService_UpdateInvalidActionUTC("InvalidDate", "2015:09:288T07:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidHour")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidHour")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:09:28T070:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void SubscriptionService_UpdateInvalidActionUTC_InvalidHour()
        {
            this.SubscriptionService_UpdateInvalidActionUTC("InvalidHour", "2015:09:28T070:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidMinutes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidMinutes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:09:288T07:144:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void SubscriptionService_UpdateInvalidActionUTC_InvalidMinutes()
        {
            this.SubscriptionService_UpdateInvalidActionUTC("InvalidMinutes", "2015:09:288T07:144:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidSeconds")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidSeconds")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:09:288T07:14:499")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void SubscriptionService_UpdateInvalidActionUTC_InvalidSeconds()
        {
            this.SubscriptionService_UpdateInvalidActionUTC("InvalidSeconds", "2015:09:288T07:14:499", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SubscriptionService_UpdateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("SubscriptionService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US9655")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "EMPTY_EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void SubscriptionService_UpdateInvalidActionUTC_NULL()
        {
            this.SubscriptionService_UpdateInvalidActionUTC("NULL", "EMPTY_EMPTY", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
    }
}
#pragma warning restore
#endregion
