// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace VSS.VisionLink.MasterData.AcceptanceTests.Scenarios.GeofenceService
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class GeofenceServiceFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "GeofenceService.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Geofence Service", "\r\n References : A. Contract Document - None\r\n                         \r\n Dependen" +
                    "cies:  Internal -  Kafka Topic\r\n\r\n     User Story 8588:Geofence Service (Master " +
                    "Data Management)", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "Geofence Service")))
            {
                VSS.VisionLink.MasterData.AcceptanceTests.Scenarios.GeofenceService.GeofenceServiceFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sanity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        public virtual void GeofenceService_CreateHappyPath()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GeofenceService_CreateHappyPath", new string[] {
                        "Automated",
                        "Sanity",
                        "Positive",
                        "GeofenceService",
                        "US8588"});
#line 12
this.ScenarioSetup(scenarioInfo);
#line 13
   testRunner.Given("GeofenceService Is Ready To Verify \'GeofenceService_CreateHappyPath\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 14
  testRunner.And("GeofenceServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
   testRunner.When("I Post Valid GeofenceServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 16
   testRunner.Then("The Processed GeofenceServiceCreate Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_UpdateHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sanity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        public virtual void GeofenceService_UpdateHappyPath()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GeofenceService_UpdateHappyPath", new string[] {
                        "Automated",
                        "Sanity",
                        "Positive",
                        "GeofenceService",
                        "US8588"});
#line 20
this.ScenarioSetup(scenarioInfo);
#line 21
   testRunner.Given("GeofenceService Is Ready To Verify \'GeofenceService_UpdateHappyPath\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 22
  testRunner.And("GeofenceServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
   testRunner.When("I Post Valid GeofenceServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
      testRunner.Then("The Processed GeofenceServiceUpdate Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_DeleteHappyPath")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sanity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        public virtual void GeofenceService_DeleteHappyPath()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GeofenceService_DeleteHappyPath", new string[] {
                        "Automated",
                        "Sanity",
                        "Positive",
                        "GeofenceService",
                        "US8588"});
#line 28
this.ScenarioSetup(scenarioInfo);
#line 29
   testRunner.Given("GeofenceService Is Ready To Verify \'GeofenceService_DeleteHappyPath\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 30
  testRunner.And("GeofenceServiceDelete Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
    testRunner.When("I Post Valid GeofenceServiceDelete Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 32
      testRunner.Then("The Processed GeofenceServiceDelete Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateValidDescription_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        public virtual void GeofenceService_CreateValidDescription_Empty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GeofenceService_CreateValidDescription_Empty", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "GeofenceService",
                        "US8588"});
#line 36
this.ScenarioSetup(scenarioInfo);
#line 37
   testRunner.Given("GeofenceService Is Ready To Verify \'GeofenceService_CreateValidDescription_Empty\'" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 38
  testRunner.And("GeofenceServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
   testRunner.When("I Set GeofenceServiceCreate Description To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 40
     testRunner.And("I Post Valid GeofenceServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
      testRunner.Then("The Processed GeofenceServiceCreate Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateValidFillColor_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        public virtual void GeofenceService_CreateValidFillColor_Empty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GeofenceService_CreateValidFillColor_Empty", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "GeofenceService",
                        "US8588"});
#line 46
this.ScenarioSetup(scenarioInfo);
#line 47
   testRunner.Given("GeofenceService Is Ready To Verify \'GeofenceService_CreateValidFillColor_Empty\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 48
  testRunner.And("GeofenceServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
   testRunner.When("I Set GeofenceServiceCreate FillColor To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 50
     testRunner.And("I Post Valid GeofenceServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
      testRunner.Then("The Processed GeofenceServiceCreate Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void GeofenceService_CreateValidIsTransparent(string description, string isTransparent, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Positive",
                    "GeofenceService",
                    "US8588"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GeofenceService_CreateValidIsTransparent", @__tags);
#line 56
this.ScenarioSetup(scenarioInfo);
#line 57
   testRunner.Given("GeofenceService Is Ready To Verify \'GeofenceService_CreateValidIsTransparent\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 58
  testRunner.And("GeofenceServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 59
   testRunner.When(string.Format("I Set GeofenceServiceCreate IsTransparent To \'{0}\'", isTransparent), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 60
  testRunner.And("I Post Valid GeofenceServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 61
      testRunner.Then("The Processed GeofenceServiceCreate Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateValidIsTransparent")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InLowerCasetrue")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InLowerCasetrue")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IsTransparent", "true")]
        public virtual void GeofenceService_CreateValidIsTransparent_InLowerCasetrue()
        {
            this.GeofenceService_CreateValidIsTransparent("InLowerCasetrue", "true", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateValidIsTransparent")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InLowerCaseFalse")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InLowerCaseFalse")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IsTransparent", "false")]
        public virtual void GeofenceService_CreateValidIsTransparent_InLowerCaseFalse()
        {
            this.GeofenceService_CreateValidIsTransparent("InLowerCaseFalse", "false", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateValidIsTransparent")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InUpperCasetrue")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InUpperCasetrue")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IsTransparent", "TRUE")]
        public virtual void GeofenceService_CreateValidIsTransparent_InUpperCasetrue()
        {
            this.GeofenceService_CreateValidIsTransparent("InUpperCasetrue", "TRUE", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateValidIsTransparent")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InUpperCaseFalse")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InUpperCaseFalse")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IsTransparent", "FALSE")]
        public virtual void GeofenceService_CreateValidIsTransparent_InUpperCaseFalse()
        {
            this.GeofenceService_CreateValidIsTransparent("InUpperCaseFalse", "FALSE", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_UpdateValidGeofenceName_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        public virtual void GeofenceService_UpdateValidGeofenceName_Empty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GeofenceService_UpdateValidGeofenceName_Empty", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "GeofenceService",
                        "US8588"});
#line 71
this.ScenarioSetup(scenarioInfo);
#line 72
   testRunner.Given("GeofenceService Is Ready To Verify \'GeofenceService_UpdateValidGeofenceName_Empty" +
                    "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 73
  testRunner.And("GeofenceServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 74
   testRunner.When("I Set GeofenceServiceUpdate GeofenceName To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 75
  testRunner.And("I Post Valid GeofenceServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 76
      testRunner.Then("The Processed GeofenceServiceUpdate Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_UpdateValidDescription_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        public virtual void GeofenceService_UpdateValidDescription_Empty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GeofenceService_UpdateValidDescription_Empty", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "GeofenceService",
                        "US8588"});
#line 80
this.ScenarioSetup(scenarioInfo);
#line 81
   testRunner.Given("GeofenceService Is Ready To Verify \'GeofenceService_UpdateValidDescription_Empty\'" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 82
  testRunner.And("GeofenceServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 83
   testRunner.When("I Set GeofenceServiceUpdate Description To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 84
  testRunner.And("I Post Valid GeofenceServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 85
      testRunner.Then("The Processed GeofenceServiceUpdate Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_UpdateValidGeofenceType_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        public virtual void GeofenceService_UpdateValidGeofenceType_Empty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GeofenceService_UpdateValidGeofenceType_Empty", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "GeofenceService",
                        "US8588"});
#line 89
this.ScenarioSetup(scenarioInfo);
#line 90
   testRunner.Given("GeofenceService Is Ready To Verify \'GeofenceService_UpdateValidGeofenceType__Blan" +
                    "k\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 91
  testRunner.And("GeofenceServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 92
   testRunner.When("I Set GeofenceServiceUpdate GeofenceType To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 93
  testRunner.And("I Post Valid GeofenceServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 94
      testRunner.Then("The Processed GeofenceServiceUpdate Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_UpdateValidGeometryWKT_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        public virtual void GeofenceService_UpdateValidGeometryWKT_Empty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GeofenceService_UpdateValidGeometryWKT_Empty", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "GeofenceService",
                        "US8588"});
#line 98
this.ScenarioSetup(scenarioInfo);
#line 99
   testRunner.Given("GeofenceService Is Ready To Verify \'GeofenceService_UpdateValidGeometryWKT_Empty\'" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 100
  testRunner.And("GeofenceServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 101
   testRunner.When("I Set GeofenceServiceUpdate GeometryWKT To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 102
  testRunner.And("I Post Valid GeofenceServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 103
      testRunner.Then("The Processed GeofenceServiceUpdate Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_UpdateValidFillColor_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        public virtual void GeofenceService_UpdateValidFillColor_Empty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GeofenceService_UpdateValidFillColor_Empty", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "GeofenceService",
                        "US8588"});
#line 108
this.ScenarioSetup(scenarioInfo);
#line 109
   testRunner.Given("GeofenceService Is Ready To Verify \'GeofencetService_UpdateValidFillColor_Empty\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 110
  testRunner.And("GeofenceServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 111
    testRunner.When("I Set GeofenceServiceUpdate FillColor To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 112
  testRunner.And("I Post Valid GeofenceServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 113
       testRunner.Then("The Processed GeofenceServiceUpdate Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_UpdateValidIsTransparent_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        public virtual void GeofenceService_UpdateValidIsTransparent_Empty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GeofenceService_UpdateValidIsTransparent_Empty", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "GeofenceService",
                        "US8588"});
#line 117
this.ScenarioSetup(scenarioInfo);
#line 118
   testRunner.Given("GeofenceService Is Ready To Verify \'GeofenceService_UpdateValidIsTransparent_Empt" +
                    "y\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 119
  testRunner.And("GeofenceServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 120
   testRunner.When("I Set GeofenceServiceUpdate IsTransparent To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 121
     testRunner.And("I Post Valid GeofenceServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 122
      testRunner.Then("The Processed GeofenceServiceUpdate Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_UpdateValidAllOptionalAttributes_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Positive")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        public virtual void GeofenceService_UpdateValidAllOptionalAttributes_Empty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GeofenceService_UpdateValidAllOptionalAttributes_Empty", new string[] {
                        "Automated",
                        "Regression",
                        "Positive",
                        "GeofenceService",
                        "US8588"});
#line 126
this.ScenarioSetup(scenarioInfo);
#line 127
   testRunner.Given("GeofenceService Is Ready To Verify \'GeofenceService_UpdateValidAllOptionalAttribu" +
                    "tes_Empty\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 128
  testRunner.And("GeofenceServiceUpdate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 129
   testRunner.When("I Set GeofenceServiceUpdate GeofenceName To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 130
  testRunner.And("I Set GeofenceServiceUpdate Description To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 131
  testRunner.And("I Set GeofenceServiceUpdate GeofenceType To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 132
  testRunner.And("I Set GeofenceServiceUpdate GeometryWKT To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 133
  testRunner.And("I Set GeofenceServiceUpdate FillColor To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 134
  testRunner.And("I Set GeofenceServiceUpdate IsTransparent To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 135
  testRunner.And("I Post Valid GeofenceServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 136
      testRunner.Then("The Processed GeofenceServiceUpdate Message must be available in Kafka topic", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void GeofenceService_CreateInvalidCustomerUID(string description, string customerUID, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "GeofenceService",
                    "US8588"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GeofenceService_CreateInvalidCustomerUID", @__tags);
#line 140
this.ScenarioSetup(scenarioInfo);
#line 141
   testRunner.Given(string.Format("GeofenceService Is Ready To Verify \'{0}\'", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 142
  testRunner.And("GeofenceServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 143
   testRunner.When(string.Format("I Set Invalid GeofenceServiceCreate CustomerUID To \'{0}\'", customerUID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 144
      testRunner.And("I Post Invalid GeofenceServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 145
      testRunner.Then(string.Format("GeofenceServiceCreate Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateInvalidCustomerUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidLength")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidLength")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "c9ead99b-eea3-4605-92e2-1e6497b773")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_CustomerUIDInvalid")]
        public virtual void GeofenceService_CreateInvalidCustomerUID_InvalidLength()
        {
            this.GeofenceService_CreateInvalidCustomerUID("InvalidLength", "c9ead99b-eea3-4605-92e2-1e6497b773", "ERR_CustomerUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateInvalidCustomerUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "c9ead99b-eea3 4605-92e2-1e6497b77369")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_CustomerUIDInvalid")]
        public virtual void GeofenceService_CreateInvalidCustomerUID_ContainsSpace()
        {
            this.GeofenceService_CreateInvalidCustomerUID("ContainsSpace", "c9ead99b-eea3 4605-92e2-1e6497b77369", "ERR_CustomerUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateInvalidCustomerUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsUnderScore")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsUnderScore")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "9AB056CA_3514_E411_8AFE_24FD5231FB1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_CustomerUIDInvalid")]
        public virtual void GeofenceService_CreateInvalidCustomerUID_ContainsUnderScore()
        {
            this.GeofenceService_CreateInvalidCustomerUID("ContainsUnderScore", "9AB056CA_3514_E411_8AFE_24FD5231FB1F", "ERR_CustomerUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateInvalidCustomerUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NotInGUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NotInGUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "9AB056CA3-514-E411-8AFE-24FD5231FB1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_CustomerUIDInvalid")]
        public virtual void GeofenceService_CreateInvalidCustomerUID_NotInGUID()
        {
            this.GeofenceService_CreateInvalidCustomerUID("NotInGUID", "9AB056CA3-514-E411-8AFE-24FD5231FB1F", "ERR_CustomerUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateInvalidCustomerUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SplChar")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SplChar")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "9AB056CA3-514-E411-8AFE-24FD5231*B1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_CustomerUIDInvalid")]
        public virtual void GeofenceService_CreateInvalidCustomerUID_SplChar()
        {
            this.GeofenceService_CreateInvalidCustomerUID("SplChar", "9AB056CA3-514-E411-8AFE-24FD5231*B1F", "ERR_CustomerUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateInvalidCustomerUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Blank")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Blank")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CustomerUID", "EMPTY_EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_CustomerUIDInvalid")]
        public virtual void GeofenceService_CreateInvalidCustomerUID_Blank()
        {
            this.GeofenceService_CreateInvalidCustomerUID("Blank", "EMPTY_EMPTY", "ERR_CustomerUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateInvalidGeofenceName_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        public virtual void GeofenceService_CreateInvalidGeofenceName_Empty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GeofenceService_CreateInvalidGeofenceName_Empty", new string[] {
                        "Automated",
                        "Regression",
                        "Negative",
                        "GeofenceService",
                        "US8588"});
#line 157
this.ScenarioSetup(scenarioInfo);
#line 158
   testRunner.Given("GeofenceService Is Ready To Verify \'CreateInvalidGeofenceName_Empty\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 159
  testRunner.And("GeofenceServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 160
   testRunner.When("I Set Invalid GeofenceServiceCreate GeofenceName To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 161
     testRunner.And("I Post Invalid GeofenceServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 162
      testRunner.Then("GeofenceServiceCreate Response With \'ERR_GeofenceNameInvalid\' Should Be Returned", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateInvalidGeofenceType_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        public virtual void GeofenceService_CreateInvalidGeofenceType_Empty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GeofenceService_CreateInvalidGeofenceType_Empty", new string[] {
                        "Automated",
                        "Regression",
                        "Negative",
                        "GeofenceService",
                        "US8588"});
#line 166
this.ScenarioSetup(scenarioInfo);
#line 167
   testRunner.Given("GeofenceService Is Ready To Verify \'CreateInvalidGeofenceType_Empty\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 168
  testRunner.And("GeofenceServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 169
   testRunner.When("I Set Invalid GeofenceServiceCreate GeofenceType To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 170
     testRunner.And("I Post Invalid GeofenceServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 171
      testRunner.Then("GeofenceServiceCreate Response With \'ERR_GeofenceTypeInvalid\' Should Be Returned", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateInvalidGeometryWKT_Empty")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        public virtual void GeofenceService_CreateInvalidGeometryWKT_Empty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GeofenceService_CreateInvalidGeometryWKT_Empty", new string[] {
                        "Automated",
                        "Regression",
                        "Negative",
                        "GeofenceService",
                        "US8588"});
#line 175
this.ScenarioSetup(scenarioInfo);
#line 176
   testRunner.Given("GeofenceService Is Ready To Verify \'CreateInvalidGeometryWKT_Empty\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 177
  testRunner.And("GeofenceServiceCreate Request Is Setup With Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 178
   testRunner.When("I Set Invalid GeofenceServiceCreate GeometryWKT To \'NULL_NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 179
     testRunner.And("I Post Invalid GeofenceServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 180
      testRunner.Then("GeofenceServiceCreate Response With \'ERR_GeometryWKTInvalid\' Should Be Returned", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void GeofenceService_CreateInvalidFillColor(string description, string fillColor, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "GeofenceService",
                    "US8588"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GeofenceService_CreateInvalidFillColor", @__tags);
#line 184
this.ScenarioSetup(scenarioInfo);
#line 185
   testRunner.Given(string.Format("GeofenceService Is Ready To Verify \'{0}\'", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 186
  testRunner.And("GeofenceServiceCreate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 187
   testRunner.When(string.Format("I Set Invalid GeofenceServiceCreate FillColor To \'{0}\'", fillColor), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 188
      testRunner.And("I Post Invalid GeofenceServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 189
      testRunner.Then(string.Format("GeofenceServiceCreate Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateInvalidFillColor")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsString")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsString")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FillColor", "ABCD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_FillColorInvalid")]
        public virtual void GeofenceService_CreateInvalidFillColor_ContainsString()
        {
            this.GeofenceService_CreateInvalidFillColor("ContainsString", "ABCD", "ERR_FillColorInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateInvalidFillColor")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FillColor", "1 2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_FillColorInvalid")]
        public virtual void GeofenceService_CreateInvalidFillColor_ContainsSpace()
        {
            this.GeofenceService_CreateInvalidFillColor("ContainsSpace", "1 2", "ERR_FillColorInvalid", ((string[])(null)));
        }
        
        public virtual void GeofenceService_CreateInvalidIsTransparent(string description, string isTransparent, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "GeofenceService",
                    "US8588"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GeofenceService_CreateInvalidIsTransparent", @__tags);
#line 197
this.ScenarioSetup(scenarioInfo);
#line 198
   testRunner.Given(string.Format("GeofenceService Is Ready To Verify \'{0}\'", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 199
  testRunner.And("GeofenceServiceCreate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 200
   testRunner.When(string.Format("I Set Invalid GeofenceServiceCreate IsTransparent To \'{0}\'", isTransparent), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 201
      testRunner.And("I Post Invalid GeofenceServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 202
      testRunner.Then(string.Format("GeofenceServiceCreate Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateInvalidIsTransparent")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsString")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsString")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IsTransparent", "ABCD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_IsTransparentInvalid")]
        public virtual void GeofenceService_CreateInvalidIsTransparent_ContainsString()
        {
            this.GeofenceService_CreateInvalidIsTransparent("ContainsString", "ABCD", "ERR_IsTransparentInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateInvalidIsTransparent")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Containsnumber")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Containsnumber")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IsTransparent", "12")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_IsTransparentInvalid")]
        public virtual void GeofenceService_CreateInvalidIsTransparent_Containsnumber()
        {
            this.GeofenceService_CreateInvalidIsTransparent("Containsnumber", "12", "ERR_IsTransparentInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateInvalidIsTransparent")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Containsspace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Containsspace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IsTransparent", "tr ue")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_IsTransparentInvalid")]
        public virtual void GeofenceService_CreateInvalidIsTransparent_Containsspace()
        {
            this.GeofenceService_CreateInvalidIsTransparent("Containsspace", "tr ue", "ERR_IsTransparentInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateInvalidIsTransparent")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Containsspecialcharacher")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Containsspecialcharacher")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IsTransparent", "true*")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_IsTransparentInvalid")]
        public virtual void GeofenceService_CreateInvalidIsTransparent_Containsspecialcharacher()
        {
            this.GeofenceService_CreateInvalidIsTransparent("Containsspecialcharacher", "true*", "ERR_IsTransparentInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateInvalidIsTransparent")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IsTransparent", "NULL_NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_IsTransparentInvalid")]
        public virtual void GeofenceService_CreateInvalidIsTransparent_NULL()
        {
            this.GeofenceService_CreateInvalidIsTransparent("NULL", "NULL_NULL", "ERR_IsTransparentInvalid", ((string[])(null)));
        }
        
        public virtual void GeofenceService_CreateInvalidGeofenceUID(string description, string geofenceUID, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "GeofenceService",
                    "US8588"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GeofenceService_CreateInvalidGeofenceUID", @__tags);
#line 213
this.ScenarioSetup(scenarioInfo);
#line 214
   testRunner.Given(string.Format("GeofenceService Is Ready To Verify \'{0}\'", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 215
  testRunner.And("GeofenceServiceCreate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 216
   testRunner.When(string.Format("I Set Invalid GeofenceServiceCreate GeofenceUID To \'{0}\'", geofenceUID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 217
      testRunner.And("I Post Invalid GeofenceServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 218
      testRunner.Then(string.Format("GeofenceServiceCreate Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateInvalidGeofenceUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidLength")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidLength")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GeofenceUID", "c9ead99b-eea3-4605-92e2-1e6497b773")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_GeofenceUIDInvalid")]
        public virtual void GeofenceService_CreateInvalidGeofenceUID_InvalidLength()
        {
            this.GeofenceService_CreateInvalidGeofenceUID("InvalidLength", "c9ead99b-eea3-4605-92e2-1e6497b773", "ERR_GeofenceUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateInvalidGeofenceUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GeofenceUID", "c9ead99b-eea3 4605-92e2-1e6497b77369")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_GeofenceUIDInvalid")]
        public virtual void GeofenceService_CreateInvalidGeofenceUID_ContainsSpace()
        {
            this.GeofenceService_CreateInvalidGeofenceUID("ContainsSpace", "c9ead99b-eea3 4605-92e2-1e6497b77369", "ERR_GeofenceUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateInvalidGeofenceUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsUnderScore")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsUnderScore")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GeofenceUID", "9AB056CA_3514_E411_8AFE_24FD5231FB1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_GeofenceUIDInvalid")]
        public virtual void GeofenceService_CreateInvalidGeofenceUID_ContainsUnderScore()
        {
            this.GeofenceService_CreateInvalidGeofenceUID("ContainsUnderScore", "9AB056CA_3514_E411_8AFE_24FD5231FB1F", "ERR_GeofenceUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateInvalidGeofenceUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NotInGUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NotInGUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GeofenceUID", "9AB056CA3-514-E411-8AFE-24FD5231FB1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_GeofenceUIDInvalid")]
        public virtual void GeofenceService_CreateInvalidGeofenceUID_NotInGUID()
        {
            this.GeofenceService_CreateInvalidGeofenceUID("NotInGUID", "9AB056CA3-514-E411-8AFE-24FD5231FB1F", "ERR_GeofenceUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateInvalidGeofenceUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SplChar")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SplChar")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GeofenceUID", "9AB056CA3-514-E411-8AFE-24FD5231*B1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_GeofenceUIDInvalid")]
        public virtual void GeofenceService_CreateInvalidGeofenceUID_SplChar()
        {
            this.GeofenceService_CreateInvalidGeofenceUID("SplChar", "9AB056CA3-514-E411-8AFE-24FD5231*B1F", "ERR_GeofenceUIDInvalid", ((string[])(null)));
        }
        
        public virtual void GeofenceService_CreateInvalidUserUID(string description, string userUID, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "GeofenceService",
                    "US8588"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GeofenceService_CreateInvalidUserUID", @__tags);
#line 229
this.ScenarioSetup(scenarioInfo);
#line 230
   testRunner.Given(string.Format("GeofenceService Is Ready To Verify \'{0}\'", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 231
  testRunner.And("GeofenceServiceCreate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 232
   testRunner.When(string.Format("I Set Invalid GeofenceServiceCreate UserUID To \'{0}\'", userUID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 233
      testRunner.And("I Post Invalid GeofenceServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 234
      testRunner.Then(string.Format("GeofenceServiceCreate Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateInvalidUserUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidLength")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidLength")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserUID", "c9ead99b-eea3-4605-92e2-1e6497b773")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_UserUIDInvalid")]
        public virtual void GeofenceService_CreateInvalidUserUID_InvalidLength()
        {
            this.GeofenceService_CreateInvalidUserUID("InvalidLength", "c9ead99b-eea3-4605-92e2-1e6497b773", "ERR_UserUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateInvalidUserUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserUID", "c9ead99b-eea3 4605-92e2-1e6497b77369")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_UserUIDInvalid")]
        public virtual void GeofenceService_CreateInvalidUserUID_ContainsSpace()
        {
            this.GeofenceService_CreateInvalidUserUID("ContainsSpace", "c9ead99b-eea3 4605-92e2-1e6497b77369", "ERR_UserUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateInvalidUserUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsUnderScore")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsUnderScore")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserUID", "9AB056CA_3514_E411_8AFE_24FD5231FB1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_UserUIDInvalid")]
        public virtual void GeofenceService_CreateInvalidUserUID_ContainsUnderScore()
        {
            this.GeofenceService_CreateInvalidUserUID("ContainsUnderScore", "9AB056CA_3514_E411_8AFE_24FD5231FB1F", "ERR_UserUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateInvalidUserUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NotInGUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NotInGUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserUID", "9AB056CA3-514-E411-8AFE-24FD5231FB1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_UserUIDInvalid")]
        public virtual void GeofenceService_CreateInvalidUserUID_NotInGUID()
        {
            this.GeofenceService_CreateInvalidUserUID("NotInGUID", "9AB056CA3-514-E411-8AFE-24FD5231FB1F", "ERR_UserUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateInvalidUserUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SplChar")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SplChar")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserUID", "9AB056CA3-514-E411-8AFE-24FD5231*B1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_UserUIDInvalid")]
        public virtual void GeofenceService_CreateInvalidUserUID_SplChar()
        {
            this.GeofenceService_CreateInvalidUserUID("SplChar", "9AB056CA3-514-E411-8AFE-24FD5231*B1F", "ERR_UserUIDInvalid", ((string[])(null)));
        }
        
        public virtual void GeofenceService_CreateInvalidActionUTC(string description, string actionUTC, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "GeofenceService",
                    "US8588"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GeofenceService_CreateInvalidActionUTC", @__tags);
#line 245
this.ScenarioSetup(scenarioInfo);
#line 246
   testRunner.Given(string.Format("GeofenceService Is Ready To Verify \'{0}\'", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 247
  testRunner.And("GeofenceServiceCreate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 248
   testRunner.When(string.Format("I Set Invalid GeofenceServiceCreate ActionUTC To \'{0}\'", actionUTC), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 249
      testRunner.And("I Post Invalid GeofenceServiceCreate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 250
      testRunner.Then(string.Format("GeofenceServiceCreate Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsColon")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsColon")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:09:28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void GeofenceService_CreateInvalidActionUTC_ContainsColon()
        {
            this.GeofenceService_CreateInvalidActionUTC("ContainsColon", "2015:09:28T07:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsBackSlash")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsBackSlash")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015/09/28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void GeofenceService_CreateInvalidActionUTC_ContainsBackSlash()
        {
            this.GeofenceService_CreateInvalidActionUTC("ContainsBackSlash", "2015/09/28T07:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidYear")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidYear")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "20155:09:28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void GeofenceService_CreateInvalidActionUTC_InvalidYear()
        {
            this.GeofenceService_CreateInvalidActionUTC("InvalidYear", "20155:09:28T07:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidMonth")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidMonth")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:099:28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void GeofenceService_CreateInvalidActionUTC_InvalidMonth()
        {
            this.GeofenceService_CreateInvalidActionUTC("InvalidMonth", "2015:099:28T07:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:09:288T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void GeofenceService_CreateInvalidActionUTC_InvalidDate()
        {
            this.GeofenceService_CreateInvalidActionUTC("InvalidDate", "2015:09:288T07:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidHour")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidHour")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:09:28T070:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void GeofenceService_CreateInvalidActionUTC_InvalidHour()
        {
            this.GeofenceService_CreateInvalidActionUTC("InvalidHour", "2015:09:28T070:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidMinutes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidMinutes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:09:288T07:144:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void GeofenceService_CreateInvalidActionUTC_InvalidMinutes()
        {
            this.GeofenceService_CreateInvalidActionUTC("InvalidMinutes", "2015:09:288T07:144:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidSeconds")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidSeconds")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:09:288T07:14:499")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void GeofenceService_CreateInvalidActionUTC_InvalidSeconds()
        {
            this.GeofenceService_CreateInvalidActionUTC("InvalidSeconds", "2015:09:288T07:14:499", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_CreateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "EMPTY_EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void GeofenceService_CreateInvalidActionUTC_NULL()
        {
            this.GeofenceService_CreateInvalidActionUTC("NULL", "EMPTY_EMPTY", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        public virtual void GeofenceService_UpdateInvalidFillColor(string description, string fillColor, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "GeofenceService",
                    "US8588"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GeofenceService_UpdateInvalidFillColor", @__tags);
#line 265
this.ScenarioSetup(scenarioInfo);
#line 266
   testRunner.Given(string.Format("GeofenceService Is Ready To Verify \'{0}\'", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 267
  testRunner.And("GeofenceServiceUpdate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 268
   testRunner.When(string.Format("I Set Invalid GeofenceServiceUpdate FillColor To \'{0}\'", fillColor), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 269
      testRunner.And("I Post Invalid GeofenceServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 270
      testRunner.Then(string.Format("GeofenceServiceUpdate Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_UpdateInvalidFillColor")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsString")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsString")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FillColor", "ABCD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_FillColorInvalid")]
        public virtual void GeofenceService_UpdateInvalidFillColor_ContainsString()
        {
            this.GeofenceService_UpdateInvalidFillColor("ContainsString", "ABCD", "ERR_FillColorInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_UpdateInvalidFillColor")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FillColor", "1 2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_FillColorInvalid")]
        public virtual void GeofenceService_UpdateInvalidFillColor_ContainsSpace()
        {
            this.GeofenceService_UpdateInvalidFillColor("ContainsSpace", "1 2", "ERR_FillColorInvalid", ((string[])(null)));
        }
        
        public virtual void GeofenceService_UpdateInvalidIsTransparent(string description, string isTransparent, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "GeofenceService",
                    "US8588"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GeofenceService_UpdateInvalidIsTransparent", @__tags);
#line 278
this.ScenarioSetup(scenarioInfo);
#line 279
   testRunner.Given(string.Format("GeofenceService Is Ready To Verify \'{0}\'", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 280
  testRunner.And("GeofenceServiceUpdate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 281
   testRunner.When(string.Format("I Set Invalid GeofenceServiceUpdate IsTransparent To \'{0}\'", isTransparent), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 282
      testRunner.And("I Post Invalid GeofenceServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 283
      testRunner.Then(string.Format("GeofenceServiceUpdate Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_UpdateInvalidIsTransparent")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsString")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsString")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IsTransparent", "ABCD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_IsTransparentInvalid")]
        public virtual void GeofenceService_UpdateInvalidIsTransparent_ContainsString()
        {
            this.GeofenceService_UpdateInvalidIsTransparent("ContainsString", "ABCD", "ERR_IsTransparentInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_UpdateInvalidIsTransparent")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Containsnumber")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Containsnumber")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IsTransparent", "12")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_IsTransparentInvalid")]
        public virtual void GeofenceService_UpdateInvalidIsTransparent_Containsnumber()
        {
            this.GeofenceService_UpdateInvalidIsTransparent("Containsnumber", "12", "ERR_IsTransparentInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_UpdateInvalidIsTransparent")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Containsspace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Containsspace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IsTransparent", "tr ue")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_IsTransparentInvalid")]
        public virtual void GeofenceService_UpdateInvalidIsTransparent_Containsspace()
        {
            this.GeofenceService_UpdateInvalidIsTransparent("Containsspace", "tr ue", "ERR_IsTransparentInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_UpdateInvalidIsTransparent")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Containsspecialcharacher")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "Containsspecialcharacher")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IsTransparent", "true*")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_IsTransparentInvalid")]
        public virtual void GeofenceService_UpdateInvalidIsTransparent_Containsspecialcharacher()
        {
            this.GeofenceService_UpdateInvalidIsTransparent("Containsspecialcharacher", "true*", "ERR_IsTransparentInvalid", ((string[])(null)));
        }
        
        public virtual void GeofenceService_UpdateInvalidGeofenceUID(string description, string geofenceUID, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "GeofenceService",
                    "US8588"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GeofenceService_UpdateInvalidGeofenceUID", @__tags);
#line 293
this.ScenarioSetup(scenarioInfo);
#line 294
   testRunner.Given(string.Format("GeofenceService Is Ready To Verify \'{0}\'", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 295
  testRunner.And("GeofenceServiceUpdate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 296
   testRunner.When(string.Format("I Set Invalid GeofenceServiceUpdate GeofenceUID To \'{0}\'", geofenceUID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 297
      testRunner.And("I Post Invalid GeofenceServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 298
      testRunner.Then(string.Format("GeofenceServiceUpdate Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_UpdateInvalidGeofenceUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidLength")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidLength")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GeofenceUID", "c9ead99b-eea3-4605-92e2-1e6497b773")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_GeofenceUIDInvalid")]
        public virtual void GeofenceService_UpdateInvalidGeofenceUID_InvalidLength()
        {
            this.GeofenceService_UpdateInvalidGeofenceUID("InvalidLength", "c9ead99b-eea3-4605-92e2-1e6497b773", "ERR_GeofenceUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_UpdateInvalidGeofenceUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GeofenceUID", "c9ead99b-eea3 4605-92e2-1e6497b77369")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_GeofenceUIDInvalid")]
        public virtual void GeofenceService_UpdateInvalidGeofenceUID_ContainsSpace()
        {
            this.GeofenceService_UpdateInvalidGeofenceUID("ContainsSpace", "c9ead99b-eea3 4605-92e2-1e6497b77369", "ERR_GeofenceUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_UpdateInvalidGeofenceUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsUnderScore")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsUnderScore")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GeofenceUID", "9AB056CA_3514_E411_8AFE_24FD5231FB1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_GeofenceUIDInvalid")]
        public virtual void GeofenceService_UpdateInvalidGeofenceUID_ContainsUnderScore()
        {
            this.GeofenceService_UpdateInvalidGeofenceUID("ContainsUnderScore", "9AB056CA_3514_E411_8AFE_24FD5231FB1F", "ERR_GeofenceUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_UpdateInvalidGeofenceUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NotInGUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NotInGUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GeofenceUID", "9AB056CA3-514-E411-8AFE-24FD5231FB1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_GeofenceUIDInvalid")]
        public virtual void GeofenceService_UpdateInvalidGeofenceUID_NotInGUID()
        {
            this.GeofenceService_UpdateInvalidGeofenceUID("NotInGUID", "9AB056CA3-514-E411-8AFE-24FD5231FB1F", "ERR_GeofenceUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_UpdateInvalidGeofenceUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SplChar")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SplChar")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GeofenceUID", "9AB056CA3-514-E411-8AFE-24FD5231*B1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_GeofenceUIDInvalid")]
        public virtual void GeofenceService_UpdateInvalidGeofenceUID_SplChar()
        {
            this.GeofenceService_UpdateInvalidGeofenceUID("SplChar", "9AB056CA3-514-E411-8AFE-24FD5231*B1F", "ERR_GeofenceUIDInvalid", ((string[])(null)));
        }
        
        public virtual void GeofenceService_UpdateInvalidUserUID(string description, string userUID, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "GeofenceService",
                    "US8588"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GeofenceService_UpdateInvalidUserUID", @__tags);
#line 309
this.ScenarioSetup(scenarioInfo);
#line 310
   testRunner.Given(string.Format("GeofenceService Is Ready To Verify \'{0}\'", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 311
  testRunner.And("GeofenceServiceUpdate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 312
   testRunner.When(string.Format("I Set Invalid GeofenceServiceUpdate UserUID To \'{0}\'", userUID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 313
      testRunner.And("I Post Invalid GeofenceServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 314
      testRunner.Then(string.Format("GeofenceServiceUpdate Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_UpdateInvalidUserUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidLength")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidLength")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserUID", "c9ead99b-eea3-4605-92e2-1e6497b773")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_UserUIDInvalid")]
        public virtual void GeofenceService_UpdateInvalidUserUID_InvalidLength()
        {
            this.GeofenceService_UpdateInvalidUserUID("InvalidLength", "c9ead99b-eea3-4605-92e2-1e6497b773", "ERR_UserUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_UpdateInvalidUserUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserUID", "c9ead99b-eea3 4605-92e2-1e6497b77369")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_UserUIDInvalid")]
        public virtual void GeofenceService_UpdateInvalidUserUID_ContainsSpace()
        {
            this.GeofenceService_UpdateInvalidUserUID("ContainsSpace", "c9ead99b-eea3 4605-92e2-1e6497b77369", "ERR_UserUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_UpdateInvalidUserUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsUnderScore")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsUnderScore")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserUID", "9AB056CA_3514_E411_8AFE_24FD5231FB1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_UserUIDInvalid")]
        public virtual void GeofenceService_UpdateInvalidUserUID_ContainsUnderScore()
        {
            this.GeofenceService_UpdateInvalidUserUID("ContainsUnderScore", "9AB056CA_3514_E411_8AFE_24FD5231FB1F", "ERR_UserUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_UpdateInvalidUserUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NotInGUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NotInGUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserUID", "9AB056CA3-514-E411-8AFE-24FD5231FB1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_UserUIDInvalid")]
        public virtual void GeofenceService_UpdateInvalidUserUID_NotInGUID()
        {
            this.GeofenceService_UpdateInvalidUserUID("NotInGUID", "9AB056CA3-514-E411-8AFE-24FD5231FB1F", "ERR_UserUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_UpdateInvalidUserUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SplChar")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SplChar")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserUID", "9AB056CA3-514-E411-8AFE-24FD5231*B1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_UserUIDInvalid")]
        public virtual void GeofenceService_UpdateInvalidUserUID_SplChar()
        {
            this.GeofenceService_UpdateInvalidUserUID("SplChar", "9AB056CA3-514-E411-8AFE-24FD5231*B1F", "ERR_UserUIDInvalid", ((string[])(null)));
        }
        
        public virtual void GeofenceService_UpdateInvalidActionUTC(string description, string actionUTC, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "GeofenceService",
                    "US8588"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GeofenceService_UpdateInvalidActionUTC", @__tags);
#line 325
this.ScenarioSetup(scenarioInfo);
#line 326
   testRunner.Given(string.Format("GeofenceService Is Ready To Verify \'{0}\'", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 327
  testRunner.And("GeofenceServiceUpdate Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 328
   testRunner.When(string.Format("I Set Invalid GeofenceServiceUpdate ActionUTC To \'{0}\'", actionUTC), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 329
      testRunner.And("I Post Invalid GeofenceServiceUpdate Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 330
      testRunner.Then(string.Format("GeofenceServiceUpdate Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_UpdateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsColon")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsColon")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:09:28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void GeofenceService_UpdateInvalidActionUTC_ContainsColon()
        {
            this.GeofenceService_UpdateInvalidActionUTC("ContainsColon", "2015:09:28T07:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_UpdateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsBackSlash")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsBackSlash")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015/09/28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void GeofenceService_UpdateInvalidActionUTC_ContainsBackSlash()
        {
            this.GeofenceService_UpdateInvalidActionUTC("ContainsBackSlash", "2015/09/28T07:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_UpdateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidYear")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidYear")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "20155:09:28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void GeofenceService_UpdateInvalidActionUTC_InvalidYear()
        {
            this.GeofenceService_UpdateInvalidActionUTC("InvalidYear", "20155:09:28T07:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_UpdateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidMonth")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidMonth")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:099:28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void GeofenceService_UpdateInvalidActionUTC_InvalidMonth()
        {
            this.GeofenceService_UpdateInvalidActionUTC("InvalidMonth", "2015:099:28T07:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_UpdateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:09:288T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void GeofenceService_UpdateInvalidActionUTC_InvalidDate()
        {
            this.GeofenceService_UpdateInvalidActionUTC("InvalidDate", "2015:09:288T07:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_UpdateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidHour")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidHour")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:09:28T070:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void GeofenceService_UpdateInvalidActionUTC_InvalidHour()
        {
            this.GeofenceService_UpdateInvalidActionUTC("InvalidHour", "2015:09:28T070:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_UpdateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidMinutes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidMinutes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:09:288T07:144:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void GeofenceService_UpdateInvalidActionUTC_InvalidMinutes()
        {
            this.GeofenceService_UpdateInvalidActionUTC("InvalidMinutes", "2015:09:288T07:144:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_UpdateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidSeconds")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidSeconds")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:09:288T07:14:499")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void GeofenceService_UpdateInvalidActionUTC_InvalidSeconds()
        {
            this.GeofenceService_UpdateInvalidActionUTC("InvalidSeconds", "2015:09:288T07:14:499", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_UpdateInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "EMPTY_EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void GeofenceService_UpdateInvalidActionUTC_NULL()
        {
            this.GeofenceService_UpdateInvalidActionUTC("NULL", "EMPTY_EMPTY", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        public virtual void GeofenceService_DeleteInvalidGeofenceUID(string description, string geofenceUID, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "GeofenceService",
                    "US8588"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GeofenceService_DeleteInvalidGeofenceUID", @__tags);
#line 345
this.ScenarioSetup(scenarioInfo);
#line 346
   testRunner.Given(string.Format("GeofenceService Is Ready To Verify \'{0}\'", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 347
  testRunner.And("GeofenceServiceDelete Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 348
   testRunner.When(string.Format("I Set Invalid GeofenceServiceDelete GeofenceUID To \'{0}\'", geofenceUID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 349
      testRunner.And("I Post Invalid GeofenceServiceDelete Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 350
      testRunner.Then(string.Format("GeofenceServiceDelete Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_DeleteInvalidGeofenceUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidLength")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidLength")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GeofenceUID", "c9ead99b-eea3-4605-92e2-1e6497b773")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_GeofenceUIDInvalid")]
        public virtual void GeofenceService_DeleteInvalidGeofenceUID_InvalidLength()
        {
            this.GeofenceService_DeleteInvalidGeofenceUID("InvalidLength", "c9ead99b-eea3-4605-92e2-1e6497b773", "ERR_GeofenceUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_DeleteInvalidGeofenceUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GeofenceUID", "c9ead99b-eea3 4605-92e2-1e6497b77369")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_GeofenceUIDInvalid")]
        public virtual void GeofenceService_DeleteInvalidGeofenceUID_ContainsSpace()
        {
            this.GeofenceService_DeleteInvalidGeofenceUID("ContainsSpace", "c9ead99b-eea3 4605-92e2-1e6497b77369", "ERR_GeofenceUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_DeleteInvalidGeofenceUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsUnderScore")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsUnderScore")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GeofenceUID", "9AB056CA_3514_E411_8AFE_24FD5231FB1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_GeofenceUIDInvalid")]
        public virtual void GeofenceService_DeleteInvalidGeofenceUID_ContainsUnderScore()
        {
            this.GeofenceService_DeleteInvalidGeofenceUID("ContainsUnderScore", "9AB056CA_3514_E411_8AFE_24FD5231FB1F", "ERR_GeofenceUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_DeleteInvalidGeofenceUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NotInGUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NotInGUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GeofenceUID", "9AB056CA3-514-E411-8AFE-24FD5231FB1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_GeofenceUIDInvalid")]
        public virtual void GeofenceService_DeleteInvalidGeofenceUID_NotInGUID()
        {
            this.GeofenceService_DeleteInvalidGeofenceUID("NotInGUID", "9AB056CA3-514-E411-8AFE-24FD5231FB1F", "ERR_GeofenceUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_DeleteInvalidGeofenceUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SplChar")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SplChar")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GeofenceUID", "9AB056CA3-514-E411-8AFE-24FD5231*B1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_GeofenceUIDInvalid")]
        public virtual void GeofenceService_DeleteInvalidGeofenceUID_SplChar()
        {
            this.GeofenceService_DeleteInvalidGeofenceUID("SplChar", "9AB056CA3-514-E411-8AFE-24FD5231*B1F", "ERR_GeofenceUIDInvalid", ((string[])(null)));
        }
        
        public virtual void GeofenceService_DeleteInvalidUserUID(string description, string userUID, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "GeofenceService",
                    "US8588"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GeofenceService_DeleteInvalidUserUID", @__tags);
#line 361
this.ScenarioSetup(scenarioInfo);
#line 362
   testRunner.Given(string.Format("GeofenceService Is Ready To Verify \'{0}\'", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 363
  testRunner.And("GeofenceServiceDelete Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 364
   testRunner.When(string.Format("I Set Invalid GeofenceServiceDelete UserUID To \'{0}\'", userUID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 365
      testRunner.And("I Post Invalid GeofenceServiceDelete Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 366
      testRunner.Then(string.Format("GeofenceServiceDelete Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_DeleteInvalidUserUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidLength")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidLength")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserUID", "c9ead99b-eea3-4605-92e2-1e6497b773")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_UserUIDInvalid")]
        public virtual void GeofenceService_DeleteInvalidUserUID_InvalidLength()
        {
            this.GeofenceService_DeleteInvalidUserUID("InvalidLength", "c9ead99b-eea3-4605-92e2-1e6497b773", "ERR_UserUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_DeleteInvalidUserUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsSpace")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserUID", "c9ead99b-eea3 4605-92e2-1e6497b77369")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_UserUIDInvalid")]
        public virtual void GeofenceService_DeleteInvalidUserUID_ContainsSpace()
        {
            this.GeofenceService_DeleteInvalidUserUID("ContainsSpace", "c9ead99b-eea3 4605-92e2-1e6497b77369", "ERR_UserUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_DeleteInvalidUserUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsUnderScore")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsUnderScore")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserUID", "9AB056CA_3514_E411_8AFE_24FD5231FB1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_UserUIDInvalid")]
        public virtual void GeofenceService_DeleteInvalidUserUID_ContainsUnderScore()
        {
            this.GeofenceService_DeleteInvalidUserUID("ContainsUnderScore", "9AB056CA_3514_E411_8AFE_24FD5231FB1F", "ERR_UserUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_DeleteInvalidUserUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NotInGUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NotInGUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserUID", "9AB056CA3-514-E411-8AFE-24FD5231FB1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_UserUIDInvalid")]
        public virtual void GeofenceService_DeleteInvalidUserUID_NotInGUID()
        {
            this.GeofenceService_DeleteInvalidUserUID("NotInGUID", "9AB056CA3-514-E411-8AFE-24FD5231FB1F", "ERR_UserUIDInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_DeleteInvalidUserUID")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SplChar")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "SplChar")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserUID", "9AB056CA3-514-E411-8AFE-24FD5231*B1F")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_UserUIDInvalid")]
        public virtual void GeofenceService_DeleteInvalidUserUID_SplChar()
        {
            this.GeofenceService_DeleteInvalidUserUID("SplChar", "9AB056CA3-514-E411-8AFE-24FD5231*B1F", "ERR_UserUIDInvalid", ((string[])(null)));
        }
        
        public virtual void GeofenceService_DeleteInvalidActionUTC(string description, string actionUTC, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automated",
                    "Regression",
                    "Negative",
                    "GeofenceService",
                    "US8588"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GeofenceService_DeleteInvalidActionUTC", @__tags);
#line 377
this.ScenarioSetup(scenarioInfo);
#line 378
   testRunner.Given(string.Format("GeofenceService Is Ready To Verify \'{0}\'", description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 379
  testRunner.And("GeofenceServiceDelete Request Is Setup With Invalid Default Values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 380
   testRunner.When(string.Format("I Set Invalid GeofenceServiceDelete ActionUTC To \'{0}\'", actionUTC), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 381
      testRunner.And("I Post Invalid GeofenceServiceDelete Request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 382
      testRunner.Then(string.Format("GeofenceServiceDelete Response With \'{0}\' Should Be Returned", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_DeleteInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsColon")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsColon")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:09:28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void GeofenceService_DeleteInvalidActionUTC_ContainsColon()
        {
            this.GeofenceService_DeleteInvalidActionUTC("ContainsColon", "2015:09:28T07:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_DeleteInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "ContainsBackSlash")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "ContainsBackSlash")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015/09/28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void GeofenceService_DeleteInvalidActionUTC_ContainsBackSlash()
        {
            this.GeofenceService_DeleteInvalidActionUTC("ContainsBackSlash", "2015/09/28T07:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_DeleteInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidYear")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidYear")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "20155:09:28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void GeofenceService_DeleteInvalidActionUTC_InvalidYear()
        {
            this.GeofenceService_DeleteInvalidActionUTC("InvalidYear", "20155:09:28T07:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_DeleteInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidMonth")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidMonth")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:099:28T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void GeofenceService_DeleteInvalidActionUTC_InvalidMonth()
        {
            this.GeofenceService_DeleteInvalidActionUTC("InvalidMonth", "2015:099:28T07:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_DeleteInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:09:288T07:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void GeofenceService_DeleteInvalidActionUTC_InvalidDate()
        {
            this.GeofenceService_DeleteInvalidActionUTC("InvalidDate", "2015:09:288T07:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_DeleteInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidHour")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidHour")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:09:28T070:14:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void GeofenceService_DeleteInvalidActionUTC_InvalidHour()
        {
            this.GeofenceService_DeleteInvalidActionUTC("InvalidHour", "2015:09:28T070:14:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_DeleteInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidMinutes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidMinutes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:09:288T07:144:49")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void GeofenceService_DeleteInvalidActionUTC_InvalidMinutes()
        {
            this.GeofenceService_DeleteInvalidActionUTC("InvalidMinutes", "2015:09:288T07:144:49", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_DeleteInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InvalidSeconds")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "InvalidSeconds")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "2015:09:288T07:14:499")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void GeofenceService_DeleteInvalidActionUTC_InvalidSeconds()
        {
            this.GeofenceService_DeleteInvalidActionUTC("InvalidSeconds", "2015:09:288T07:14:499", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("GeofenceService_DeleteInvalidActionUTC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Geofence Service")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Automated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Negative")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GeofenceService")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("US8588")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "NULL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ActionUTC", "EMPTY_EMPTY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ErrorMessage", "ERR_ActionUTCInvalid")]
        public virtual void GeofenceService_DeleteInvalidActionUTC_NULL()
        {
            this.GeofenceService_DeleteInvalidActionUTC("NULL", "EMPTY_EMPTY", "ERR_ActionUTCInvalid", ((string[])(null)));
        }
    }
}
#pragma warning restore
#endregion
